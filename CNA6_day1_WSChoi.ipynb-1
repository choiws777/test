{
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "colab": {
      "name": "CNA6_day1_WSChoi.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/choiws777/test/blob/master/CNA6_day1_WSChoi.ipynb-1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bae538fd-c499-4cad-887e-eea8320045ce"
      },
      "source": [
        "---"
      ],
      "id": "bae538fd-c499-4cad-887e-eea8320045ce"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c85ca4e1-3995-4a34-b690-e16b6e6fae6f"
      },
      "source": [
        "# <center>파이썬 복습</center>"
      ],
      "id": "c85ca4e1-3995-4a34-b690-e16b6e6fae6f"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9cc38190-0ed0-4346-ae0f-ea9156a220e1"
      },
      "source": [
        "---"
      ],
      "id": "9cc38190-0ed0-4346-ae0f-ea9156a220e1"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "501407c0-71a0-404c-a283-966b3be48e06"
      },
      "source": [
        "# 파이썬 시작하기"
      ],
      "id": "501407c0-71a0-404c-a283-966b3be48e06"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e27c8495-3c2e-4951-a905-c744e2a64813"
      },
      "source": [
        "## 0. 사칙연산 - 구글 코랩으로 파이썬 코드 실행하기"
      ],
      "id": "e27c8495-3c2e-4951-a905-c744e2a64813"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c7269c0a-1063-43b1-8cf6-f86bc4f4b9a3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4c52e8ba-bd2b-4a65-9668-fb270c922c33"
      },
      "source": [
        "12/2"
      ],
      "id": "c7269c0a-1063-43b1-8cf6-f86bc4f4b9a3",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.0"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s66EhOLhXSBu",
        "outputId": "a41bdab4-c87c-48e7-8113-94a26c37483b"
      },
      "source": [
        "5 %2"
      ],
      "id": "s66EhOLhXSBu",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6da36938-9f48-472c-9bda-ad5988063898"
      },
      "source": [
        "## 1. print 명령을 활용하여, 화면에 \"DB CNA 6기\" 라는 문자열을 출력합니다."
      ],
      "id": "6da36938-9f48-472c-9bda-ad5988063898"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2a74ef84-041d-49f9-94dc-de37128885d8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "76558c04-1c57-4b99-ac2c-204e5946f79d"
      },
      "source": [
        "print('DB CNA 6기')"
      ],
      "id": "2a74ef84-041d-49f9-94dc-de37128885d8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DB CNA 6기\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a66d5ea2-7291-439e-accc-0f068764e6b3"
      },
      "source": [
        "## 2. print 명령을 활용하여, 1부터 5까지 자연수를 화면에 출력합니다. "
      ],
      "id": "a66d5ea2-7291-439e-accc-0f068764e6b3"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "864bfd10-c72b-49c1-ab8f-00e345871ed5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "df36b9cc-59ed-429c-b6a5-8c25259482b5"
      },
      "source": [
        "print(1, 2, 34, 5)"
      ],
      "id": "864bfd10-c72b-49c1-ab8f-00e345871ed5",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 2 34 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "812fb881-e2cb-4021-809b-65d150345f7a"
      },
      "source": [
        "# 파이썬을 활용한 데이터 분석?  \n",
        "엑셀 파일(netflix_titles.xlsx)을 구글 코랩 폴더에 업로드합니다"
      ],
      "id": "812fb881-e2cb-4021-809b-65d150345f7a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4aafca2f-5c37-44a1-b0e2-5b5286bb8ee7"
      },
      "source": [
        "# 라이브러리 활용\n",
        "import pandas as pd"
      ],
      "id": "4aafca2f-5c37-44a1-b0e2-5b5286bb8ee7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IVBi5quqcNOH"
      },
      "source": [
        "넥플릭스테스트 = pd.read_excel('/content/netflix_titles.xlsx')"
      ],
      "id": "IVBi5quqcNOH",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "id": "P_7INk5VgR8J",
        "outputId": "b04d9311-4d1a-4576-99ed-4100e828118e"
      },
      "source": [
        "넥플릭스테스트"
      ],
      "id": "P_7INk5VgR8J",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>show_id</th>\n",
              "      <th>type</th>\n",
              "      <th>title</th>\n",
              "      <th>director</th>\n",
              "      <th>cast</th>\n",
              "      <th>country</th>\n",
              "      <th>date_added</th>\n",
              "      <th>release_year</th>\n",
              "      <th>rating</th>\n",
              "      <th>duration</th>\n",
              "      <th>listed_in</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>s1</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>3%</td>\n",
              "      <td>NaN</td>\n",
              "      <td>João Miguel, Bianca Comparato, Michel Gomes, R...</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>August 14, 2020</td>\n",
              "      <td>2020</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>4 Seasons</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Sci-Fi &amp;...</td>\n",
              "      <td>In a future where the elite inhabit an island ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>s2</td>\n",
              "      <td>Movie</td>\n",
              "      <td>7:19</td>\n",
              "      <td>Jorge Michel Grau</td>\n",
              "      <td>Demián Bichir, Héctor Bonilla, Oscar Serrano, ...</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>December 23, 2016</td>\n",
              "      <td>2016</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>93 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>After a devastating earthquake hits Mexico Cit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>s3</td>\n",
              "      <td>Movie</td>\n",
              "      <td>23:59</td>\n",
              "      <td>Gilbert Chan</td>\n",
              "      <td>Tedd Chan, Stella Chung, Henley Hii, Lawrence ...</td>\n",
              "      <td>Singapore</td>\n",
              "      <td>December 20, 2018</td>\n",
              "      <td>2011</td>\n",
              "      <td>R</td>\n",
              "      <td>78 min</td>\n",
              "      <td>Horror Movies, International Movies</td>\n",
              "      <td>When an army recruit is found dead, his fellow...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>s4</td>\n",
              "      <td>Movie</td>\n",
              "      <td>9</td>\n",
              "      <td>Shane Acker</td>\n",
              "      <td>Elijah Wood, John C. Reilly, Jennifer Connelly...</td>\n",
              "      <td>United States</td>\n",
              "      <td>November 16, 2017</td>\n",
              "      <td>2009</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>80 min</td>\n",
              "      <td>Action &amp; Adventure, Independent Movies, Sci-Fi...</td>\n",
              "      <td>In a postapocalyptic world, rag-doll robots hi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>s5</td>\n",
              "      <td>Movie</td>\n",
              "      <td>21</td>\n",
              "      <td>Robert Luketic</td>\n",
              "      <td>Jim Sturgess, Kevin Spacey, Kate Bosworth, Aar...</td>\n",
              "      <td>United States</td>\n",
              "      <td>January 1, 2020</td>\n",
              "      <td>2008</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>123 min</td>\n",
              "      <td>Dramas</td>\n",
              "      <td>A brilliant group of students become card-coun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7782</th>\n",
              "      <td>s7783</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zozo</td>\n",
              "      <td>Josef Fares</td>\n",
              "      <td>Imad Creidi, Antoinette Turk, Elias Gergi, Car...</td>\n",
              "      <td>Sweden, Czech Republic, United Kingdom, Denmar...</td>\n",
              "      <td>October 19, 2020</td>\n",
              "      <td>2005</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>99 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>When Lebanon's Civil War deprives Zozo of his ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7783</th>\n",
              "      <td>s7784</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zubaan</td>\n",
              "      <td>Mozez Singh</td>\n",
              "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
              "      <td>India</td>\n",
              "      <td>March 2, 2019</td>\n",
              "      <td>2015</td>\n",
              "      <td>TV-14</td>\n",
              "      <td>111 min</td>\n",
              "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
              "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7784</th>\n",
              "      <td>s7785</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zulu Man in Japan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nasty C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>September 25, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>44 min</td>\n",
              "      <td>Documentaries, International Movies, Music &amp; M...</td>\n",
              "      <td>In this documentary, South African rapper Nast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7785</th>\n",
              "      <td>s7786</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>Zumbo's Just Desserts</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adriano Zumbo, Rachel Khoo</td>\n",
              "      <td>Australia</td>\n",
              "      <td>October 31, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-PG</td>\n",
              "      <td>1 Season</td>\n",
              "      <td>International TV Shows, Reality TV</td>\n",
              "      <td>Dessert wizard Adriano Zumbo looks for the nex...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7786</th>\n",
              "      <td>s7787</td>\n",
              "      <td>Movie</td>\n",
              "      <td>ZZ TOP: THAT LITTLE OL' BAND FROM TEXAS</td>\n",
              "      <td>Sam Dunn</td>\n",
              "      <td>NaN</td>\n",
              "      <td>United Kingdom, Canada, United States</td>\n",
              "      <td>March 1, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>90 min</td>\n",
              "      <td>Documentaries, Music &amp; Musicals</td>\n",
              "      <td>This documentary delves into the mystique behi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7787 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     show_id  ...                                        description\n",
              "0         s1  ...  In a future where the elite inhabit an island ...\n",
              "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
              "2         s3  ...  When an army recruit is found dead, his fellow...\n",
              "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
              "4         s5  ...  A brilliant group of students become card-coun...\n",
              "...      ...  ...                                                ...\n",
              "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
              "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
              "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
              "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
              "7786   s7787  ...  This documentary delves into the mystique behi...\n",
              "\n",
              "[7787 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "18f41604-74c2-4853-9f60-d35943480418"
      },
      "source": [
        "# 데이터 저장\n",
        "data = pd.read_excel(\"netflix_titles.xlsx\")"
      ],
      "id": "18f41604-74c2-4853-9f60-d35943480418",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3479d5a1-2044-485e-9aff-f43c37c74c09",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 203
        },
        "outputId": "221bee43-8049-4b82-c654-2b00ae3ca0b2"
      },
      "source": [
        "# 연도별 등록 컨텐츠 수량을 시각화\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(18, 4))\n",
        "sns.countplot(x='type', data=data)\n",
        "plt.xticks(rotation=90)\n",
        "plt.show()"
      ],
      "id": "3479d5a1-2044-485e-9aff-f43c37c74c09",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 504x144 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b428068b-0689-4b53-8add-7fbd53035eeb"
      },
      "source": [
        "# Variable (변수)"
      ],
      "id": "b428068b-0689-4b53-8add-7fbd53035eeb"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c163fac3-516d-41ef-b0dd-cdecefceca70"
      },
      "source": [
        "## 변수에 값을 저장\n",
        "- 형식: 변수이름 = 저장하려는 값"
      ],
      "id": "c163fac3-516d-41ef-b0dd-cdecefceca70"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "790c8840-48d3-4d1a-9762-023b3cbf9cc8"
      },
      "source": [
        "숫자 1을 변수 a에 저장합니다. "
      ],
      "id": "790c8840-48d3-4d1a-9762-023b3cbf9cc8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d7f08218-3ba9-4a13-a326-697277b1d5da"
      },
      "source": [
        "a=1"
      ],
      "id": "d7f08218-3ba9-4a13-a326-697277b1d5da",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1427079d-2185-4e06-8205-f02230d9da46"
      },
      "source": [
        "변수 a를 출력하여 저장된 값을 확인합니다."
      ],
      "id": "1427079d-2185-4e06-8205-f02230d9da46"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c3bd05f6-4dda-422a-beaf-19f44a3af13b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "582c4538-2d2f-4b45-cd90-1fca2905a5e6"
      },
      "source": [
        "a"
      ],
      "id": "c3bd05f6-4dda-422a-beaf-19f44a3af13b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a213e49f-994b-4f22-81c2-f076260dae79"
      },
      "source": [
        "print 명령을 사용하여 변수 a를 출력합니다. 저장된 값이 화면에 표시됩니다."
      ],
      "id": "a213e49f-994b-4f22-81c2-f076260dae79"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d81a2013-5d5d-42d9-9a51-ab1689748927",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "193a4d71-015e-49b5-c2b1-6ea6a312c48d"
      },
      "source": [
        "print(a)"
      ],
      "id": "d81a2013-5d5d-42d9-9a51-ab1689748927",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2e3d5d4f-7a0b-434e-b443-30ec41766747"
      },
      "source": [
        "변수 b에 숫자 5를 저장합니다."
      ],
      "id": "2e3d5d4f-7a0b-434e-b443-30ec41766747"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5bd24fdc-5c64-4c5b-8b36-51387a332184"
      },
      "source": [
        "b=5"
      ],
      "id": "5bd24fdc-5c64-4c5b-8b36-51387a332184",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2483bc8f-b0da-41ae-9a85-99774d7198a7"
      },
      "source": [
        "변수 a와 b를 더합니다. 이처럼 두 변수를 더하면, 각 변수가 가지고 있는 값들을 더하게 됩니다. "
      ],
      "id": "2483bc8f-b0da-41ae-9a85-99774d7198a7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5ae8735b-955c-46bc-937f-a1a35956ba60",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4710bf44-a5e0-4cfd-820c-c9b0f5ed5494"
      },
      "source": [
        "a + b"
      ],
      "id": "5ae8735b-955c-46bc-937f-a1a35956ba60",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "030aba8f-393b-4114-ba7b-157ac8c4f6f1"
      },
      "source": [
        "## [Quiz] \n",
        "변수 data에 저장되어 있는 데이터를 화면에 출력합니다. "
      ],
      "id": "030aba8f-393b-4114-ba7b-157ac8c4f6f1"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "02b7314f-e536-446d-835c-8b20364c94c6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "012878ef-704a-4720-d324-d5bdba4373c9"
      },
      "source": [
        "print(a)"
      ],
      "id": "02b7314f-e536-446d-835c-8b20364c94c6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "df6959db-87be-423c-95d4-2d9bc5777ded",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ddf5930d-d2df-4276-f5b0-cb81f9815840"
      },
      "source": [
        "print(b)"
      ],
      "id": "df6959db-87be-423c-95d4-2d9bc5777ded",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HqTM7C75jpEm",
        "outputId": "a2ae8a81-7a6f-4474-c5f9-1b01ffb6fcc5"
      },
      "source": [
        "print(넥플릭스테스트)"
      ],
      "id": "HqTM7C75jpEm",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     show_id  ...                                        description\n",
            "0         s1  ...  In a future where the elite inhabit an island ...\n",
            "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
            "2         s3  ...  When an army recruit is found dead, his fellow...\n",
            "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
            "4         s5  ...  A brilliant group of students become card-coun...\n",
            "...      ...  ...                                                ...\n",
            "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
            "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
            "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
            "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
            "7786   s7787  ...  This documentary delves into the mystique behi...\n",
            "\n",
            "[7787 rows x 12 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "15a1b100-129c-4709-aec0-d3bb01c201ab"
      },
      "source": [
        "# Data Type (자료형)"
      ],
      "id": "15a1b100-129c-4709-aec0-d3bb01c201ab"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "95c442f1-5366-4726-b13e-ef691c300da4"
      },
      "source": [
        "## 숫자형\n",
        "- 정수형(int) : 소수점이 없음. 예: -3, -2, -1, -, 1, 2, 3\n",
        "- 실수형(float)  : 소수점이 있는 숫자 "
      ],
      "id": "95c442f1-5366-4726-b13e-ef691c300da4"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "26851546-42c1-46c6-a516-a3d416ecb0da"
      },
      "source": [
        "### 정수형"
      ],
      "id": "26851546-42c1-46c6-a516-a3d416ecb0da"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ec8fa960-7c4d-46ea-88fd-107423209ede"
      },
      "source": [
        "- 정수 7을 입력합니다. "
      ],
      "id": "ec8fa960-7c4d-46ea-88fd-107423209ede"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "867c95ca-b0c5-4f32-bf39-4538fec9871a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ef86f271-ab4c-4c98-9523-a91977b4da3b"
      },
      "source": [
        "7"
      ],
      "id": "867c95ca-b0c5-4f32-bf39-4538fec9871a",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d19678e9-2ca8-4bf6-b0df-500f19780cf7"
      },
      "source": [
        "- type 함수로 자료형을 확인합니다"
      ],
      "id": "d19678e9-2ca8-4bf6-b0df-500f19780cf7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "480b6c8c-49a6-4920-881b-de4b29e96c2d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15baa884-764e-4c9b-d64e-a4eadf946a4d"
      },
      "source": [
        "type(7)"
      ],
      "id": "480b6c8c-49a6-4920-881b-de4b29e96c2d",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "91cda4c8-8655-4bcb-9a33-79e571e3e0f3"
      },
      "source": [
        "- 숫자 10을 변수 a에 저장합니다."
      ],
      "id": "91cda4c8-8655-4bcb-9a33-79e571e3e0f3"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "542a2692-72b3-4da3-a2d2-b5536b554abe"
      },
      "source": [
        "a = 10"
      ],
      "id": "542a2692-72b3-4da3-a2d2-b5536b554abe",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "45018212-32c8-4ef5-8396-413350183c1c"
      },
      "source": [
        "- 변수 a의 자료형을 확인합니다."
      ],
      "id": "45018212-32c8-4ef5-8396-413350183c1c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f89a7b22-fb82-4944-baf5-15ce2abd5835",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e82a2519-981e-4320-d6a1-c0f824c8545d"
      },
      "source": [
        "type(a)"
      ],
      "id": "f89a7b22-fb82-4944-baf5-15ce2abd5835",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4c59abfe-f683-4d76-a1ab-bcbfea3fed65"
      },
      "source": [
        "### 실수형"
      ],
      "id": "4c59abfe-f683-4d76-a1ab-bcbfea3fed65"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cad90089-05d4-40c7-9b6c-b9f330c6897a"
      },
      "source": [
        "- 변수 b에 숫자 3.14를 저장합니다."
      ],
      "id": "cad90089-05d4-40c7-9b6c-b9f330c6897a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7f89c1f5-f190-4941-a0e1-de0a33ebab7c"
      },
      "source": [
        "b = 3.14"
      ],
      "id": "7f89c1f5-f190-4941-a0e1-de0a33ebab7c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9106448b-2b15-45d7-8601-7cec3c5bf683",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c99f57b6-ff9c-4a49-bd92-879a75109439"
      },
      "source": [
        "print(b)"
      ],
      "id": "9106448b-2b15-45d7-8601-7cec3c5bf683",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3.14\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "31e6a250-d8db-4dba-8cfa-0a11f7773e32"
      },
      "source": [
        "- type 함수로 자료형을 확인합니다."
      ],
      "id": "31e6a250-d8db-4dba-8cfa-0a11f7773e32"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "380535ea-78d2-4ad2-ba4b-efce60f3b4ae",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "807e76ca-0deb-4b7a-9712-c09c221b8103"
      },
      "source": [
        "type(b)"
      ],
      "id": "380535ea-78d2-4ad2-ba4b-efce60f3b4ae",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "float"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8e596604-972a-48cb-b059-9e63eaafd2c7"
      },
      "source": [
        "- 정수형 값(10) 과 실수형 값(3.14)을 더하면?"
      ],
      "id": "8e596604-972a-48cb-b059-9e63eaafd2c7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "395eb6cd-1c76-4bbe-855e-01a3c03ea7fe",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "11867a27-7f34-440f-a746-be74926933aa"
      },
      "source": [
        "10 + 3.14 \n"
      ],
      "id": "395eb6cd-1c76-4bbe-855e-01a3c03ea7fe",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "13.14"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fa9e09f9-328e-409a-9e6a-d6fbf7d8d465"
      },
      "source": [
        "### [Quiz] \n",
        "정수를 저장하고 있는 변수(a) 과 실수를 저장하고 있는 변수(b)을 더하면?"
      ],
      "id": "fa9e09f9-328e-409a-9e6a-d6fbf7d8d465"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "584ecadc-9a09-4440-bcfd-e76133c00866"
      },
      "source": [
        ""
      ],
      "id": "584ecadc-9a09-4440-bcfd-e76133c00866",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "79bdbca8-9393-4ae3-a0ca-ca6e15424ab1"
      },
      "source": [
        ""
      ],
      "id": "79bdbca8-9393-4ae3-a0ca-ca6e15424ab1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b9f7c291-82bf-465a-9516-66cfdcd290f4"
      },
      "source": [
        "### [예시]  \n",
        "작품의 출시연도는 정수형으로 저장...."
      ],
      "id": "b9f7c291-82bf-465a-9516-66cfdcd290f4"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "id": "gYPScGQhlISb",
        "outputId": "aa1de506-2f64-4fe9-abff-c0e326893dd9"
      },
      "source": [
        "넥플릭스테스트"
      ],
      "id": "gYPScGQhlISb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>show_id</th>\n",
              "      <th>type</th>\n",
              "      <th>title</th>\n",
              "      <th>director</th>\n",
              "      <th>cast</th>\n",
              "      <th>country</th>\n",
              "      <th>date_added</th>\n",
              "      <th>release_year</th>\n",
              "      <th>rating</th>\n",
              "      <th>duration</th>\n",
              "      <th>listed_in</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>s1</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>3%</td>\n",
              "      <td>NaN</td>\n",
              "      <td>João Miguel, Bianca Comparato, Michel Gomes, R...</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>August 14, 2020</td>\n",
              "      <td>2020</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>4 Seasons</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Sci-Fi &amp;...</td>\n",
              "      <td>In a future where the elite inhabit an island ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>s2</td>\n",
              "      <td>Movie</td>\n",
              "      <td>7:19</td>\n",
              "      <td>Jorge Michel Grau</td>\n",
              "      <td>Demián Bichir, Héctor Bonilla, Oscar Serrano, ...</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>December 23, 2016</td>\n",
              "      <td>2016</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>93 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>After a devastating earthquake hits Mexico Cit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>s3</td>\n",
              "      <td>Movie</td>\n",
              "      <td>23:59</td>\n",
              "      <td>Gilbert Chan</td>\n",
              "      <td>Tedd Chan, Stella Chung, Henley Hii, Lawrence ...</td>\n",
              "      <td>Singapore</td>\n",
              "      <td>December 20, 2018</td>\n",
              "      <td>2011</td>\n",
              "      <td>R</td>\n",
              "      <td>78 min</td>\n",
              "      <td>Horror Movies, International Movies</td>\n",
              "      <td>When an army recruit is found dead, his fellow...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>s4</td>\n",
              "      <td>Movie</td>\n",
              "      <td>9</td>\n",
              "      <td>Shane Acker</td>\n",
              "      <td>Elijah Wood, John C. Reilly, Jennifer Connelly...</td>\n",
              "      <td>United States</td>\n",
              "      <td>November 16, 2017</td>\n",
              "      <td>2009</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>80 min</td>\n",
              "      <td>Action &amp; Adventure, Independent Movies, Sci-Fi...</td>\n",
              "      <td>In a postapocalyptic world, rag-doll robots hi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>s5</td>\n",
              "      <td>Movie</td>\n",
              "      <td>21</td>\n",
              "      <td>Robert Luketic</td>\n",
              "      <td>Jim Sturgess, Kevin Spacey, Kate Bosworth, Aar...</td>\n",
              "      <td>United States</td>\n",
              "      <td>January 1, 2020</td>\n",
              "      <td>2008</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>123 min</td>\n",
              "      <td>Dramas</td>\n",
              "      <td>A brilliant group of students become card-coun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7782</th>\n",
              "      <td>s7783</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zozo</td>\n",
              "      <td>Josef Fares</td>\n",
              "      <td>Imad Creidi, Antoinette Turk, Elias Gergi, Car...</td>\n",
              "      <td>Sweden, Czech Republic, United Kingdom, Denmar...</td>\n",
              "      <td>October 19, 2020</td>\n",
              "      <td>2005</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>99 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>When Lebanon's Civil War deprives Zozo of his ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7783</th>\n",
              "      <td>s7784</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zubaan</td>\n",
              "      <td>Mozez Singh</td>\n",
              "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
              "      <td>India</td>\n",
              "      <td>March 2, 2019</td>\n",
              "      <td>2015</td>\n",
              "      <td>TV-14</td>\n",
              "      <td>111 min</td>\n",
              "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
              "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7784</th>\n",
              "      <td>s7785</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zulu Man in Japan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nasty C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>September 25, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>44 min</td>\n",
              "      <td>Documentaries, International Movies, Music &amp; M...</td>\n",
              "      <td>In this documentary, South African rapper Nast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7785</th>\n",
              "      <td>s7786</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>Zumbo's Just Desserts</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adriano Zumbo, Rachel Khoo</td>\n",
              "      <td>Australia</td>\n",
              "      <td>October 31, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-PG</td>\n",
              "      <td>1 Season</td>\n",
              "      <td>International TV Shows, Reality TV</td>\n",
              "      <td>Dessert wizard Adriano Zumbo looks for the nex...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7786</th>\n",
              "      <td>s7787</td>\n",
              "      <td>Movie</td>\n",
              "      <td>ZZ TOP: THAT LITTLE OL' BAND FROM TEXAS</td>\n",
              "      <td>Sam Dunn</td>\n",
              "      <td>NaN</td>\n",
              "      <td>United Kingdom, Canada, United States</td>\n",
              "      <td>March 1, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>90 min</td>\n",
              "      <td>Documentaries, Music &amp; Musicals</td>\n",
              "      <td>This documentary delves into the mystique behi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7787 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     show_id  ...                                        description\n",
              "0         s1  ...  In a future where the elite inhabit an island ...\n",
              "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
              "2         s3  ...  When an army recruit is found dead, his fellow...\n",
              "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
              "4         s5  ...  A brilliant group of students become card-coun...\n",
              "...      ...  ...                                                ...\n",
              "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
              "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
              "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
              "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
              "7786   s7787  ...  This documentary delves into the mystique behi...\n",
              "\n",
              "[7787 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0ea9e72f-66a5-49fe-aee7-8b93b7e9914e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "98690d7e-34bf-485d-d0e9-5297015320b1"
      },
      "source": [
        "넥플릭스테스트['release_year']"
      ],
      "id": "0ea9e72f-66a5-49fe-aee7-8b93b7e9914e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       2020\n",
              "1       2016\n",
              "2       2011\n",
              "3       2009\n",
              "4       2008\n",
              "        ... \n",
              "7782    2005\n",
              "7783    2015\n",
              "7784    2019\n",
              "7785    2019\n",
              "7786    2019\n",
              "Name: release_year, Length: 7787, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "551be665-e748-45fa-9830-bbe275d4eb92",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "outputId": "f23c5f9d-0524-4aa8-bf7d-6096a07ca10d"
      },
      "source": [
        "data"
      ],
      "id": "551be665-e748-45fa-9830-bbe275d4eb92",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>show_id</th>\n",
              "      <th>type</th>\n",
              "      <th>title</th>\n",
              "      <th>director</th>\n",
              "      <th>cast</th>\n",
              "      <th>country</th>\n",
              "      <th>date_added</th>\n",
              "      <th>release_year</th>\n",
              "      <th>rating</th>\n",
              "      <th>duration</th>\n",
              "      <th>listed_in</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>s1</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>3%</td>\n",
              "      <td>NaN</td>\n",
              "      <td>João Miguel, Bianca Comparato, Michel Gomes, R...</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>August 14, 2020</td>\n",
              "      <td>2020</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>4 Seasons</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Sci-Fi &amp;...</td>\n",
              "      <td>In a future where the elite inhabit an island ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>s2</td>\n",
              "      <td>Movie</td>\n",
              "      <td>7:19</td>\n",
              "      <td>Jorge Michel Grau</td>\n",
              "      <td>Demián Bichir, Héctor Bonilla, Oscar Serrano, ...</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>December 23, 2016</td>\n",
              "      <td>2016</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>93 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>After a devastating earthquake hits Mexico Cit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>s3</td>\n",
              "      <td>Movie</td>\n",
              "      <td>23:59</td>\n",
              "      <td>Gilbert Chan</td>\n",
              "      <td>Tedd Chan, Stella Chung, Henley Hii, Lawrence ...</td>\n",
              "      <td>Singapore</td>\n",
              "      <td>December 20, 2018</td>\n",
              "      <td>2011</td>\n",
              "      <td>R</td>\n",
              "      <td>78 min</td>\n",
              "      <td>Horror Movies, International Movies</td>\n",
              "      <td>When an army recruit is found dead, his fellow...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>s4</td>\n",
              "      <td>Movie</td>\n",
              "      <td>9</td>\n",
              "      <td>Shane Acker</td>\n",
              "      <td>Elijah Wood, John C. Reilly, Jennifer Connelly...</td>\n",
              "      <td>United States</td>\n",
              "      <td>November 16, 2017</td>\n",
              "      <td>2009</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>80 min</td>\n",
              "      <td>Action &amp; Adventure, Independent Movies, Sci-Fi...</td>\n",
              "      <td>In a postapocalyptic world, rag-doll robots hi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>s5</td>\n",
              "      <td>Movie</td>\n",
              "      <td>21</td>\n",
              "      <td>Robert Luketic</td>\n",
              "      <td>Jim Sturgess, Kevin Spacey, Kate Bosworth, Aar...</td>\n",
              "      <td>United States</td>\n",
              "      <td>January 1, 2020</td>\n",
              "      <td>2008</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>123 min</td>\n",
              "      <td>Dramas</td>\n",
              "      <td>A brilliant group of students become card-coun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7782</th>\n",
              "      <td>s7783</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zozo</td>\n",
              "      <td>Josef Fares</td>\n",
              "      <td>Imad Creidi, Antoinette Turk, Elias Gergi, Car...</td>\n",
              "      <td>Sweden, Czech Republic, United Kingdom, Denmar...</td>\n",
              "      <td>October 19, 2020</td>\n",
              "      <td>2005</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>99 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>When Lebanon's Civil War deprives Zozo of his ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7783</th>\n",
              "      <td>s7784</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zubaan</td>\n",
              "      <td>Mozez Singh</td>\n",
              "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
              "      <td>India</td>\n",
              "      <td>March 2, 2019</td>\n",
              "      <td>2015</td>\n",
              "      <td>TV-14</td>\n",
              "      <td>111 min</td>\n",
              "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
              "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7784</th>\n",
              "      <td>s7785</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zulu Man in Japan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nasty C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>September 25, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>44 min</td>\n",
              "      <td>Documentaries, International Movies, Music &amp; M...</td>\n",
              "      <td>In this documentary, South African rapper Nast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7785</th>\n",
              "      <td>s7786</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>Zumbo's Just Desserts</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adriano Zumbo, Rachel Khoo</td>\n",
              "      <td>Australia</td>\n",
              "      <td>October 31, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-PG</td>\n",
              "      <td>1 Season</td>\n",
              "      <td>International TV Shows, Reality TV</td>\n",
              "      <td>Dessert wizard Adriano Zumbo looks for the nex...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7786</th>\n",
              "      <td>s7787</td>\n",
              "      <td>Movie</td>\n",
              "      <td>ZZ TOP: THAT LITTLE OL' BAND FROM TEXAS</td>\n",
              "      <td>Sam Dunn</td>\n",
              "      <td>NaN</td>\n",
              "      <td>United Kingdom, Canada, United States</td>\n",
              "      <td>March 1, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>90 min</td>\n",
              "      <td>Documentaries, Music &amp; Musicals</td>\n",
              "      <td>This documentary delves into the mystique behi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7787 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     show_id  ...                                        description\n",
              "0         s1  ...  In a future where the elite inhabit an island ...\n",
              "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
              "2         s3  ...  When an army recruit is found dead, his fellow...\n",
              "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
              "4         s5  ...  A brilliant group of students become card-coun...\n",
              "...      ...  ...                                                ...\n",
              "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
              "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
              "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
              "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
              "7786   s7787  ...  This documentary delves into the mystique behi...\n",
              "\n",
              "[7787 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "35eb435f-f1c6-4a35-a52c-10aacb80aa57"
      },
      "source": [
        "### 자료형 변환"
      ],
      "id": "35eb435f-f1c6-4a35-a52c-10aacb80aa57"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "44c8tlVRmC07",
        "outputId": "97f46e68-2f39-4d10-e994-cd4e8e33d315"
      },
      "source": [
        "int(3.12)"
      ],
      "id": "44c8tlVRmC07",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7fae6023-d82b-42e6-9245-48fa6b5a0170"
      },
      "source": [
        "# 3.14를 정수형으로 변환하고 변수 a1에 저장\n",
        "a1 = int(3.14)"
      ],
      "id": "7fae6023-d82b-42e6-9245-48fa6b5a0170",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "296f3ff7-9abb-4368-bd6d-bc43f5196352",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0266b74f-6862-4094-e440-5b2bee43ccae"
      },
      "source": [
        "# 변수 a1의 자료형 확인 \n",
        "type(a1)"
      ],
      "id": "296f3ff7-9abb-4368-bd6d-bc43f5196352",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0c73674e-3602-4063-99bb-44987bd92c63"
      },
      "source": [
        "# 변수 a1의 값을 실수로 변환하고 변수 a2에 저장\n",
        "a2 = float(a1)"
      ],
      "id": "0c73674e-3602-4063-99bb-44987bd92c63",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "482913f4-d208-4cf4-abaf-6c59c286926e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "12228647-fb82-42ca-e4f3-35e81889cf97"
      },
      "source": [
        "# 변수 a2의 자료형 확인 \n",
        "type(a2)"
      ],
      "id": "482913f4-d208-4cf4-abaf-6c59c286926e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "float"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "53a771ea-a4ee-4b34-8d85-2381d4c6e0e3"
      },
      "source": [
        "## 문자열"
      ],
      "id": "53a771ea-a4ee-4b34-8d85-2381d4c6e0e3"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a90b4226-f612-4759-a8d6-e00d577753b3"
      },
      "source": [
        "### 문자열 만들기"
      ],
      "id": "a90b4226-f612-4759-a8d6-e00d577753b3"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c14e8aee-891a-4eee-99bd-9e70e805e86f"
      },
      "source": [
        "- 큰 따옴표"
      ],
      "id": "c14e8aee-891a-4eee-99bd-9e70e805e86f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "25452a41-746a-4b57-9d6e-8e76d3977c4e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "5c1051a1-dccf-438b-ce93-53a105ddc20c"
      },
      "source": [
        "# 파이썬\n",
        "\"파이썬\""
      ],
      "id": "25452a41-746a-4b57-9d6e-8e76d3977c4e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'파이썬'"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "91883a66-7764-4cee-9884-046db7ed20e2"
      },
      "source": [
        "c = \"파이썬\""
      ],
      "id": "91883a66-7764-4cee-9884-046db7ed20e2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3a05501b-3861-45a9-9f3e-ddd55fa506eb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "b46cb33f-f5f0-4e7c-e8be-5ea69dbbe0a0"
      },
      "source": [
        "c"
      ],
      "id": "3a05501b-3861-45a9-9f3e-ddd55fa506eb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'파이썬'"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1754e3c6-d2b3-4b16-be39-7c871045c7e4"
      },
      "source": [
        "- 작은 따옴표"
      ],
      "id": "1754e3c6-d2b3-4b16-be39-7c871045c7e4"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "40623fc4-3e41-406e-8c51-f7ddfe98b185"
      },
      "source": [
        "# 프로그래밍\n",
        "d = '프로그래밍'"
      ],
      "id": "40623fc4-3e41-406e-8c51-f7ddfe98b185",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0620bfa3-17c2-4c59-a878-3d5d018c1c1f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "dac95f5f-a884-48fb-b1b5-e4684aba9365"
      },
      "source": [
        "d"
      ],
      "id": "0620bfa3-17c2-4c59-a878-3d5d018c1c1f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'프로그래밍'"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cfe526b4-053b-4ab1-8957-6d381057e1a8"
      },
      "source": [
        "### [예시]"
      ],
      "id": "cfe526b4-053b-4ab1-8957-6d381057e1a8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f9725924-1d4b-4b45-aa9f-ce81ddf5541d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e661ae3b-9086-464b-f900-4e8062626e65"
      },
      "source": [
        "data['country']"
      ],
      "id": "f9725924-1d4b-4b45-aa9f-ce81ddf5541d",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0                                                  Brazil\n",
              "1                                                  Mexico\n",
              "2                                               Singapore\n",
              "3                                           United States\n",
              "4                                           United States\n",
              "                              ...                        \n",
              "7782    Sweden, Czech Republic, United Kingdom, Denmar...\n",
              "7783                                                India\n",
              "7784                                                  NaN\n",
              "7785                                            Australia\n",
              "7786                United Kingdom, Canada, United States\n",
              "Name: country, Length: 7787, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bb789957-d154-44bb-a6f6-4fc92c6bdd75"
      },
      "source": [
        "- 문자열을 숫자형으로 변환"
      ],
      "id": "bb789957-d154-44bb-a6f6-4fc92c6bdd75"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0a5f07df-6477-4ea7-9abf-b71d8846ad8a"
      },
      "source": [
        "# 문자열 '2021'을 변수에 저장 \n",
        "year = '2021'"
      ],
      "id": "0a5f07df-6477-4ea7-9abf-b71d8846ad8a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4b42808e-33ef-4365-bae3-82aa6aa4e624",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ebb81f14-ca50-475a-864e-ea1e294aaf00"
      },
      "source": [
        "type(year)"
      ],
      "id": "4b42808e-33ef-4365-bae3-82aa6aa4e624",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "str"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "28351934-f193-4e9f-8aee-ec1c88d24e94"
      },
      "source": [
        "# 변수를 정수형으로 변환하고, 다른 변수에 저장\n",
        "num = int(year)"
      ],
      "id": "28351934-f193-4e9f-8aee-ec1c88d24e94",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dd090a38-c1f6-4e12-a4a1-ee87be5233d4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f780284f-6693-4f4e-dfae-4c14724be212"
      },
      "source": [
        "type(num)"
      ],
      "id": "dd090a38-c1f6-4e12-a4a1-ee87be5233d4",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5b036cd4-4f26-4876-8968-4327ea600e99",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3fc2372d-0281-4352-b25e-820ac66d3798"
      },
      "source": [
        "# 정수형 변환 결과를 저장하고 있는 변수를 출력\n",
        "print(num)"
      ],
      "id": "5b036cd4-4f26-4876-8968-4327ea600e99",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2021\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aa167469-43f7-4ad9-a4a7-3418b21b8344"
      },
      "source": [
        "- 숫자형을 문자열로 변환"
      ],
      "id": "aa167469-43f7-4ad9-a4a7-3418b21b8344"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d001ae69-9e93-4f28-bb42-a42169caf4ec",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7b11f7f8-6cd9-42f1-b063-8e61c9a41d72"
      },
      "source": [
        "_str = str(num)\n",
        "print(_str)"
      ],
      "id": "d001ae69-9e93-4f28-bb42-a42169caf4ec",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2021\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9fca74b1-077b-4386-a800-669828d91e14",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "70407dec-e3a3-4da1-8998-3849633c41f7"
      },
      "source": [
        "print(type(_str))"
      ],
      "id": "9fca74b1-077b-4386-a800-669828d91e14",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'str'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6da29856-ccba-4681-8da2-3bf8f0e0520b"
      },
      "source": [
        "- 변수 _str에 5를 곱합니다"
      ],
      "id": "6da29856-ccba-4681-8da2-3bf8f0e0520b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d84c7f9c-13d1-44a4-9731-0e5f642fb179",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "8a0759ec-80f3-49b1-f01f-01d9c71e61c7"
      },
      "source": [
        "_str*5"
      ],
      "id": "d84c7f9c-13d1-44a4-9731-0e5f642fb179",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'20212021202120212021'"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f0e311e4-41af-4003-928e-f4ea6d60144a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2319ad51-6244-4654-c837-1759ab5b2a77"
      },
      "source": [
        "# \"-\" 문자열에 20을 곱합니다\n",
        "# \"*\" 문자열에 20을 곱합니다\n",
        "print('-'*20)\n",
        "print(\"*\"*20)"
      ],
      "id": "f0e311e4-41af-4003-928e-f4ea6d60144a",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------------\n",
            "********************\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3dd89930-4f9a-4db1-a5e8-2158ec567339"
      },
      "source": [
        "### [예시]  \n",
        "2 시즌 이상 연재된 작품을 선택하려면..."
      ],
      "id": "3dd89930-4f9a-4db1-a5e8-2158ec567339"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d257c51d-f6ec-4882-9e95-1d7c9a0e8023",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "09b89447-5143-45ca-ae09-883f40a30098"
      },
      "source": [
        "data['duration']"
      ],
      "id": "d257c51d-f6ec-4882-9e95-1d7c9a0e8023",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       4 Seasons\n",
              "1          93 min\n",
              "2          78 min\n",
              "3          80 min\n",
              "4         123 min\n",
              "          ...    \n",
              "7782       99 min\n",
              "7783      111 min\n",
              "7784       44 min\n",
              "7785     1 Season\n",
              "7786       90 min\n",
              "Name: duration, Length: 7787, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a73f5356-f7ae-43d6-98cc-d4cde41e3405",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f4522fe-de57-404e-ee13-cdee2a6a31cf"
      },
      "source": [
        "# 정규식\n",
        "import re\n",
        "\n",
        "int(re.findall(r'(\\d+) [A-Za-z]+', data['duration'][0])[0])"
      ],
      "id": "a73f5356-f7ae-43d6-98cc-d4cde41e3405",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0687140d-ac02-4085-bb9f-ed3cd6390030",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b8dd9566-58b6-4320-c634-78de9060e667"
      },
      "source": [
        "data['duration'].apply(lambda x: int(re.findall(r'(\\d+) [A-Za-z]+', x)[0]))"
      ],
      "id": "0687140d-ac02-4085-bb9f-ed3cd6390030",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         4\n",
              "1        93\n",
              "2        78\n",
              "3        80\n",
              "4       123\n",
              "       ... \n",
              "7782     99\n",
              "7783    111\n",
              "7784     44\n",
              "7785      1\n",
              "7786     90\n",
              "Name: duration, Length: 7787, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6fd3e2c8-ed77-4374-8901-73e8b1ca8c9c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "10dbda7f-5b61-45a6-cd18-728454e56e2a"
      },
      "source": [
        "data['duration'].apply(lambda x: re.findall(r'\\d+ ([A-Za-z]+)', x)[0])"
      ],
      "id": "6fd3e2c8-ed77-4374-8901-73e8b1ca8c9c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       Seasons\n",
              "1           min\n",
              "2           min\n",
              "3           min\n",
              "4           min\n",
              "         ...   \n",
              "7782        min\n",
              "7783        min\n",
              "7784        min\n",
              "7785     Season\n",
              "7786        min\n",
              "Name: duration, Length: 7787, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "504a05f6-9461-4cbe-bc6a-1adc9419244f"
      },
      "source": [
        "### 문자열 포매팅"
      ],
      "id": "504a05f6-9461-4cbe-bc6a-1adc9419244f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "440077d9-8777-424f-babb-b8065e9e5db0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "4eeef463-3c44-483f-bdb0-8b04fd4331e8"
      },
      "source": [
        "# 문자열 포매팅 1\n",
        "\"DB{}인재개발원\".format(\" \")"
      ],
      "id": "440077d9-8777-424f-babb-b8065e9e5db0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'DB 인재개발원'"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7f80ba64-d948-4cb8-ae1b-58ec1a1059c0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "b74d4a2f-cb5b-4030-caad-909562d41b8c"
      },
      "source": [
        "text = \"인재\"\n",
        "\"DB {}개발원\".format(text)"
      ],
      "id": "7f80ba64-d948-4cb8-ae1b-58ec1a1059c0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'DB 인재개발원'"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0bff6f02-7289-4479-a364-72cf1407c705",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "973df5d3-92ca-47a0-86a1-a0026e5a8dc7"
      },
      "source": [
        "# 문자열 포매팅 2\n",
        "\"DB %s개발원\" % text"
      ],
      "id": "0bff6f02-7289-4479-a364-72cf1407c705",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'DB 인재개발원'"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "74a1d713-a157-4b2f-a764-da34c3fabab1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "4c6f559d-a99d-4416-ffe7-77dcaa2650e6"
      },
      "source": [
        "# 문자열 포매팅 3\n",
        "f\"DB {text}개발원\""
      ],
      "id": "74a1d713-a157-4b2f-a764-da34c3fabab1",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'DB 인재개발원'"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "71f4c208-3516-4235-9758-dc196ddcb92f"
      },
      "source": [
        "pi = 3.141592\n",
        "print(\"원주율: %0.4f\" % pi)"
      ],
      "id": "71f4c208-3516-4235-9758-dc196ddcb92f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ce8718af-05a0-4338-97e3-f36e4db30f7c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1aef5ecd-e193-48a5-d035-8ad09c0fa8ff"
      },
      "source": [
        "print(\"매출액: {:,}\".format(300000000))"
      ],
      "id": "ce8718af-05a0-4338-97e3-f36e4db30f7c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "매출액: 300,000,000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "919b939f-7db8-4c5c-a03d-ac2334a8116e"
      },
      "source": [
        "- 2개 이상의 문자열을 추가하고 싶을 때"
      ],
      "id": "919b939f-7db8-4c5c-a03d-ac2334a8116e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "73381d1e-26a6-4bb9-a4a7-ff73f6321e25",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "35c4cba0-ceb6-4102-b447-d71c071a7a7e"
      },
      "source": [
        "# 문자열 포매팅 1\n",
        "\"{}정책{}2021\".format(\"친환경\", \" \")"
      ],
      "id": "73381d1e-26a6-4bb9-a4a7-ff73f6321e25",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'친환경정책 2021'"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "331c2b4b-93d2-470c-b04a-dad1fa5b2329",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "be745572-76d2-40da-8295-67026a9aae3a"
      },
      "source": [
        "# 문자열 포매팅 2\n",
        "\"%s정책%s2021\" % (\"친환경\", \" \")"
      ],
      "id": "331c2b4b-93d2-470c-b04a-dad1fa5b2329",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'친환경정책 2021'"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "242165c1-6636-40e6-998f-c799604f4d6d"
      },
      "source": [
        "### 문자열의 길이(원소의 개수)"
      ],
      "id": "242165c1-6636-40e6-998f-c799604f4d6d"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7100934d-1d6f-4ea2-a6c4-bf43bf059f99",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eb53b327-6e15-442a-d790-f3b09750b16b"
      },
      "source": [
        "string = \"Green policy\"\n",
        "len(string)"
      ],
      "id": "7100934d-1d6f-4ea2-a6c4-bf43bf059f99",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "id": "3pgwfoirvvJu",
        "outputId": "919528e3-c3e6-4d04-b367-9c48fa4722b1"
      },
      "source": [
        "data"
      ],
      "id": "3pgwfoirvvJu",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>show_id</th>\n",
              "      <th>type</th>\n",
              "      <th>title</th>\n",
              "      <th>director</th>\n",
              "      <th>cast</th>\n",
              "      <th>country</th>\n",
              "      <th>date_added</th>\n",
              "      <th>release_year</th>\n",
              "      <th>rating</th>\n",
              "      <th>duration</th>\n",
              "      <th>listed_in</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>s1</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>3%</td>\n",
              "      <td>NaN</td>\n",
              "      <td>João Miguel, Bianca Comparato, Michel Gomes, R...</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>August 14, 2020</td>\n",
              "      <td>2020</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>4 Seasons</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Sci-Fi &amp;...</td>\n",
              "      <td>In a future where the elite inhabit an island ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>s2</td>\n",
              "      <td>Movie</td>\n",
              "      <td>7:19</td>\n",
              "      <td>Jorge Michel Grau</td>\n",
              "      <td>Demián Bichir, Héctor Bonilla, Oscar Serrano, ...</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>December 23, 2016</td>\n",
              "      <td>2016</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>93 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>After a devastating earthquake hits Mexico Cit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>s3</td>\n",
              "      <td>Movie</td>\n",
              "      <td>23:59</td>\n",
              "      <td>Gilbert Chan</td>\n",
              "      <td>Tedd Chan, Stella Chung, Henley Hii, Lawrence ...</td>\n",
              "      <td>Singapore</td>\n",
              "      <td>December 20, 2018</td>\n",
              "      <td>2011</td>\n",
              "      <td>R</td>\n",
              "      <td>78 min</td>\n",
              "      <td>Horror Movies, International Movies</td>\n",
              "      <td>When an army recruit is found dead, his fellow...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>s4</td>\n",
              "      <td>Movie</td>\n",
              "      <td>9</td>\n",
              "      <td>Shane Acker</td>\n",
              "      <td>Elijah Wood, John C. Reilly, Jennifer Connelly...</td>\n",
              "      <td>United States</td>\n",
              "      <td>November 16, 2017</td>\n",
              "      <td>2009</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>80 min</td>\n",
              "      <td>Action &amp; Adventure, Independent Movies, Sci-Fi...</td>\n",
              "      <td>In a postapocalyptic world, rag-doll robots hi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>s5</td>\n",
              "      <td>Movie</td>\n",
              "      <td>21</td>\n",
              "      <td>Robert Luketic</td>\n",
              "      <td>Jim Sturgess, Kevin Spacey, Kate Bosworth, Aar...</td>\n",
              "      <td>United States</td>\n",
              "      <td>January 1, 2020</td>\n",
              "      <td>2008</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>123 min</td>\n",
              "      <td>Dramas</td>\n",
              "      <td>A brilliant group of students become card-coun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7782</th>\n",
              "      <td>s7783</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zozo</td>\n",
              "      <td>Josef Fares</td>\n",
              "      <td>Imad Creidi, Antoinette Turk, Elias Gergi, Car...</td>\n",
              "      <td>Sweden, Czech Republic, United Kingdom, Denmar...</td>\n",
              "      <td>October 19, 2020</td>\n",
              "      <td>2005</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>99 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>When Lebanon's Civil War deprives Zozo of his ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7783</th>\n",
              "      <td>s7784</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zubaan</td>\n",
              "      <td>Mozez Singh</td>\n",
              "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
              "      <td>India</td>\n",
              "      <td>March 2, 2019</td>\n",
              "      <td>2015</td>\n",
              "      <td>TV-14</td>\n",
              "      <td>111 min</td>\n",
              "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
              "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7784</th>\n",
              "      <td>s7785</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zulu Man in Japan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nasty C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>September 25, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>44 min</td>\n",
              "      <td>Documentaries, International Movies, Music &amp; M...</td>\n",
              "      <td>In this documentary, South African rapper Nast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7785</th>\n",
              "      <td>s7786</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>Zumbo's Just Desserts</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adriano Zumbo, Rachel Khoo</td>\n",
              "      <td>Australia</td>\n",
              "      <td>October 31, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-PG</td>\n",
              "      <td>1 Season</td>\n",
              "      <td>International TV Shows, Reality TV</td>\n",
              "      <td>Dessert wizard Adriano Zumbo looks for the nex...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7786</th>\n",
              "      <td>s7787</td>\n",
              "      <td>Movie</td>\n",
              "      <td>ZZ TOP: THAT LITTLE OL' BAND FROM TEXAS</td>\n",
              "      <td>Sam Dunn</td>\n",
              "      <td>NaN</td>\n",
              "      <td>United Kingdom, Canada, United States</td>\n",
              "      <td>March 1, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>90 min</td>\n",
              "      <td>Documentaries, Music &amp; Musicals</td>\n",
              "      <td>This documentary delves into the mystique behi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7787 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     show_id  ...                                        description\n",
              "0         s1  ...  In a future where the elite inhabit an island ...\n",
              "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
              "2         s3  ...  When an army recruit is found dead, his fellow...\n",
              "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
              "4         s5  ...  A brilliant group of students become card-coun...\n",
              "...      ...  ...                                                ...\n",
              "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
              "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
              "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
              "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
              "7786   s7787  ...  This documentary delves into the mystique behi...\n",
              "\n",
              "[7787 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vtBdvOK8vyLl"
      },
      "source": [
        "db = \"dbgroup\""
      ],
      "id": "vtBdvOK8vyLl",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L2sbV03gv_Tv",
        "outputId": "d8084bc9-1e83-4d9a-b276-b07077bec367"
      },
      "source": [
        "type(db[2])"
      ],
      "id": "L2sbV03gv_Tv",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "str"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6865d204-dc34-4297-b9be-b768815f98b9"
      },
      "source": [
        "### 인덱싱(indexing)\n",
        "문자열에 속하는 문자의 순서(index)를 지정하여 원소를 추출"
      ],
      "id": "6865d204-dc34-4297-b9be-b768815f98b9"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "668b3c3e-da84-4116-9c00-0092cd0a43e0"
      },
      "source": [
        "string[0]"
      ],
      "id": "668b3c3e-da84-4116-9c00-0092cd0a43e0",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "340c6757-a69d-4f3b-a15f-0ef3754036ea"
      },
      "source": [
        "string[1]"
      ],
      "id": "340c6757-a69d-4f3b-a15f-0ef3754036ea",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f9b2458f-f12f-4397-b195-de58c2308cd3"
      },
      "source": [
        "string[-1]"
      ],
      "id": "f9b2458f-f12f-4397-b195-de58c2308cd3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cf582f6a-6a9a-4168-986b-eb981f066862"
      },
      "source": [
        "### [Quiz] \n",
        "뒤에서 두 번째 문자를 추출하세요. "
      ],
      "id": "cf582f6a-6a9a-4168-986b-eb981f066862"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dd8f4255-967a-4cf5-b683-bcdcfbe6a3cc"
      },
      "source": [
        ""
      ],
      "id": "dd8f4255-967a-4cf5-b683-bcdcfbe6a3cc",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "df225f88-63c6-4bdf-a9a7-62e54a666eb6"
      },
      "source": [
        ""
      ],
      "id": "df225f88-63c6-4bdf-a9a7-62e54a666eb6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "640a983d-f2bf-484a-87da-3e294db14472"
      },
      "source": [
        "### 슬라이싱 (slicing)\n",
        "문자의 순서(index)를 범위로 지정하여 여러 원소를 함께 추출 "
      ],
      "id": "640a983d-f2bf-484a-87da-3e294db14472"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "4tqsJ5X1wv9l",
        "outputId": "41ae1def-4c79-4013-c11b-3a8153923208"
      },
      "source": [
        "db"
      ],
      "id": "4tqsJ5X1wv9l",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'dbgroup'"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "yaDmBI5Fw10V",
        "outputId": "d1012051-cd25-4eb4-ce66-18fecf83b6ac"
      },
      "source": [
        "db[0]"
      ],
      "id": "yaDmBI5Fw10V",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'d'"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7ac6c10f-a8f0-4e4b-9f04-e358c49cfdf8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "812a57f4-1477-44f3-d07a-170ad7c677df"
      },
      "source": [
        "string[0:]"
      ],
      "id": "7ac6c10f-a8f0-4e4b-9f04-e358c49cfdf8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'Green policy'"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2f4e65d7-a1be-46a8-a0fd-c8be0bd00cae",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "17b0cffe-f16c-4f79-b35b-184b45542618"
      },
      "source": [
        "string[:3]"
      ],
      "id": "2f4e65d7-a1be-46a8-a0fd-c8be0bd00cae",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'Gre'"
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "de3bade4-94e3-463e-9d31-51d250e286ca"
      },
      "source": [
        "string[4:]"
      ],
      "id": "de3bade4-94e3-463e-9d31-51d250e286ca",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "81a1f2ef-386d-4906-99f0-80daee2f5209"
      },
      "source": [
        "string[:]"
      ],
      "id": "81a1f2ef-386d-4906-99f0-80daee2f5209",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1515f6d0-d9fe-4c77-8e3e-fa12060154c2"
      },
      "source": [
        "### [Quiz] \n",
        "다음 문자열에서 숫자를 추출하고, 정수형으로 변환합니다. "
      ],
      "id": "1515f6d0-d9fe-4c77-8e3e-fa12060154c2"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "id": "hplyXK1EyWS3",
        "outputId": "4f078fd0-cc00-46a7-9e47-bacea7c16ead"
      },
      "source": [
        "data"
      ],
      "id": "hplyXK1EyWS3",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>show_id</th>\n",
              "      <th>type</th>\n",
              "      <th>title</th>\n",
              "      <th>director</th>\n",
              "      <th>cast</th>\n",
              "      <th>country</th>\n",
              "      <th>date_added</th>\n",
              "      <th>release_year</th>\n",
              "      <th>rating</th>\n",
              "      <th>duration</th>\n",
              "      <th>listed_in</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>s1</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>3%</td>\n",
              "      <td>NaN</td>\n",
              "      <td>João Miguel, Bianca Comparato, Michel Gomes, R...</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>August 14, 2020</td>\n",
              "      <td>2020</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>4 Seasons</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Sci-Fi &amp;...</td>\n",
              "      <td>In a future where the elite inhabit an island ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>s2</td>\n",
              "      <td>Movie</td>\n",
              "      <td>7:19</td>\n",
              "      <td>Jorge Michel Grau</td>\n",
              "      <td>Demián Bichir, Héctor Bonilla, Oscar Serrano, ...</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>December 23, 2016</td>\n",
              "      <td>2016</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>93 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>After a devastating earthquake hits Mexico Cit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>s3</td>\n",
              "      <td>Movie</td>\n",
              "      <td>23:59</td>\n",
              "      <td>Gilbert Chan</td>\n",
              "      <td>Tedd Chan, Stella Chung, Henley Hii, Lawrence ...</td>\n",
              "      <td>Singapore</td>\n",
              "      <td>December 20, 2018</td>\n",
              "      <td>2011</td>\n",
              "      <td>R</td>\n",
              "      <td>78 min</td>\n",
              "      <td>Horror Movies, International Movies</td>\n",
              "      <td>When an army recruit is found dead, his fellow...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>s4</td>\n",
              "      <td>Movie</td>\n",
              "      <td>9</td>\n",
              "      <td>Shane Acker</td>\n",
              "      <td>Elijah Wood, John C. Reilly, Jennifer Connelly...</td>\n",
              "      <td>United States</td>\n",
              "      <td>November 16, 2017</td>\n",
              "      <td>2009</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>80 min</td>\n",
              "      <td>Action &amp; Adventure, Independent Movies, Sci-Fi...</td>\n",
              "      <td>In a postapocalyptic world, rag-doll robots hi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>s5</td>\n",
              "      <td>Movie</td>\n",
              "      <td>21</td>\n",
              "      <td>Robert Luketic</td>\n",
              "      <td>Jim Sturgess, Kevin Spacey, Kate Bosworth, Aar...</td>\n",
              "      <td>United States</td>\n",
              "      <td>January 1, 2020</td>\n",
              "      <td>2008</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>123 min</td>\n",
              "      <td>Dramas</td>\n",
              "      <td>A brilliant group of students become card-coun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7782</th>\n",
              "      <td>s7783</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zozo</td>\n",
              "      <td>Josef Fares</td>\n",
              "      <td>Imad Creidi, Antoinette Turk, Elias Gergi, Car...</td>\n",
              "      <td>Sweden, Czech Republic, United Kingdom, Denmar...</td>\n",
              "      <td>October 19, 2020</td>\n",
              "      <td>2005</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>99 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>When Lebanon's Civil War deprives Zozo of his ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7783</th>\n",
              "      <td>s7784</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zubaan</td>\n",
              "      <td>Mozez Singh</td>\n",
              "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
              "      <td>India</td>\n",
              "      <td>March 2, 2019</td>\n",
              "      <td>2015</td>\n",
              "      <td>TV-14</td>\n",
              "      <td>111 min</td>\n",
              "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
              "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7784</th>\n",
              "      <td>s7785</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zulu Man in Japan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nasty C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>September 25, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>44 min</td>\n",
              "      <td>Documentaries, International Movies, Music &amp; M...</td>\n",
              "      <td>In this documentary, South African rapper Nast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7785</th>\n",
              "      <td>s7786</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>Zumbo's Just Desserts</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adriano Zumbo, Rachel Khoo</td>\n",
              "      <td>Australia</td>\n",
              "      <td>October 31, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-PG</td>\n",
              "      <td>1 Season</td>\n",
              "      <td>International TV Shows, Reality TV</td>\n",
              "      <td>Dessert wizard Adriano Zumbo looks for the nex...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7786</th>\n",
              "      <td>s7787</td>\n",
              "      <td>Movie</td>\n",
              "      <td>ZZ TOP: THAT LITTLE OL' BAND FROM TEXAS</td>\n",
              "      <td>Sam Dunn</td>\n",
              "      <td>NaN</td>\n",
              "      <td>United Kingdom, Canada, United States</td>\n",
              "      <td>March 1, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>90 min</td>\n",
              "      <td>Documentaries, Music &amp; Musicals</td>\n",
              "      <td>This documentary delves into the mystique behi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7787 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     show_id  ...                                        description\n",
              "0         s1  ...  In a future where the elite inhabit an island ...\n",
              "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
              "2         s3  ...  When an army recruit is found dead, his fellow...\n",
              "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
              "4         s5  ...  A brilliant group of students become card-coun...\n",
              "...      ...  ...                                                ...\n",
              "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
              "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
              "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
              "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
              "7786   s7787  ...  This documentary delves into the mystique behi...\n",
              "\n",
              "[7787 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "cKOBnNCRyaEX",
        "outputId": "67d0df5f-90fc-4c18-b66d-ca6ee3bb1dd6"
      },
      "source": [
        "data['title'][3]"
      ],
      "id": "cKOBnNCRyaEX",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'9'"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3MXwcv2ay57W",
        "outputId": "a5542138-08ca-4306-b9ca-10d7124e917c"
      },
      "source": [
        "int(data['title'][3])"
      ],
      "id": "3MXwcv2ay57W",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a1e53a8d-3d24-4396-a001-b545767c501b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "b364ff14-29cb-414f-8403-75b0a24470f9"
      },
      "source": [
        "data['duration'][0]"
      ],
      "id": "a1e53a8d-3d24-4396-a001-b545767c501b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'4 Seasons'"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5cdbf49e-9ded-40fc-9fe2-de33ed84c294",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15a51298-9194-471b-a74b-c792658872a9"
      },
      "source": [
        "data['duration'][0][0]\n",
        "type(data['duration'][0][0])"
      ],
      "id": "5cdbf49e-9ded-40fc-9fe2-de33ed84c294",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "str"
            ]
          },
          "metadata": {},
          "execution_count": 128
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_tgioiK7zQNX",
        "outputId": "dc7989e8-e657-492c-eeef-8fe3fd41152a"
      },
      "source": [
        "int(data['duration'][0][0])\n",
        "type(int(data['duration'][0][0]))"
      ],
      "id": "_tgioiK7zQNX",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int"
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "36a0202d-5660-4fed-a428-28153fcdc75c"
      },
      "source": [
        "# Operator (연산자)"
      ],
      "id": "36a0202d-5660-4fed-a428-28153fcdc75c"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a6f94717-0049-46c9-b604-965aa3607470"
      },
      "source": [
        "## 산술 연산자"
      ],
      "id": "a6f94717-0049-46c9-b604-965aa3607470"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "05c71ba6-3e55-4c27-8703-7b6c12ce1005"
      },
      "source": [
        "- (+) 연산자 : 덧셈"
      ],
      "id": "05c71ba6-3e55-4c27-8703-7b6c12ce1005"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "74a7579f-dd45-43d9-898e-45521051209b"
      },
      "source": [
        "3 + 2"
      ],
      "id": "74a7579f-dd45-43d9-898e-45521051209b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b7d5e443-dadd-4cda-8cf5-a160f38d2182"
      },
      "source": [
        "- (-) 연산자 : 뺄셈"
      ],
      "id": "b7d5e443-dadd-4cda-8cf5-a160f38d2182"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e7a8fc45-e8d4-49cb-82f5-9ac927fd1b38"
      },
      "source": [
        "3 - 2"
      ],
      "id": "e7a8fc45-e8d4-49cb-82f5-9ac927fd1b38",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "58fbe3c2-264c-4706-8f40-198794ad4d59"
      },
      "source": [
        "- (*) 연산자 : 곱셈"
      ],
      "id": "58fbe3c2-264c-4706-8f40-198794ad4d59"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c6ece5d1-42d2-4ade-bc37-ab6aebfe2f52",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3d30b852-1b57-40ff-81a0-e30effd6ab21"
      },
      "source": [
        "3 * 2"
      ],
      "id": "c6ece5d1-42d2-4ade-bc37-ab6aebfe2f52",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "77f3e980-21fa-44f8-988b-d92bbe2d9abc"
      },
      "source": [
        "- (/) 연산자 : 나눗셈"
      ],
      "id": "77f3e980-21fa-44f8-988b-d92bbe2d9abc"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3a3701b9-8c97-4f6e-9b94-dc4bfe73930c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "031c9089-e1f7-4df1-d530-d59581beeebc"
      },
      "source": [
        "3 / 2"
      ],
      "id": "3a3701b9-8c97-4f6e-9b94-dc4bfe73930c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.5"
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fc5afdaa-ab8a-4460-90e6-bf22ab4c2754"
      },
      "source": [
        "- (**) 연산자 : 거듭제곱"
      ],
      "id": "fc5afdaa-ab8a-4460-90e6-bf22ab4c2754"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1ec66217-c987-4b15-b42a-8292c7a32e15",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0c7747d4-625c-4a46-c9fe-98e696a9b115"
      },
      "source": [
        "3 ** 2"
      ],
      "id": "1ec66217-c987-4b15-b42a-8292c7a32e15",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {},
          "execution_count": 134
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ccd2ca16-d5a6-433c-84af-c0c4065c4d98"
      },
      "source": [
        "- (%) 연산자 : 나머지"
      ],
      "id": "ccd2ca16-d5a6-433c-84af-c0c4065c4d98"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9943c4a9-8dca-4182-adee-fb8fef4b1fc7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5aef23cd-4608-4447-933c-cf0d332a3110"
      },
      "source": [
        "3 % 2"
      ],
      "id": "9943c4a9-8dca-4182-adee-fb8fef4b1fc7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0177b705-bcbb-499c-b6b6-1ed860bdaffa"
      },
      "source": [
        "- (//) 연산자 : 몫"
      ],
      "id": "0177b705-bcbb-499c-b6b6-1ed860bdaffa"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5d600f67-4207-44c4-bfb4-2f3adf1f2b4e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "61b8f9bc-6b0c-4c14-929d-f298f5eafbb0"
      },
      "source": [
        "3 // 2"
      ],
      "id": "5d600f67-4207-44c4-bfb4-2f3adf1f2b4e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 135
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ddf2741b-8d98-47cf-bf05-caa37af39084"
      },
      "source": [
        "### [Quiz] \n",
        "3과 7을 더한 값에 10을 곱합니다."
      ],
      "id": "ddf2741b-8d98-47cf-bf05-caa37af39084"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "337fad21-7a88-41ff-a95b-ad41d183d788"
      },
      "source": [
        ""
      ],
      "id": "337fad21-7a88-41ff-a95b-ad41d183d788",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "34b9def2-2cf4-48cc-829b-29a1ada851e7"
      },
      "source": [
        ""
      ],
      "id": "34b9def2-2cf4-48cc-829b-29a1ada851e7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8d0060bb-ea34-414c-bf98-99e5914233b7"
      },
      "source": [
        "## 비교 연산자"
      ],
      "id": "8d0060bb-ea34-414c-bf98-99e5914233b7"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "348c53d1-ad1c-4f2a-b09f-c85d8156029c"
      },
      "source": [
        "- A > B : A가 B보다 크다"
      ],
      "id": "348c53d1-ad1c-4f2a-b09f-c85d8156029c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d8d559a9-04e6-48e4-b137-8dce8839f091",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cad6d6ad-2052-4bd1-e894-c32617eb2883"
      },
      "source": [
        "3 > 2"
      ],
      "id": "d8d559a9-04e6-48e4-b137-8dce8839f091",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "58f463f3-48d8-49ff-88ff-fdd5decd372c"
      },
      "source": [
        "- A < B : A가 B보다 작다"
      ],
      "id": "58f463f3-48d8-49ff-88ff-fdd5decd372c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0419eb13-de58-421b-bb2d-3d6121ceb431",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b605432b-a07a-4930-d3f0-91e8df85a8a5"
      },
      "source": [
        "3 < 2"
      ],
      "id": "0419eb13-de58-421b-bb2d-3d6121ceb431",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "25905b09-4fe6-423c-88ab-ae38a361eb14"
      },
      "source": [
        "- A >= B  : A가 B보다 크거나 같다"
      ],
      "id": "25905b09-4fe6-423c-88ab-ae38a361eb14"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3e2c74e9-bf03-415a-92d2-e6ea58e3d8b8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9132e5e3-ccc6-4a06-977d-57f9ed41d850"
      },
      "source": [
        "3 >= 2"
      ],
      "id": "3e2c74e9-bf03-415a-92d2-e6ea58e3d8b8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 138
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6bad70f2-d682-48bf-b7c8-9746f50e1d6e"
      },
      "source": [
        "- A <= B  : A가 B보다 작거나 같다"
      ],
      "id": "6bad70f2-d682-48bf-b7c8-9746f50e1d6e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "361420cd-307d-4c5c-aace-686232a21a1c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b814cfaf-6784-4816-e30b-b645a77b4f97"
      },
      "source": [
        "3 <= 2"
      ],
      "id": "361420cd-307d-4c5c-aace-686232a21a1c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eda72783-a823-47b9-a249-c5a41da87c03"
      },
      "source": [
        "- A == B   : A와 B가 같다"
      ],
      "id": "eda72783-a823-47b9-a249-c5a41da87c03"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "49fe1311-acb0-458b-b372-d8e6e5e4dbe3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0b60c154-94a2-4014-edd2-0370dc34b768"
      },
      "source": [
        "3 == 2"
      ],
      "id": "49fe1311-acb0-458b-b372-d8e6e5e4dbe3",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "69a197ed-f28f-4f35-9635-489d7e73d3a7"
      },
      "source": [
        "- A != B   : A와 B가 다르다"
      ],
      "id": "69a197ed-f28f-4f35-9635-489d7e73d3a7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d94e4034-67b2-4d2a-bd3a-c1f7344a3b75",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7bb95f3e-947f-4694-a4fc-5be7c903b4a9"
      },
      "source": [
        "3 != 2"
      ],
      "id": "d94e4034-67b2-4d2a-bd3a-c1f7344a3b75",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "69aa8dad-bd0b-472b-b582-93c8bf84970f"
      },
      "source": [
        "- [참고] if 조건문"
      ],
      "id": "69aa8dad-bd0b-472b-b582-93c8bf84970f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c33f4cf5-8bdb-4c97-9029-563818a87664",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8d05dd7c-619f-4e63-f705-a3c250ac01e7"
      },
      "source": [
        "score = 80\n",
        "\n",
        "if score > 80:\n",
        "    print(\"합격입니다\")\n",
        "    \n",
        "else:\n",
        "    print(\"재응시 대상자입니다\")"
      ],
      "id": "c33f4cf5-8bdb-4c97-9029-563818a87664",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "재응시 대상자입니다\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8d74c6d3-7307-4f8a-ab45-27e58f881e75"
      },
      "source": [
        "## 논리 연산자"
      ],
      "id": "8d74c6d3-7307-4f8a-ab45-27e58f881e75"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "747562f1-9e81-4953-b711-e7eb6b9f83d2"
      },
      "source": [
        "- not A"
      ],
      "id": "747562f1-9e81-4953-b711-e7eb6b9f83d2"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eae0866b-e313-4661-a87a-b8b4c61b85dc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2c33b778-b582-42e2-a44a-98eea0601986"
      },
      "source": [
        "not True"
      ],
      "id": "eae0866b-e313-4661-a87a-b8b4c61b85dc",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e9e899e4-a51b-4e40-b9e7-49e94213eeb4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e6ee8cd0-74ab-44b3-80df-4197fa3322c1"
      },
      "source": [
        "not False"
      ],
      "id": "e9e899e4-a51b-4e40-b9e7-49e94213eeb4",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "73c3c72e-db6f-401b-ad3d-3cfe51f666b5"
      },
      "source": [
        "- A and B   "
      ],
      "id": "73c3c72e-db6f-401b-ad3d-3cfe51f666b5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "debd5f40-5d0b-4e17-a2fa-25edb57c0d63",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9f4e8bc8-a9a4-4b65-f639-3506952b2339"
      },
      "source": [
        "True and True"
      ],
      "id": "debd5f40-5d0b-4e17-a2fa-25edb57c0d63",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 145
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ffc3c32d-c478-44f1-a1b1-e2918c92af60",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f0a9f18b-3e10-4576-de0e-3cc14f6df026"
      },
      "source": [
        "True and False"
      ],
      "id": "ffc3c32d-c478-44f1-a1b1-e2918c92af60",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d9ea2adb-f810-4507-bb8b-f8e46fa033d7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "720bb00c-53be-4ed0-d2ef-ae8412febc7e"
      },
      "source": [
        "False and False"
      ],
      "id": "d9ea2adb-f810-4507-bb8b-f8e46fa033d7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 147
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f8a59216-3339-4fb4-88ee-7e734b98cc6e"
      },
      "source": [
        "- A & B (비트 연산자) : True(1), False(0)"
      ],
      "id": "f8a59216-3339-4fb4-88ee-7e734b98cc6e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1489cc67-b6e3-49b0-a78f-f5160ba8ff2c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "543ffdf8-b986-43b9-f269-47f2c480fb4c"
      },
      "source": [
        "(2 > 1) & (1 > 2)"
      ],
      "id": "1489cc67-b6e3-49b0-a78f-f5160ba8ff2c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "30224f16-b0b7-462e-b946-c95649eed0ef",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ff9156e5-42d0-4cc7-8ca8-57a272fcd4ea"
      },
      "source": [
        "(2 > 1) & (1 > 2)"
      ],
      "id": "30224f16-b0b7-462e-b946-c95649eed0ef",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "26335e52-cf93-4f92-b687-9f2c8cea13d8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d22bb9d3-61ba-4b4a-c164-ce2bab60dbc8"
      },
      "source": [
        "(1 != 1) & (1 == 2)"
      ],
      "id": "26335e52-cf93-4f92-b687-9f2c8cea13d8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "15b7b795-1273-495d-9ff6-a226ab58f42c"
      },
      "source": [
        "- A or B   "
      ],
      "id": "15b7b795-1273-495d-9ff6-a226ab58f42c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f5927416-ecc2-4afe-a792-fdef3739ae09",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "42f05cbe-ee8d-41e0-dc8c-d87fca83ed6e"
      },
      "source": [
        "True or True"
      ],
      "id": "f5927416-ecc2-4afe-a792-fdef3739ae09",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4e9a33c7-7800-49fc-b12f-597bbf99a142",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3832c082-938a-4568-909b-1de1dda9a8ba"
      },
      "source": [
        "True or False"
      ],
      "id": "4e9a33c7-7800-49fc-b12f-597bbf99a142",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9d8af955-9f53-49e7-959e-5cf3e798eeb0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f2a4a113-f39d-4549-ce15-77d3a3e109a8"
      },
      "source": [
        "False or False"
      ],
      "id": "9d8af955-9f53-49e7-959e-5cf3e798eeb0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4173d6ad-68da-4f06-8138-e7b8ccb1aebc"
      },
      "source": [
        "- A or B (비트 연산자) : True(1), False(0)"
      ],
      "id": "4173d6ad-68da-4f06-8138-e7b8ccb1aebc"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "925937ea-c277-4a11-8bac-c2290322d6a3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "ed2d877a-48b2-4ff0-ca7f-333b0cf4e842"
      },
      "source": [
        "(2 > 1) || (1 > 2)"
      ],
      "id": "925937ea-c277-4a11-8bac-c2290322d6a3",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-157-7518a8440734>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    (2 > 1) || (1 > 2)\u001b[0m\n\u001b[0m             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "06675956-158c-4dff-8e13-c209f7e2fc48",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "103cde2d-2200-4068-9b95-d8816f432c59"
      },
      "source": [
        "(2 > 1) | (1 > 2)"
      ],
      "id": "06675956-158c-4dff-8e13-c209f7e2fc48",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 159
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "80267416-167e-401f-96ff-7a831614ad02",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "049e5498-75d4-49a8-be3b-ee92a38835f1"
      },
      "source": [
        "(1 != 1) | (1 == 2)"
      ],
      "id": "80267416-167e-401f-96ff-7a831614ad02",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 158
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4bc083a4-e9d3-4f1c-9cfd-0d3c22d25ac6"
      },
      "source": [
        "- [참고] if 조건문"
      ],
      "id": "4bc083a4-e9d3-4f1c-9cfd-0d3c22d25ac6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bcc49319-fea7-4ff2-bd14-7fff7ee1b97a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "393eb935-a623-4698-cb60-0bd5e81b5e22"
      },
      "source": [
        "score = 80\n",
        "attendance = 0.8\n",
        "\n",
        "if (score > 80) and (attendance>=0.8):\n",
        "    print(\"합격입니다\")\n",
        "    \n",
        "else:\n",
        "    print(\"재응시 대상자입니다\")"
      ],
      "id": "bcc49319-fea7-4ff2-bd14-7fff7ee1b97a",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "재응시 대상자입니다\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6a5afe3f-8d81-498a-89b7-fe02c5339ee9"
      },
      "source": [
        "# 집합 형태의 자료형"
      ],
      "id": "6a5afe3f-8d81-498a-89b7-fe02c5339ee9"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "77e267d9-1c1f-4f46-87de-41ec2577400d"
      },
      "source": [
        "## 리스트(List)"
      ],
      "id": "77e267d9-1c1f-4f46-87de-41ec2577400d"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0873f3cb-dad2-419c-a9f1-2e810b502f6c"
      },
      "source": [
        "- 리스트 만들기: 대괄호 안에 쉼표(,)를 사용하여 원소들을 구분"
      ],
      "id": "0873f3cb-dad2-419c-a9f1-2e810b502f6c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c26ec70e-9650-4a09-a6a0-bb3e8c5c9e86"
      },
      "source": [
        "a = [4, 2, 1, 3, 5]"
      ],
      "id": "c26ec70e-9650-4a09-a6a0-bb3e8c5c9e86",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eac9da54-dd18-4094-b409-07d85eb17adb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f51e84ec-c4c8-4629-e263-85f42e60236f"
      },
      "source": [
        "a"
      ],
      "id": "eac9da54-dd18-4094-b409-07d85eb17adb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[4, 2, 1, 3, 5]"
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tW_TSsElH5oA",
        "outputId": "52cb31fb-b926-493f-821c-be0d03e9a264"
      },
      "source": [
        "a[-3]"
      ],
      "id": "tW_TSsElH5oA",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 168
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XupJTHVhHjdf"
      },
      "source": [
        "x = (1, 2)"
      ],
      "id": "XupJTHVhHjdf",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VAz3uTivHnBP",
        "outputId": "50c0e71a-c6d6-43ed-bfb4-8e6fbe833318"
      },
      "source": [
        "x"
      ],
      "id": "VAz3uTivHnBP",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P4aybTtVHpGD",
        "outputId": "f1e747a2-2f7f-4665-d845-208e08e764bd"
      },
      "source": [
        "type(x)"
      ],
      "id": "P4aybTtVHpGD",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tuple"
            ]
          },
          "metadata": {},
          "execution_count": 166
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "08683526-b4f1-41da-9264-9e06b5284dac",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4b4d9785-f450-4346-fef7-3c2b8118edc7"
      },
      "source": [
        "type(a)"
      ],
      "id": "08683526-b4f1-41da-9264-9e06b5284dac",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "list"
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c43dedac-4ac0-449d-a8bf-ab52dff04378"
      },
      "source": [
        "- 리스트 길이 구하기"
      ],
      "id": "c43dedac-4ac0-449d-a8bf-ab52dff04378"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "42460f5d-7690-40c7-a54c-49082add33bd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "330f6845-b8dd-4ff1-f511-77b1900bf443"
      },
      "source": [
        "len(넥플릭스테스트)"
      ],
      "id": "42460f5d-7690-40c7-a54c-49082add33bd",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7787"
            ]
          },
          "metadata": {},
          "execution_count": 170
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fXH6I7SvIwEq",
        "outputId": "38094333-99f6-445c-bea5-ed48a377492e"
      },
      "source": [
        "len(data['cast'])"
      ],
      "id": "fXH6I7SvIwEq",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7787"
            ]
          },
          "metadata": {},
          "execution_count": 171
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "089a42db-ca0f-4f1e-967a-f9678bfd5f96"
      },
      "source": [
        "- [참고] for 반복문"
      ],
      "id": "089a42db-ca0f-4f1e-967a-f9678bfd5f96"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d9339e25-af08-4e83-a59f-3b7522e9c62b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "54033323-ee54-4fa4-fc3f-8cb5c45aa347"
      },
      "source": [
        "for c in [4, 2, 1, 3, 5]:\n",
        "    print(c)"
      ],
      "id": "d9339e25-af08-4e83-a59f-3b7522e9c62b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4\n",
            "2\n",
            "1\n",
            "3\n",
            "5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aa46d11a-aef2-4c90-a543-ea435ca2279a"
      },
      "source": [
        "- 리스트 인덱싱"
      ],
      "id": "aa46d11a-aef2-4c90-a543-ea435ca2279a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "245176c8-5a38-42c1-83fc-463190ede469",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f29afc2a-6fe8-4ab5-c84c-595ec00f1f18"
      },
      "source": [
        "# a의 첫번째 원소\n",
        "a[0]"
      ],
      "id": "245176c8-5a38-42c1-83fc-463190ede469",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 174
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ac42a87f-9c98-4b6b-9434-3ab8bcbc1b46",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "481e29ac-488c-4aee-adcb-ee74a2841c81"
      },
      "source": [
        "# a의 마지막 원소\n",
        "a[-1]"
      ],
      "id": "ac42a87f-9c98-4b6b-9434-3ab8bcbc1b46",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 175
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "31244e7f-2560-47cd-98be-ecef7ed4dbd4"
      },
      "source": [
        "- 리스트 슬라이싱"
      ],
      "id": "31244e7f-2560-47cd-98be-ecef7ed4dbd4"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "34363e00-5454-4eaa-9fcb-504552374220"
      },
      "source": [
        "# a의 인덱스 범위 0 ~ 2 원소를 슬라이싱 추출\n",
        "a[0:2]"
      ],
      "id": "34363e00-5454-4eaa-9fcb-504552374220",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "82cf9dd1-9d2e-47cf-8301-fe57042a152c"
      },
      "source": [
        "- 리스트 값 변경하기"
      ],
      "id": "82cf9dd1-9d2e-47cf-8301-fe57042a152c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aba1e349-9d9c-423a-93a2-fd03c464f329"
      },
      "source": [
        "a[2] = 10"
      ],
      "id": "aba1e349-9d9c-423a-93a2-fd03c464f329",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e1a29dff-e517-4c46-862c-1324e223d18f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "60ce5d3c-1ab5-4302-8e0a-f6967a0ae390"
      },
      "source": [
        "a"
      ],
      "id": "e1a29dff-e517-4c46-862c-1324e223d18f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[4, 2, 10, 3, 5]"
            ]
          },
          "metadata": {},
          "execution_count": 179
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "41f9851b-fa37-490d-a974-afa42bafb592"
      },
      "source": [
        "a[0:2] = [40, 20]"
      ],
      "id": "41f9851b-fa37-490d-a974-afa42bafb592",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9fcb42d0-8336-4046-84a4-4d1ab4f36344",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1e978d76-e5ef-4a2b-e3d0-ef8df80a3ef4"
      },
      "source": [
        "a"
      ],
      "id": "9fcb42d0-8336-4046-84a4-4d1ab4f36344",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[40, 20, 10, 3, 5]"
            ]
          },
          "metadata": {},
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "494cd18d-29d6-4364-b2c2-e78b7da418fb"
      },
      "source": [
        "### [Quiz] 리스트의 첫 번째 원소를 'Y2020'으로 변경하세요."
      ],
      "id": "494cd18d-29d6-4364-b2c2-e78b7da418fb"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0e35f7c6-6c5b-4291-8f9a-429c10a7a2d7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3c543e4f-32c7-4c30-bde6-3792491fb6b6"
      },
      "source": [
        "years = list(data['release_year'].unique())\n",
        "print(years)"
      ],
      "id": "0e35f7c6-6c5b-4291-8f9a-429c10a7a2d7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[2020, 2016, 2011, 2009, 2008, 2019, 1997, 2017, 2018, 2014, 2015, 2010, 2005, 2013, 2012, 2006, 2000, 2003, 1989, 2004, 1977, 1971, 1993, 2007, 1998, 1988, 1996, 2002, 1986, 1990, 1979, 1980, 1974, 2001, 1999, 1966, 1991, 1982, 1994, 1995, 1978, 1992, 1972, 1975, 2021, 1973, 1967, 1960, 1981, 1958, 1976, 1968, 1956, 1985, 1965, 1984, 1983, 1987, 1945, 1946, 1962, 1925, 1942, 1969, 1955, 1963, 1964, 1954, 1970, 1944, 1947, 1959, 1943]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "132b2290-a142-4310-90a3-5d9acd971468",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b3e2f260-99cd-4efb-a39b-420f76aa53e9"
      },
      "source": [
        "years[0] = 'Y2020'\n",
        "print(years)"
      ],
      "id": "132b2290-a142-4310-90a3-5d9acd971468",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Y2020', 2016, 2011, 2009, 2008, 2019, 1997, 2017, 2018, 2014, 2015, 2010, 2005, 2013, 2012, 2006, 2000, 2003, 1989, 2004, 1977, 1971, 1993, 2007, 1998, 1988, 1996, 2002, 1986, 1990, 1979, 1980, 1974, 2001, 1999, 1966, 1991, 1982, 1994, 1995, 1978, 1992, 1972, 1975, 2021, 1973, 1967, 1960, 1981, 1958, 1976, 1968, 1956, 1985, 1965, 1984, 1983, 1987, 1945, 1946, 1962, 1925, 1942, 1969, 1955, 1963, 1964, 1954, 1970, 1944, 1947, 1959, 1943]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3423b425-3e58-4778-b993-837396b89247"
      },
      "source": [
        ""
      ],
      "id": "3423b425-3e58-4778-b993-837396b89247",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "84149140-3fbd-486e-9892-9803a15f7f86"
      },
      "source": [
        "- 리스트 덧셈 연산자 적용"
      ],
      "id": "84149140-3fbd-486e-9892-9803a15f7f86"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bc53b75d-06b0-47fe-b3fe-5d1f3e0c6330"
      },
      "source": [
        "[1, 2] + [\"파이썬\"]"
      ],
      "id": "bc53b75d-06b0-47fe-b3fe-5d1f3e0c6330",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c22ff3c2-6cb2-4a57-bba6-19615cb76ba0"
      },
      "source": [
        "- 리스트 원소 추가"
      ],
      "id": "c22ff3c2-6cb2-4a57-bba6-19615cb76ba0"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c22ecd02-52f9-462c-91a3-6f54522b3f0e"
      },
      "source": [
        "a.append(100)"
      ],
      "id": "c22ecd02-52f9-462c-91a3-6f54522b3f0e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "be652bce-793b-4aa0-8660-b5c64cb6c4f5"
      },
      "source": [
        "a"
      ],
      "id": "be652bce-793b-4aa0-8660-b5c64cb6c4f5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d8f759a9-fb32-49f7-845f-e7fb7d542023"
      },
      "source": [
        "- 논리 연산"
      ],
      "id": "d8f759a9-fb32-49f7-845f-e7fb7d542023"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c3869317-3cde-457c-aef3-0187d1267f58"
      },
      "source": [
        "1 in a"
      ],
      "id": "c3869317-3cde-457c-aef3-0187d1267f58",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5d4e4bbf-b77a-4346-b6a2-81a5ec3617f4"
      },
      "source": [
        "1 not in a"
      ],
      "id": "5d4e4bbf-b77a-4346-b6a2-81a5ec3617f4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "43bf070d-22cd-4fb2-9a86-b956892fece6"
      },
      "source": [
        "## 2. 투플(Tuple)"
      ],
      "id": "43bf070d-22cd-4fb2-9a86-b956892fece6"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4809f07c-e501-4cee-aa6c-f356b1127ed5"
      },
      "source": [
        "- 투플 만들기"
      ],
      "id": "4809f07c-e501-4cee-aa6c-f356b1127ed5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f64e0342-8536-459c-a6c0-82f6353f7ec6"
      },
      "source": [
        "ta = (4, 2, 1, 3, 5)"
      ],
      "id": "f64e0342-8536-459c-a6c0-82f6353f7ec6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "48524d17-25a7-4514-82c7-f60da4f51f4a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "abf641ba-7b62-4fee-b072-1170c5fcccc0"
      },
      "source": [
        "ta"
      ],
      "id": "48524d17-25a7-4514-82c7-f60da4f51f4a",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4, 2, 1, 3, 5)"
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d57a3dae-13f1-4b7a-8c76-e00dac45cfa2"
      },
      "source": [
        "- 투플 인덱싱"
      ],
      "id": "d57a3dae-13f1-4b7a-8c76-e00dac45cfa2"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "221e8291-6e0f-4eac-b3b7-8d84682a0220",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b5c37b24-e295-4cee-cfc2-e725e71bea59"
      },
      "source": [
        "ta[0]"
      ],
      "id": "221e8291-6e0f-4eac-b3b7-8d84682a0220",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "76e92736-1806-471e-8b9a-807b90ea6132"
      },
      "source": [
        "- 투플 슬라이싱"
      ],
      "id": "76e92736-1806-471e-8b9a-807b90ea6132"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "092ab808-2b49-4148-ab8b-c4344e6c5a7a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "92465d96-70b7-4f84-d410-066563fdd072"
      },
      "source": [
        "ta[0:2]"
      ],
      "id": "092ab808-2b49-4148-ab8b-c4344e6c5a7a",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 193
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "db5c330c-6876-42cb-8579-8281d55c5905"
      },
      "source": [
        "## 3. 딕셔너리(Dictionary)"
      ],
      "id": "db5c330c-6876-42cb-8579-8281d55c5905"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "46663673-1a5f-420f-81b0-8bd14d7718c5"
      },
      "source": [
        "- 딕셔너리 만들기"
      ],
      "id": "46663673-1a5f-420f-81b0-8bd14d7718c5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d725a94e-8340-4f95-8d3e-dcc834523af7"
      },
      "source": [
        "da = {\"team\":\"두산베어스\", \"position\":\"내야수\", \"타율\":0.324}"
      ],
      "id": "d725a94e-8340-4f95-8d3e-dcc834523af7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "sOuaU7veLrdA",
        "outputId": "7778690f-f8af-4b71-eacb-f75490b38701"
      },
      "source": [
        "da['team']"
      ],
      "id": "sOuaU7veLrdA",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'두산베어스'"
            ]
          },
          "metadata": {},
          "execution_count": 201
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "adcc958c-4c9e-410a-b89c-9ad6c3d2988f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "f61ff650-a111-4dc3-f356-cbf237be58a7"
      },
      "source": [
        "da['team']"
      ],
      "id": "adcc958c-4c9e-410a-b89c-9ad6c3d2988f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'두산베어스'"
            ]
          },
          "metadata": {},
          "execution_count": 195
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "562d97cf-30a5-4a4b-bda9-0509f26660ed"
      },
      "source": [
        "- 자료형 확인"
      ],
      "id": "562d97cf-30a5-4a4b-bda9-0509f26660ed"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "id": "DV5qKM86MLhs",
        "outputId": "0f8c72d4-c59e-4128-b05b-77ea90bfefd8"
      },
      "source": [
        "data"
      ],
      "id": "DV5qKM86MLhs",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>show_id</th>\n",
              "      <th>type</th>\n",
              "      <th>title</th>\n",
              "      <th>director</th>\n",
              "      <th>cast</th>\n",
              "      <th>country</th>\n",
              "      <th>date_added</th>\n",
              "      <th>release_year</th>\n",
              "      <th>rating</th>\n",
              "      <th>duration</th>\n",
              "      <th>listed_in</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>s1</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>3%</td>\n",
              "      <td>NaN</td>\n",
              "      <td>João Miguel, Bianca Comparato, Michel Gomes, R...</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>August 14, 2020</td>\n",
              "      <td>2020</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>4 Seasons</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Sci-Fi &amp;...</td>\n",
              "      <td>In a future where the elite inhabit an island ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>s2</td>\n",
              "      <td>Movie</td>\n",
              "      <td>7:19</td>\n",
              "      <td>Jorge Michel Grau</td>\n",
              "      <td>Demián Bichir, Héctor Bonilla, Oscar Serrano, ...</td>\n",
              "      <td>Mexico</td>\n",
              "      <td>December 23, 2016</td>\n",
              "      <td>2016</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>93 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>After a devastating earthquake hits Mexico Cit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>s3</td>\n",
              "      <td>Movie</td>\n",
              "      <td>23:59</td>\n",
              "      <td>Gilbert Chan</td>\n",
              "      <td>Tedd Chan, Stella Chung, Henley Hii, Lawrence ...</td>\n",
              "      <td>Singapore</td>\n",
              "      <td>December 20, 2018</td>\n",
              "      <td>2011</td>\n",
              "      <td>R</td>\n",
              "      <td>78 min</td>\n",
              "      <td>Horror Movies, International Movies</td>\n",
              "      <td>When an army recruit is found dead, his fellow...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>s4</td>\n",
              "      <td>Movie</td>\n",
              "      <td>9</td>\n",
              "      <td>Shane Acker</td>\n",
              "      <td>Elijah Wood, John C. Reilly, Jennifer Connelly...</td>\n",
              "      <td>United States</td>\n",
              "      <td>November 16, 2017</td>\n",
              "      <td>2009</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>80 min</td>\n",
              "      <td>Action &amp; Adventure, Independent Movies, Sci-Fi...</td>\n",
              "      <td>In a postapocalyptic world, rag-doll robots hi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>s5</td>\n",
              "      <td>Movie</td>\n",
              "      <td>21</td>\n",
              "      <td>Robert Luketic</td>\n",
              "      <td>Jim Sturgess, Kevin Spacey, Kate Bosworth, Aar...</td>\n",
              "      <td>United States</td>\n",
              "      <td>January 1, 2020</td>\n",
              "      <td>2008</td>\n",
              "      <td>PG-13</td>\n",
              "      <td>123 min</td>\n",
              "      <td>Dramas</td>\n",
              "      <td>A brilliant group of students become card-coun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7782</th>\n",
              "      <td>s7783</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zozo</td>\n",
              "      <td>Josef Fares</td>\n",
              "      <td>Imad Creidi, Antoinette Turk, Elias Gergi, Car...</td>\n",
              "      <td>Sweden, Czech Republic, United Kingdom, Denmar...</td>\n",
              "      <td>October 19, 2020</td>\n",
              "      <td>2005</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>99 min</td>\n",
              "      <td>Dramas, International Movies</td>\n",
              "      <td>When Lebanon's Civil War deprives Zozo of his ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7783</th>\n",
              "      <td>s7784</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zubaan</td>\n",
              "      <td>Mozez Singh</td>\n",
              "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
              "      <td>India</td>\n",
              "      <td>March 2, 2019</td>\n",
              "      <td>2015</td>\n",
              "      <td>TV-14</td>\n",
              "      <td>111 min</td>\n",
              "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
              "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7784</th>\n",
              "      <td>s7785</td>\n",
              "      <td>Movie</td>\n",
              "      <td>Zulu Man in Japan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nasty C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>September 25, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>44 min</td>\n",
              "      <td>Documentaries, International Movies, Music &amp; M...</td>\n",
              "      <td>In this documentary, South African rapper Nast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7785</th>\n",
              "      <td>s7786</td>\n",
              "      <td>TV Show</td>\n",
              "      <td>Zumbo's Just Desserts</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adriano Zumbo, Rachel Khoo</td>\n",
              "      <td>Australia</td>\n",
              "      <td>October 31, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-PG</td>\n",
              "      <td>1 Season</td>\n",
              "      <td>International TV Shows, Reality TV</td>\n",
              "      <td>Dessert wizard Adriano Zumbo looks for the nex...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7786</th>\n",
              "      <td>s7787</td>\n",
              "      <td>Movie</td>\n",
              "      <td>ZZ TOP: THAT LITTLE OL' BAND FROM TEXAS</td>\n",
              "      <td>Sam Dunn</td>\n",
              "      <td>NaN</td>\n",
              "      <td>United Kingdom, Canada, United States</td>\n",
              "      <td>March 1, 2020</td>\n",
              "      <td>2019</td>\n",
              "      <td>TV-MA</td>\n",
              "      <td>90 min</td>\n",
              "      <td>Documentaries, Music &amp; Musicals</td>\n",
              "      <td>This documentary delves into the mystique behi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7787 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     show_id  ...                                        description\n",
              "0         s1  ...  In a future where the elite inhabit an island ...\n",
              "1         s2  ...  After a devastating earthquake hits Mexico Cit...\n",
              "2         s3  ...  When an army recruit is found dead, his fellow...\n",
              "3         s4  ...  In a postapocalyptic world, rag-doll robots hi...\n",
              "4         s5  ...  A brilliant group of students become card-coun...\n",
              "...      ...  ...                                                ...\n",
              "7782   s7783  ...  When Lebanon's Civil War deprives Zozo of his ...\n",
              "7783   s7784  ...  A scrappy but poor boy worms his way into a ty...\n",
              "7784   s7785  ...  In this documentary, South African rapper Nast...\n",
              "7785   s7786  ...  Dessert wizard Adriano Zumbo looks for the nex...\n",
              "7786   s7787  ...  This documentary delves into the mystique behi...\n",
              "\n",
              "[7787 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 203
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0Ma4txPGMOPR",
        "outputId": "0c60a82f-81a6-42ce-99f7-265023fd1f54"
      },
      "source": [
        "type(data['title'])"
      ],
      "id": "0Ma4txPGMOPR",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.series.Series"
            ]
          },
          "metadata": {},
          "execution_count": 213
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a29f9254-291f-4dbf-9d67-d31e34e3a791",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f8b4b0af-5049-4b6b-eaf6-125590dd4ddd"
      },
      "source": [
        "type(da)"
      ],
      "id": "a29f9254-291f-4dbf-9d67-d31e34e3a791",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict"
            ]
          },
          "metadata": {},
          "execution_count": 202
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cc19c0c2-7918-4df9-9e39-153762093bd5"
      },
      "source": [
        "- key 값으로 value 가져오기"
      ],
      "id": "cc19c0c2-7918-4df9-9e39-153762093bd5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "81139bb5-6f14-462b-99cd-39430c2247ee",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "18f1d78c-7b1f-49ac-8d81-5558fcbf9e40"
      },
      "source": [
        "da[\"position\"]"
      ],
      "id": "81139bb5-6f14-462b-99cd-39430c2247ee",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'내야수'"
            ]
          },
          "metadata": {},
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "552a8bba-b7e2-48cf-8f2e-03a5c39a4600",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a10b7575-0036-420c-fc52-d264865193a9"
      },
      "source": [
        "da[\"타율\"]"
      ],
      "id": "552a8bba-b7e2-48cf-8f2e-03a5c39a4600",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.324"
            ]
          },
          "metadata": {},
          "execution_count": 198
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B_oKsL9fLooC"
      },
      "source": [
        ""
      ],
      "id": "B_oKsL9fLooC",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bfa8699e-2638-46aa-8eb0-65f95e51dd56"
      },
      "source": [
        "- 새로운 원소 추가"
      ],
      "id": "bfa8699e-2638-46aa-8eb0-65f95e51dd56"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e6993741-2152-4fbb-9404-57321929b2b9"
      },
      "source": [
        "# key : value\n",
        "da['city'] = '서울'"
      ],
      "id": "e6993741-2152-4fbb-9404-57321929b2b9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7aa3d260-c925-4c92-9876-0c3554c32ed8"
      },
      "source": [
        "- 원소 변경"
      ],
      "id": "7aa3d260-c925-4c92-9876-0c3554c32ed8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ba5b72c8-e899-40f0-b80c-78d4b37a37da"
      },
      "source": [
        "da[\"city\"]"
      ],
      "id": "ba5b72c8-e899-40f0-b80c-78d4b37a37da",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "667a60ac-8b1e-4a06-93e6-dbf4d69c9762"
      },
      "source": [
        "da[\"city\"] = \"잠실\""
      ],
      "id": "667a60ac-8b1e-4a06-93e6-dbf4d69c9762",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e6d9f69c-4477-47fe-a0a2-6708d2f8ea0c"
      },
      "source": [
        "- key 값 배열"
      ],
      "id": "e6d9f69c-4477-47fe-a0a2-6708d2f8ea0c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dfc23388-325b-469c-8086-fe7cf62524f5"
      },
      "source": [
        "da.keys()"
      ],
      "id": "dfc23388-325b-469c-8086-fe7cf62524f5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5aeed861-1707-4609-8757-34e548a16bb6"
      },
      "source": [
        "- [참고] for 반복문"
      ],
      "id": "5aeed861-1707-4609-8757-34e548a16bb6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "38d5859c-6055-42f8-a537-3713c431e5a3"
      },
      "source": [
        "for key in da.keys():\n",
        "    print(key)"
      ],
      "id": "38d5859c-6055-42f8-a537-3713c431e5a3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d91b0a5a-b6f2-462a-9f1e-2726366c1cd8"
      },
      "source": [
        "for key in da.keys():\n",
        "    print(da[key])"
      ],
      "id": "d91b0a5a-b6f2-462a-9f1e-2726366c1cd8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b75463e6-bc61-476c-a183-8a629ddb84db"
      },
      "source": [
        "- value 값 배열"
      ],
      "id": "b75463e6-bc61-476c-a183-8a629ddb84db"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "68847291-a312-4370-953e-bb4100fc3db3"
      },
      "source": [
        "da.values()"
      ],
      "id": "68847291-a312-4370-953e-bb4100fc3db3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "edd145c0-2c01-4488-8276-322f008cdb3d"
      },
      "source": [
        "- (key, value) 투플 배열"
      ],
      "id": "edd145c0-2c01-4488-8276-322f008cdb3d"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3f591fa8-aad6-442f-84a2-c29525fcd9e9"
      },
      "source": [
        "a = da.items()\n",
        "a"
      ],
      "id": "3f591fa8-aad6-442f-84a2-c29525fcd9e9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fb0ed421-3499-4ac4-ad82-2be692427502"
      },
      "source": [
        "a = list(a)\n",
        "a"
      ],
      "id": "fb0ed421-3499-4ac4-ad82-2be692427502",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b6de8514-66ad-4911-a8f0-62894d422d54"
      },
      "source": [
        "a[0][1]"
      ],
      "id": "b6de8514-66ad-4911-a8f0-62894d422d54",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "10857d51-045e-401b-b035-6ec145385e29"
      },
      "source": [
        "# Function (함수)"
      ],
      "id": "10857d51-045e-401b-b035-6ec145385e29"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "68a45157-729a-4440-bd32-15c8bb376407"
      },
      "source": [
        "## 사용자 함수"
      ],
      "id": "68a45157-729a-4440-bd32-15c8bb376407"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1394429a-dad2-41ba-b648-754f44ccb737"
      },
      "source": [
        "- def 예약어를 사용하여 2개의 숫자를 더하는 사용자 정의 함수 만들기"
      ],
      "id": "1394429a-dad2-41ba-b648-754f44ccb737"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0556b572-9165-472e-b295-316190c33451"
      },
      "source": [
        "def add(x, y): \n",
        "    return x + y"
      ],
      "id": "0556b572-9165-472e-b295-316190c33451",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5511f15e-55d5-4455-b3e4-9ab883d4feb8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "75b672c2-a24c-449b-f636-f71826c10d84"
      },
      "source": [
        "add(1, 2)"
      ],
      "id": "5511f15e-55d5-4455-b3e4-9ab883d4feb8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 208
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d241a3bb-471b-49e8-822b-f74f5dac86c0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "82825c46-335f-4f3c-fdec-8265e136ff6e"
      },
      "source": [
        "c = add(2, 3)\n",
        "c"
      ],
      "id": "d241a3bb-471b-49e8-822b-f74f5dac86c0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 209
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "900c08b9-bf56-4997-a9d6-4ef78c5fed6b"
      },
      "source": [
        "- 매개변수, return 없는 사용자 정의 함수"
      ],
      "id": "900c08b9-bf56-4997-a9d6-4ef78c5fed6b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9057a42e-9518-4f56-80c5-cee0754d4266"
      },
      "source": [
        "def my_name():\n",
        "    print(\"내 이름은 ooo입니다.\")"
      ],
      "id": "9057a42e-9518-4f56-80c5-cee0754d4266",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cbbbb78b-1a8e-46a4-ab37-91a25985f184"
      },
      "source": [
        "my_name()"
      ],
      "id": "cbbbb78b-1a8e-46a4-ab37-91a25985f184",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2c7ebc10-2722-4b91-8f48-3d2470e00315"
      },
      "source": [
        "myname = my_name()\n",
        "print(myname)"
      ],
      "id": "2c7ebc10-2722-4b91-8f48-3d2470e00315",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d33dd147-34e4-42d7-ad67-88708df189f2"
      },
      "source": [
        "- [Quiz] 2개의 숫자를 입력 받아서, 뺄셈을 처리하는 함수를 만들기"
      ],
      "id": "d33dd147-34e4-42d7-ad67-88708df189f2"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "da164b0e-f426-44df-9f81-77f57ffadfb9"
      },
      "source": [
        ""
      ],
      "id": "da164b0e-f426-44df-9f81-77f57ffadfb9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1bcd5726-aecf-4dc1-a36e-531d8fb11196"
      },
      "source": [
        "## 내장 함수"
      ],
      "id": "1bcd5726-aecf-4dc1-a36e-531d8fb11196"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "04f61773-db51-475f-8f12-6c5ab56faba6"
      },
      "source": [
        "- 범위에 들어가는 숫자 배열 만들기"
      ],
      "id": "04f61773-db51-475f-8f12-6c5ab56faba6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7245daed-abf3-4123-9bba-f25c67c02069",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fb46b112-6bf2-4110-daf8-bb6c28e84f9a"
      },
      "source": [
        "data = range(1, 10, 1)\n",
        "data"
      ],
      "id": "7245daed-abf3-4123-9bba-f25c67c02069",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "range(1, 10)"
            ]
          },
          "metadata": {},
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a04b67c4-4336-40b5-a394-ff164f164bdf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2d30cdbb-3004-4836-8100-7c6108e65d82"
      },
      "source": [
        "# 리스트로 변환\n",
        "data = list(data)\n",
        "data"
      ],
      "id": "a04b67c4-4336-40b5-a394-ff164f164bdf",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3, 4, 5, 6, 7, 8, 9]"
            ]
          },
          "metadata": {},
          "execution_count": 215
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "952f246a-d6f3-4459-8828-90cf172042e0"
      },
      "source": [
        "- 최대값, 최소값, 합계"
      ],
      "id": "952f246a-d6f3-4459-8828-90cf172042e0"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9760450e-f7b6-422e-88d4-ed7f6b4f470f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b0a0cdca-738b-41d1-e08c-467a68519b31"
      },
      "source": [
        "max(data)"
      ],
      "id": "9760450e-f7b6-422e-88d4-ed7f6b4f470f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {},
          "execution_count": 216
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5d7ed830-a315-4cc1-a77e-db13fbcc2d00",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "037c9628-80a7-47ab-946d-e80ffb06d10f"
      },
      "source": [
        "min(data)"
      ],
      "id": "5d7ed830-a315-4cc1-a77e-db13fbcc2d00",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "21dc5d09-71a9-46b4-a755-293926716cfc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7ccafb38-6e11-4d73-912f-8fd5add63565"
      },
      "source": [
        "sum(data)"
      ],
      "id": "21dc5d09-71a9-46b4-a755-293926716cfc",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "45"
            ]
          },
          "metadata": {},
          "execution_count": 218
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9ad04722-d565-4b41-aa3e-e5dcce72ac68"
      },
      "source": [
        "- 반올림"
      ],
      "id": "9ad04722-d565-4b41-aa3e-e5dcce72ac68"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d6d21970-dcdd-42d8-85d4-37a3ac602b86",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "da09806f-4a45-422f-882c-423264c410c1"
      },
      "source": [
        "round(3.14)"
      ],
      "id": "d6d21970-dcdd-42d8-85d4-37a3ac602b86",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 219
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d00ee27d-a005-45dd-bb12-04975be73199",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6aca3033-1ee2-4fc7-866a-f511373c158e"
      },
      "source": [
        "round(3.14, 1)"
      ],
      "id": "d00ee27d-a005-45dd-bb12-04975be73199",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3.1"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5249106c-298c-4631-9a00-3f0bb168aa2f"
      },
      "source": [
        "### 문자열 처리 함수"
      ],
      "id": "5249106c-298c-4631-9a00-3f0bb168aa2f"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fdc06b75-5d25-4ecc-961d-6a4cf6de531b"
      },
      "source": [
        "- 문자열 키보드 입력"
      ],
      "id": "fdc06b75-5d25-4ecc-961d-6a4cf6de531b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8b854f67-54fc-4673-8c92-50b888a23eb6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "96041b08-3eed-487f-e1f9-4581a9f990d7"
      },
      "source": [
        "name = input(\"사용자 이름을 입력하세요: \")"
      ],
      "id": "8b854f67-54fc-4673-8c92-50b888a23eb6",
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "사용자 이름을 입력하세요: 나\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9ac4a666-f19d-4738-ad75-396d571db486",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "e89c7a26-ab33-457a-c211-b89280cdaadc"
      },
      "source": [
        "name"
      ],
      "id": "9ac4a666-f19d-4738-ad75-396d571db486",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'나'"
            ]
          },
          "metadata": {},
          "execution_count": 222
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "efdcb11a-8077-4bc1-a177-7acdf459ceed",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eeeea188-f704-4bdf-f1dd-6a293b6f786e"
      },
      "source": [
        "len(name)"
      ],
      "id": "efdcb11a-8077-4bc1-a177-7acdf459ceed",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 223
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aa3fcd64-53a1-4312-9fdb-b8271b94f8a7"
      },
      "source": [
        "- 소문자로 변환"
      ],
      "id": "aa3fcd64-53a1-4312-9fdb-b8271b94f8a7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "62a4e022-ea42-4339-9b28-68b62f9d2e44",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "66f5f405-c942-44bd-e47d-a2c46798b784"
      },
      "source": [
        "name.lower()"
      ],
      "id": "62a4e022-ea42-4339-9b28-68b62f9d2e44",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'나'"
            ]
          },
          "metadata": {},
          "execution_count": 224
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ff0b2d00-4c62-4bf4-b4ba-b796f4c9eea6"
      },
      "source": [
        "- 대문자로 변환"
      ],
      "id": "ff0b2d00-4c62-4bf4-b4ba-b796f4c9eea6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "24f3fac3-1e91-442d-bafc-bff53224f2e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "0675951d-2906-4e9f-96f9-865eb1761b54"
      },
      "source": [
        "name.upper()"
      ],
      "id": "24f3fac3-1e91-442d-bafc-bff53224f2e2",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'나'"
            ]
          },
          "metadata": {},
          "execution_count": 225
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9cc62d3c-4af6-4081-85aa-c7a3aa01bcfc"
      },
      "source": [
        "- 문자열에서 해당 문자의 첫번째 인덱스 값 구하기 (상대적 위치)"
      ],
      "id": "9cc62d3c-4af6-4081-85aa-c7a3aa01bcfc"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "04cd9961-eb0b-4811-912c-0839cce470ac",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b61b48ce-d154-4db1-a5cb-862434520094"
      },
      "source": [
        "name.find('us')"
      ],
      "id": "04cd9961-eb0b-4811-912c-0839cce470ac",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-1"
            ]
          },
          "metadata": {},
          "execution_count": 226
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "646c78a6-c9ca-425e-97c2-c7047fa95e7e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ef04f210-87e2-4d58-eb9b-38b46942f08d"
      },
      "source": [
        "name.find('s')"
      ],
      "id": "646c78a6-c9ca-425e-97c2-c7047fa95e7e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-1"
            ]
          },
          "metadata": {},
          "execution_count": 227
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a95b6291-4d1a-48f6-9f3a-da68e4a13ea7"
      },
      "source": [
        "- 문자열 치환"
      ],
      "id": "a95b6291-4d1a-48f6-9f3a-da68e4a13ea7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ab211f96-5b7e-4b94-8dcb-26f676fe194c"
      },
      "source": [
        "name.replace('r', 'rs')"
      ],
      "id": "ab211f96-5b7e-4b94-8dcb-26f676fe194c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "584ff451-dc00-4da2-ab8a-6d4e593f2b7d"
      },
      "source": [
        "- 공백 제거"
      ],
      "id": "584ff451-dc00-4da2-ab8a-6d4e593f2b7d"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "49fc9b8c-73e8-4612-b7b1-5e1c321486f4"
      },
      "source": [
        "text = \"      DB  \""
      ],
      "id": "49fc9b8c-73e8-4612-b7b1-5e1c321486f4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2679eb4b-7326-46d8-8ace-09cca1b9c365"
      },
      "source": [
        "text.lstrip()"
      ],
      "id": "2679eb4b-7326-46d8-8ace-09cca1b9c365",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8d495a92-42e1-459e-a286-7424a138d86c"
      },
      "source": [
        "text.rstrip()"
      ],
      "id": "8d495a92-42e1-459e-a286-7424a138d86c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cbc5041c-3feb-4c36-b03f-bd605cbf13f2"
      },
      "source": [
        "text.strip()"
      ],
      "id": "cbc5041c-3feb-4c36-b03f-bd605cbf13f2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f420872f-2da4-440c-bfe6-31636bad9d47"
      },
      "source": [
        "- 문자열 분리"
      ],
      "id": "f420872f-2da4-440c-bfe6-31636bad9d47"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bf560063-9069-47e6-9f5a-4281678d18ac"
      },
      "source": [
        "text = \"대한 민국, 서울\""
      ],
      "id": "bf560063-9069-47e6-9f5a-4281678d18ac",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4243b657-5f1f-4554-ac9d-54e94c1d5eb4"
      },
      "source": [
        "text.split()"
      ],
      "id": "4243b657-5f1f-4554-ac9d-54e94c1d5eb4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fd252c3c-f2c5-4edf-adfa-446c94350174"
      },
      "source": [
        "text.split(\",\")"
      ],
      "id": "fd252c3c-f2c5-4edf-adfa-446c94350174",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9a96ff63-20e5-48ae-8f0b-e6a0a7eaa1ce"
      },
      "source": [
        "# <center>멤버십 고객 탈회 예측</center>"
      ],
      "id": "9a96ff63-20e5-48ae-8f0b-e6a0a7eaa1ce"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "831b4fb3-d0a4-42e0-8dda-e82b906b7d16"
      },
      "source": [
        "컬럼 | 설명 | 컬럼 | 설명\n",
        "---|---|---|---\n",
        "id | 멤버십 번호 | MEMBERSHIP_TERM_YEARS | 멤버십 기간\n",
        "ANNUAL_FEES | 연간 회비 | MEMBER_MARITAL_STATUS | 기혼 여부, M(기혼), S(미혼)\n",
        "MEMBER_GENDER | 성별, M(남),F(여) | MEMBER_ANNUAL_INCOME | 연봉(연간 수입)\n",
        "MEMBER_OCCUPATION_CD | 직업 | MEMBERSHIP_PACKAGE | 멤버십 유형\n",
        "MEMBER_AGE_AT_ISSUE | 나이 | ADDITIONAL_MEMBERS | 가족 회원\n",
        "PAYMENT_MODE | 지불 방식 | AGENT_CODE | 직원 코드 \n",
        "START_DATE (YYYYMMDD) | 시작 날짜 | END_DATE  (YYYYMMDD) | 종료 날짜 \n",
        "MEMBERSHIP_STATUS | 0(유지), 1(탈회) | "
      ],
      "id": "831b4fb3-d0a4-42e0-8dda-e82b906b7d16"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6e2ef506-6922-4659-ac3b-1fbdb2969d22"
      },
      "source": [
        "# Library"
      ],
      "id": "6e2ef506-6922-4659-ac3b-1fbdb2969d22"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f2553679-6f25-4900-8172-87b132480a2c"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings(action='ignore')"
      ],
      "id": "f2553679-6f25-4900-8172-87b132480a2c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "73ab9fa3-01f9-4375-b32f-cec803921063",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "52c528cc-5c72-4744-c2de-da467cf91e77"
      },
      "source": [
        "sns.__version__"
      ],
      "id": "73ab9fa3-01f9-4375-b32f-cec803921063",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'0.11.2'"
            ]
          },
          "metadata": {},
          "execution_count": 230
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 172
        },
        "id": "9cTiWz7CY-qs",
        "outputId": "212f3ce9-53f8-4326-b003-b57405598ce6"
      },
      "source": [
        ""
      ],
      "id": "9cTiWz7CY-qs",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-6-00cf07b74dcd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9d2f084a-e17f-4877-a3d4-8d9f06a5d4a8"
      },
      "source": [
        "# Load Dataset"
      ],
      "id": "9d2f084a-e17f-4877-a3d4-8d9f06a5d4a8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "322798a8-3b64-41c8-8107-c39f60c85c94"
      },
      "source": [
        "df = pd.read_excel('/content/membership.xlsx')"
      ],
      "id": "322798a8-3b64-41c8-8107-c39f60c85c94",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "_lHyVKDgcTKn",
        "outputId": "46eb60a0-1b8f-42d1-cefe-1c779abeec51"
      },
      "source": [
        "df"
      ],
      "id": "_lHyVKDgcTKn",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8807 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 580
        },
        "id": "1inturD1ce3h",
        "outputId": "ef78aae5-b9d2-4d95-8d58-6f5b015d5ecd"
      },
      "source": [
        "df.T"
      ],
      "id": "1inturD1ce3h",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>...</th>\n",
              "      <th>8767</th>\n",
              "      <th>8768</th>\n",
              "      <th>8769</th>\n",
              "      <th>8770</th>\n",
              "      <th>8771</th>\n",
              "      <th>8772</th>\n",
              "      <th>8773</th>\n",
              "      <th>8774</th>\n",
              "      <th>8775</th>\n",
              "      <th>8776</th>\n",
              "      <th>8777</th>\n",
              "      <th>8778</th>\n",
              "      <th>8779</th>\n",
              "      <th>8780</th>\n",
              "      <th>8781</th>\n",
              "      <th>8782</th>\n",
              "      <th>8783</th>\n",
              "      <th>8784</th>\n",
              "      <th>8785</th>\n",
              "      <th>8786</th>\n",
              "      <th>8787</th>\n",
              "      <th>8788</th>\n",
              "      <th>8789</th>\n",
              "      <th>8790</th>\n",
              "      <th>8791</th>\n",
              "      <th>8792</th>\n",
              "      <th>8793</th>\n",
              "      <th>8794</th>\n",
              "      <th>8795</th>\n",
              "      <th>8796</th>\n",
              "      <th>8797</th>\n",
              "      <th>8798</th>\n",
              "      <th>8799</th>\n",
              "      <th>8800</th>\n",
              "      <th>8801</th>\n",
              "      <th>8802</th>\n",
              "      <th>8803</th>\n",
              "      <th>8804</th>\n",
              "      <th>8805</th>\n",
              "      <th>8806</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>10</td>\n",
              "      <td>11</td>\n",
              "      <td>12</td>\n",
              "      <td>13</td>\n",
              "      <td>14</td>\n",
              "      <td>15</td>\n",
              "      <td>16</td>\n",
              "      <td>17</td>\n",
              "      <td>18</td>\n",
              "      <td>19</td>\n",
              "      <td>20</td>\n",
              "      <td>21</td>\n",
              "      <td>22</td>\n",
              "      <td>23</td>\n",
              "      <td>24</td>\n",
              "      <td>25</td>\n",
              "      <td>26</td>\n",
              "      <td>27</td>\n",
              "      <td>28</td>\n",
              "      <td>29</td>\n",
              "      <td>30</td>\n",
              "      <td>31</td>\n",
              "      <td>32</td>\n",
              "      <td>33</td>\n",
              "      <td>34</td>\n",
              "      <td>35</td>\n",
              "      <td>36</td>\n",
              "      <td>37</td>\n",
              "      <td>38</td>\n",
              "      <td>39</td>\n",
              "      <td>...</td>\n",
              "      <td>8767</td>\n",
              "      <td>8768</td>\n",
              "      <td>8769</td>\n",
              "      <td>8770</td>\n",
              "      <td>8771</td>\n",
              "      <td>8772</td>\n",
              "      <td>8773</td>\n",
              "      <td>8774</td>\n",
              "      <td>8775</td>\n",
              "      <td>8776</td>\n",
              "      <td>8777</td>\n",
              "      <td>8778</td>\n",
              "      <td>8779</td>\n",
              "      <td>8780</td>\n",
              "      <td>8781</td>\n",
              "      <td>8782</td>\n",
              "      <td>8783</td>\n",
              "      <td>8784</td>\n",
              "      <td>8785</td>\n",
              "      <td>8786</td>\n",
              "      <td>8787</td>\n",
              "      <td>8788</td>\n",
              "      <td>8789</td>\n",
              "      <td>8790</td>\n",
              "      <td>8791</td>\n",
              "      <td>8792</td>\n",
              "      <td>8793</td>\n",
              "      <td>8794</td>\n",
              "      <td>8795</td>\n",
              "      <td>8796</td>\n",
              "      <td>8797</td>\n",
              "      <td>8798</td>\n",
              "      <td>8799</td>\n",
              "      <td>8800</td>\n",
              "      <td>8801</td>\n",
              "      <td>8802</td>\n",
              "      <td>8803</td>\n",
              "      <td>8804</td>\n",
              "      <td>8805</td>\n",
              "      <td>8806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <td>22</td>\n",
              "      <td>88</td>\n",
              "      <td>93</td>\n",
              "      <td>17</td>\n",
              "      <td>39</td>\n",
              "      <td>27</td>\n",
              "      <td>17</td>\n",
              "      <td>83</td>\n",
              "      <td>88</td>\n",
              "      <td>12</td>\n",
              "      <td>97</td>\n",
              "      <td>17</td>\n",
              "      <td>21</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>36</td>\n",
              "      <td>54</td>\n",
              "      <td>17</td>\n",
              "      <td>82</td>\n",
              "      <td>21</td>\n",
              "      <td>30</td>\n",
              "      <td>42</td>\n",
              "      <td>42</td>\n",
              "      <td>63</td>\n",
              "      <td>29</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>53</td>\n",
              "      <td>72</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>27</td>\n",
              "      <td>12</td>\n",
              "      <td>68</td>\n",
              "      <td>40</td>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>22</td>\n",
              "      <td>12</td>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>27</td>\n",
              "      <td>12</td>\n",
              "      <td>60</td>\n",
              "      <td>34</td>\n",
              "      <td>17</td>\n",
              "      <td>22</td>\n",
              "      <td>81</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>86</td>\n",
              "      <td>72</td>\n",
              "      <td>69</td>\n",
              "      <td>22</td>\n",
              "      <td>12</td>\n",
              "      <td>17</td>\n",
              "      <td>65</td>\n",
              "      <td>9</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>9</td>\n",
              "      <td>17</td>\n",
              "      <td>67</td>\n",
              "      <td>32</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>32</td>\n",
              "      <td>31</td>\n",
              "      <td>12</td>\n",
              "      <td>17</td>\n",
              "      <td>49</td>\n",
              "      <td>54</td>\n",
              "      <td>27</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <td>100000</td>\n",
              "      <td>149030</td>\n",
              "      <td>103000</td>\n",
              "      <td>147576</td>\n",
              "      <td>100000</td>\n",
              "      <td>100001</td>\n",
              "      <td>103016</td>\n",
              "      <td>235937</td>\n",
              "      <td>100534</td>\n",
              "      <td>300002</td>\n",
              "      <td>100513</td>\n",
              "      <td>100000</td>\n",
              "      <td>120001</td>\n",
              "      <td>200000</td>\n",
              "      <td>144001</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>110000</td>\n",
              "      <td>101000</td>\n",
              "      <td>504004</td>\n",
              "      <td>150000</td>\n",
              "      <td>500055</td>\n",
              "      <td>100005</td>\n",
              "      <td>100000</td>\n",
              "      <td>140000</td>\n",
              "      <td>120000</td>\n",
              "      <td>104996</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>120001</td>\n",
              "      <td>2e+06</td>\n",
              "      <td>100000</td>\n",
              "      <td>200000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>110979</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>250000</td>\n",
              "      <td>...</td>\n",
              "      <td>940000</td>\n",
              "      <td>150000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>199998</td>\n",
              "      <td>120000</td>\n",
              "      <td>130558</td>\n",
              "      <td>158883</td>\n",
              "      <td>280000</td>\n",
              "      <td>100003</td>\n",
              "      <td>105000</td>\n",
              "      <td>129792</td>\n",
              "      <td>123707</td>\n",
              "      <td>150001</td>\n",
              "      <td>300000</td>\n",
              "      <td>200000</td>\n",
              "      <td>201029</td>\n",
              "      <td>231026</td>\n",
              "      <td>888562</td>\n",
              "      <td>120001</td>\n",
              "      <td>100000</td>\n",
              "      <td>100001</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>250000</td>\n",
              "      <td>1.00001e+06</td>\n",
              "      <td>120001</td>\n",
              "      <td>135165</td>\n",
              "      <td>260001</td>\n",
              "      <td>200000</td>\n",
              "      <td>120000</td>\n",
              "      <td>100000</td>\n",
              "      <td>200000</td>\n",
              "      <td>120001</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>100000</td>\n",
              "      <td>600001</td>\n",
              "      <td>100000</td>\n",
              "      <td>100001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>...</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>F</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <td>450000</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>600000</td>\n",
              "      <td>450000</td>\n",
              "      <td>600000</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>999996</td>\n",
              "      <td>801120</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>349992</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>499992</td>\n",
              "      <td>300000</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>380004</td>\n",
              "      <td>300000</td>\n",
              "      <td>999996</td>\n",
              "      <td>399996</td>\n",
              "      <td>499992</td>\n",
              "      <td>368004</td>\n",
              "      <td>3e+06</td>\n",
              "      <td>500004</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>800004</td>\n",
              "      <td>300000</td>\n",
              "      <td>420000</td>\n",
              "      <td>799992</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>500004</td>\n",
              "      <td>249996</td>\n",
              "      <td>274992</td>\n",
              "      <td>9.9e+06</td>\n",
              "      <td>300000</td>\n",
              "      <td>399996</td>\n",
              "      <td>600000</td>\n",
              "      <td>249996</td>\n",
              "      <td>499992</td>\n",
              "      <td>600000</td>\n",
              "      <td>3.6e+06</td>\n",
              "      <td>1.5e+06</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2e+06</td>\n",
              "      <td>999996</td>\n",
              "      <td>1.84999e+06</td>\n",
              "      <td>499992</td>\n",
              "      <td>799992</td>\n",
              "      <td>500004</td>\n",
              "      <td>900000</td>\n",
              "      <td>900000</td>\n",
              "      <td>1.08e+06</td>\n",
              "      <td>600000</td>\n",
              "      <td>225000</td>\n",
              "      <td>349992</td>\n",
              "      <td>699996</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>7.5e+06</td>\n",
              "      <td>500004</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>1.39999e+06</td>\n",
              "      <td>2.2e+06</td>\n",
              "      <td>249996</td>\n",
              "      <td>210000</td>\n",
              "      <td>849996</td>\n",
              "      <td>450000</td>\n",
              "      <td>399996</td>\n",
              "      <td>870000</td>\n",
              "      <td>1.2e+06</td>\n",
              "      <td>249996</td>\n",
              "      <td>600000</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>249996</td>\n",
              "      <td>380004</td>\n",
              "      <td>300000</td>\n",
              "      <td>1.24999e+06</td>\n",
              "      <td>300000</td>\n",
              "      <td>300000</td>\n",
              "      <td>1.37504e+06</td>\n",
              "      <td>399996</td>\n",
              "      <td>2.25e+06</td>\n",
              "      <td>600000</td>\n",
              "      <td>2e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>...</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>TYPE-B</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <td>27</td>\n",
              "      <td>75</td>\n",
              "      <td>49</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>59</td>\n",
              "      <td>35</td>\n",
              "      <td>43</td>\n",
              "      <td>44</td>\n",
              "      <td>46</td>\n",
              "      <td>60</td>\n",
              "      <td>43</td>\n",
              "      <td>64</td>\n",
              "      <td>59</td>\n",
              "      <td>26</td>\n",
              "      <td>58</td>\n",
              "      <td>41</td>\n",
              "      <td>24</td>\n",
              "      <td>52</td>\n",
              "      <td>74</td>\n",
              "      <td>55</td>\n",
              "      <td>53</td>\n",
              "      <td>56</td>\n",
              "      <td>25</td>\n",
              "      <td>56</td>\n",
              "      <td>62</td>\n",
              "      <td>34</td>\n",
              "      <td>62</td>\n",
              "      <td>20</td>\n",
              "      <td>46</td>\n",
              "      <td>29</td>\n",
              "      <td>58</td>\n",
              "      <td>50</td>\n",
              "      <td>38</td>\n",
              "      <td>44</td>\n",
              "      <td>38</td>\n",
              "      <td>37</td>\n",
              "      <td>44</td>\n",
              "      <td>39</td>\n",
              "      <td>75</td>\n",
              "      <td>...</td>\n",
              "      <td>52</td>\n",
              "      <td>72</td>\n",
              "      <td>41</td>\n",
              "      <td>27</td>\n",
              "      <td>51</td>\n",
              "      <td>45</td>\n",
              "      <td>57</td>\n",
              "      <td>40</td>\n",
              "      <td>41</td>\n",
              "      <td>48</td>\n",
              "      <td>51</td>\n",
              "      <td>57</td>\n",
              "      <td>43</td>\n",
              "      <td>80</td>\n",
              "      <td>61</td>\n",
              "      <td>54</td>\n",
              "      <td>52</td>\n",
              "      <td>33</td>\n",
              "      <td>63</td>\n",
              "      <td>37</td>\n",
              "      <td>19</td>\n",
              "      <td>26</td>\n",
              "      <td>28</td>\n",
              "      <td>28</td>\n",
              "      <td>39</td>\n",
              "      <td>46</td>\n",
              "      <td>25</td>\n",
              "      <td>61</td>\n",
              "      <td>92</td>\n",
              "      <td>63</td>\n",
              "      <td>46</td>\n",
              "      <td>24</td>\n",
              "      <td>59</td>\n",
              "      <td>59</td>\n",
              "      <td>37</td>\n",
              "      <td>53</td>\n",
              "      <td>46</td>\n",
              "      <td>51</td>\n",
              "      <td>27</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>QUARTERLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>...</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>MONTHLY</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <td>666099</td>\n",
              "      <td>132000</td>\n",
              "      <td>1407177</td>\n",
              "      <td>343344</td>\n",
              "      <td>119199</td>\n",
              "      <td>802744</td>\n",
              "      <td>348099</td>\n",
              "      <td>323400</td>\n",
              "      <td>824055</td>\n",
              "      <td>1360477</td>\n",
              "      <td>1132833</td>\n",
              "      <td>1268822</td>\n",
              "      <td>639944</td>\n",
              "      <td>91799</td>\n",
              "      <td>711644</td>\n",
              "      <td>900622</td>\n",
              "      <td>847244</td>\n",
              "      <td>1341700</td>\n",
              "      <td>624800</td>\n",
              "      <td>936822</td>\n",
              "      <td>343411</td>\n",
              "      <td>739133</td>\n",
              "      <td>657955</td>\n",
              "      <td>827422</td>\n",
              "      <td>225288</td>\n",
              "      <td>53777</td>\n",
              "      <td>1267500</td>\n",
              "      <td>347755</td>\n",
              "      <td>672199</td>\n",
              "      <td>66088</td>\n",
              "      <td>549577</td>\n",
              "      <td>1256722</td>\n",
              "      <td>1367855</td>\n",
              "      <td>1375644</td>\n",
              "      <td>703388</td>\n",
              "      <td>402144</td>\n",
              "      <td>1314366</td>\n",
              "      <td>304111</td>\n",
              "      <td>601466</td>\n",
              "      <td>12844</td>\n",
              "      <td>...</td>\n",
              "      <td>1207933</td>\n",
              "      <td>679211</td>\n",
              "      <td>1126511</td>\n",
              "      <td>1244888</td>\n",
              "      <td>1263677</td>\n",
              "      <td>383577</td>\n",
              "      <td>348022</td>\n",
              "      <td>343344</td>\n",
              "      <td>1282388</td>\n",
              "      <td>231422</td>\n",
              "      <td>112877</td>\n",
              "      <td>797400</td>\n",
              "      <td>343333</td>\n",
              "      <td>1132133</td>\n",
              "      <td>1075544</td>\n",
              "      <td>1186511</td>\n",
              "      <td>1128977</td>\n",
              "      <td>1294299</td>\n",
              "      <td>1290566</td>\n",
              "      <td>809422</td>\n",
              "      <td>137100</td>\n",
              "      <td>215733</td>\n",
              "      <td>189822</td>\n",
              "      <td>589355</td>\n",
              "      <td>1152855</td>\n",
              "      <td>409622</td>\n",
              "      <td>259355</td>\n",
              "      <td>347966</td>\n",
              "      <td>1132866</td>\n",
              "      <td>1101755</td>\n",
              "      <td>639666</td>\n",
              "      <td>815888</td>\n",
              "      <td>1330944</td>\n",
              "      <td>183611</td>\n",
              "      <td>1296622</td>\n",
              "      <td>744188</td>\n",
              "      <td>841477</td>\n",
              "      <td>1347855</td>\n",
              "      <td>798833</td>\n",
              "      <td>664844</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>START_DATE</th>\n",
              "      <td>20091029</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20130930</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20101231</td>\n",
              "      <td>20121130</td>\n",
              "      <td>20110328</td>\n",
              "      <td>20130530</td>\n",
              "      <td>20090720</td>\n",
              "      <td>20101029</td>\n",
              "      <td>20091127</td>\n",
              "      <td>20100831</td>\n",
              "      <td>20100129</td>\n",
              "      <td>20130213</td>\n",
              "      <td>20130828</td>\n",
              "      <td>20100615</td>\n",
              "      <td>20090319</td>\n",
              "      <td>20100614</td>\n",
              "      <td>20100830</td>\n",
              "      <td>20100331</td>\n",
              "      <td>20080623</td>\n",
              "      <td>20080331</td>\n",
              "      <td>20120727</td>\n",
              "      <td>20130910</td>\n",
              "      <td>20090831</td>\n",
              "      <td>20080603</td>\n",
              "      <td>20081229</td>\n",
              "      <td>20120326</td>\n",
              "      <td>20121231</td>\n",
              "      <td>20121231</td>\n",
              "      <td>20090909</td>\n",
              "      <td>20090330</td>\n",
              "      <td>20130330</td>\n",
              "      <td>20080915</td>\n",
              "      <td>20120928</td>\n",
              "      <td>20130729</td>\n",
              "      <td>...</td>\n",
              "      <td>20120227</td>\n",
              "      <td>20131125</td>\n",
              "      <td>20110331</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20120925</td>\n",
              "      <td>20090316</td>\n",
              "      <td>20130624</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20120229</td>\n",
              "      <td>20131114</td>\n",
              "      <td>20080411</td>\n",
              "      <td>20120330</td>\n",
              "      <td>20130930</td>\n",
              "      <td>20110623</td>\n",
              "      <td>20130830</td>\n",
              "      <td>20110331</td>\n",
              "      <td>20110228</td>\n",
              "      <td>20120330</td>\n",
              "      <td>20111230</td>\n",
              "      <td>20091123</td>\n",
              "      <td>20090626</td>\n",
              "      <td>20080331</td>\n",
              "      <td>20100219</td>\n",
              "      <td>20090112</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20090109</td>\n",
              "      <td>20090313</td>\n",
              "      <td>20130925</td>\n",
              "      <td>20130527</td>\n",
              "      <td>20100809</td>\n",
              "      <td>20090331</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20121218</td>\n",
              "      <td>20100304</td>\n",
              "      <td>20120806</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20100827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>END_DATE</th>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20110307</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20130329</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20110216</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20111027</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20100822</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20100201</td>\n",
              "      <td>20090428</td>\n",
              "      <td>20130425</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>...</td>\n",
              "      <td>20130428</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20130424</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20130429</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20120122</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20120329</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20100225</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20100311</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20110408</td>\n",
              "      <td>20090727</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20100703</td>\n",
              "      <td>20130926</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>15 rows × 8807 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                           0            1     ...      8805      8806\n",
              "id                            0            1  ...      8805      8806\n",
              "MEMBERSHIP_TERM_YEARS        22           88  ...        27        12\n",
              "ANNUAL_FEES              100000       149030  ...    100000    100001\n",
              "MEMBER_MARITAL_STATUS         0            0  ...         0         0\n",
              "MEMBER_GENDER                 M            M  ...         M         M\n",
              "MEMBER_ANNUAL_INCOME     450000  1.37504e+06  ...    600000     2e+06\n",
              "MEMBER_OCCUPATION_CD          1            6  ...         1         1\n",
              "MEMBERSHIP_PACKAGE       TYPE-B       TYPE-A  ...    TYPE-B    TYPE-B\n",
              "MEMBER_AGE_AT_ISSUE          27           75  ...        27        41\n",
              "ADDITIONAL_MEMBERS            1            0  ...         2         1\n",
              "PAYMENT_MODE             ANNUAL       ANNUAL  ...    ANNUAL   MONTHLY\n",
              "AGENT_CODE               666099       132000  ...    798833    664844\n",
              "MEMBERSHIP_STATUS             0            0  ...         0         0\n",
              "START_DATE             20091029     20131014  ...  20100127  20100827\n",
              "END_DATE               20131231     20131231  ...  20131231  20131231\n",
              "\n",
              "[15 rows x 8807 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ca0b72bd-d9ec-4fef-bc01-ef33d9741ee6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 131
        },
        "outputId": "7ff1ca9b-4074-4e2b-be55-039084835d5e"
      },
      "source": [
        "df = pd.read_excel('membership.xlsx')\n",
        "df.head(2)"
      ],
      "id": "ca0b72bd-d9ec-4fef-bc01-ef33d9741ee6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0   0                     22  ...    20091029  20131231\n",
              "1   1                     88  ...    20131014  20131231\n",
              "\n",
              "[2 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "fa-aeVgcTcwq",
        "outputId": "565ef933-9410-4184-c939-785bfde3a14d"
      },
      "source": [
        "df"
      ],
      "id": "fa-aeVgcTcwq",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8807 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 233
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "da563cc6-a9fa-432e-9508-0f680ba89982"
      },
      "source": [
        "# 판다스 자료구조 "
      ],
      "id": "da563cc6-a9fa-432e-9508-0f680ba89982"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "48314f00-9826-480f-91f5-3d36248de5c8"
      },
      "source": [
        "## DataFrame"
      ],
      "id": "48314f00-9826-480f-91f5-3d36248de5c8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d76a119b-d901-48bb-8d18-449b5c6b7188",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4e0e73e9-98fa-4421-e823-b21d3d364fcb"
      },
      "source": [
        "# 자료형 확인\n",
        "type(df)"
      ],
      "id": "d76a119b-d901-48bb-8d18-449b5c6b7188",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.frame.DataFrame"
            ]
          },
          "metadata": {},
          "execution_count": 234
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0a6877d0-c58c-4ef3-8a41-bc91d00f6ba1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "842ecdaf-e0da-4286-a10b-70c07474ff8f"
      },
      "source": [
        "# 크기, 형태\n",
        "df.shape"
      ],
      "id": "0a6877d0-c58c-4ef3-8a41-bc91d00f6ba1",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(8807, 15)"
            ]
          },
          "metadata": {},
          "execution_count": 239
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "65d8ecac-15f0-4ead-9fc0-1c13e05afe71",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5ad4bddd-85d7-46bd-beb4-3b7cbd84b650"
      },
      "source": [
        "# 기본 정보\n",
        "df.info"
      ],
      "id": "65d8ecac-15f0-4ead-9fc0-1c13e05afe71",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method DataFrame.info of         id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8807 rows x 15 columns]>"
            ]
          },
          "metadata": {},
          "execution_count": 240
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4SxCnrYTVAgC",
        "outputId": "b195d758-9b67-4742-d98b-6114d6d55c63"
      },
      "source": [
        "df.info()"
      ],
      "id": "4SxCnrYTVAgC",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 8807 entries, 0 to 8806\n",
            "Data columns (total 15 columns):\n",
            " #   Column                 Non-Null Count  Dtype  \n",
            "---  ------                 --------------  -----  \n",
            " 0   id                     8807 non-null   int64  \n",
            " 1   MEMBERSHIP_TERM_YEARS  8807 non-null   int64  \n",
            " 2   ANNUAL_FEES            8807 non-null   float64\n",
            " 3   MEMBER_MARITAL_STATUS  8807 non-null   int64  \n",
            " 4   MEMBER_GENDER          8807 non-null   object \n",
            " 5   MEMBER_ANNUAL_INCOME   8807 non-null   float64\n",
            " 6   MEMBER_OCCUPATION_CD   8807 non-null   int64  \n",
            " 7   MEMBERSHIP_PACKAGE     8807 non-null   object \n",
            " 8   MEMBER_AGE_AT_ISSUE    8807 non-null   int64  \n",
            " 9   ADDITIONAL_MEMBERS     8807 non-null   int64  \n",
            " 10  PAYMENT_MODE           8807 non-null   object \n",
            " 11  AGENT_CODE             8807 non-null   object \n",
            " 12  MEMBERSHIP_STATUS      8807 non-null   int64  \n",
            " 13  START_DATE             8807 non-null   int64  \n",
            " 14  END_DATE               8807 non-null   int64  \n",
            "dtypes: float64(2), int64(9), object(4)\n",
            "memory usage: 1.0+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "38dagl-WVIJ0",
        "outputId": "1e0148d0-9a46-4a0f-8025-82f43248a7e8"
      },
      "source": [
        "df.frame()"
      ],
      "id": "38dagl-WVIJ0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-243-4a7491ee123a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mframe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5139\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_info_axis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_can_hold_identifiers_and_holds_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5140\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5141\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5142\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5143\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'DataFrame' object has no attribute 'frame'"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "144e412a-c477-4def-b8e5-d1a264653b0e"
      },
      "source": [
        "## Series"
      ],
      "id": "144e412a-c477-4def-b8e5-d1a264653b0e"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "070b6998-da3c-464c-9044-d398f997b68b"
      },
      "source": [
        "### 데이터프레임의 열(column) : 시리즈"
      ],
      "id": "070b6998-da3c-464c-9044-d398f997b68b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r5gERlEdd3HT"
      },
      "source": [
        "# df['변수이름']"
      ],
      "id": "r5gERlEdd3HT",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9669f01b-4776-4b65-9890-e525a2f3094d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6bdfb1d7-d9db-4bdb-85e1-a9e8a9aa4f7d"
      },
      "source": [
        "df['MEMBER_AGE_AT_ISSUE']"
      ],
      "id": "9669f01b-4776-4b65-9890-e525a2f3094d",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       27\n",
              "1       75\n",
              "2       49\n",
              "3       47\n",
              "4       36\n",
              "        ..\n",
              "8802    53\n",
              "8803    46\n",
              "8804    51\n",
              "8805    27\n",
              "8806    41\n",
              "Name: MEMBER_AGE_AT_ISSUE, Length: 8807, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5h2qwwT7ek1R",
        "outputId": "bbbe51c7-5706-4c14-eb9d-cb109b087e16"
      },
      "source": [
        "df['MEMBER_AGE_AT_ISSUE'] / 1000"
      ],
      "id": "5h2qwwT7ek1R",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       0.027\n",
              "1       0.075\n",
              "2       0.049\n",
              "3       0.047\n",
              "4       0.036\n",
              "        ...  \n",
              "8802    0.053\n",
              "8803    0.046\n",
              "8804    0.051\n",
              "8805    0.027\n",
              "8806    0.041\n",
              "Name: MEMBER_AGE_AT_ISSUE, Length: 8807, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k4XELy2JgIpd",
        "outputId": "fa37c854-3d92-475c-86e9-a9b7e87f9cd4"
      },
      "source": [
        "df.loc[   0:10  ,  'MEMBER_AGE_AT_ISSUE']"
      ],
      "id": "k4XELy2JgIpd",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     27\n",
              "1     75\n",
              "2     49\n",
              "3     47\n",
              "4     36\n",
              "5     59\n",
              "6     35\n",
              "7     43\n",
              "8     44\n",
              "9     46\n",
              "10    60\n",
              "Name: MEMBER_AGE_AT_ISSUE, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "id": "zrks9gJ6gUOs",
        "outputId": "501e8214-2002-4f49-959f-21c186644464"
      },
      "source": [
        "df.iloc[   0:10  ,  1:10]"
      ],
      "id": "zrks9gJ6gUOs",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>17</td>\n",
              "      <td>103016.16</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>9.999960e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>83</td>\n",
              "      <td>235936.93</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>8.011200e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>88</td>\n",
              "      <td>100534.50</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>12</td>\n",
              "      <td>300002.40</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.499920e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   MEMBERSHIP_TERM_YEARS  ANNUAL_FEES  ...  MEMBER_AGE_AT_ISSUE ADDITIONAL_MEMBERS\n",
              "0                     22    100000.00  ...                   27                  1\n",
              "1                     88    149029.58  ...                   75                  0\n",
              "2                     93    102999.94  ...                   49                  0\n",
              "3                     17    147576.48  ...                   47                  3\n",
              "4                     39    100000.00  ...                   36                  3\n",
              "5                     27    100001.00  ...                   59                  0\n",
              "6                     17    103016.16  ...                   35                  0\n",
              "7                     83    235936.93  ...                   43                  0\n",
              "8                     88    100534.50  ...                   44                  0\n",
              "9                     12    300002.40  ...                   46                  2\n",
              "\n",
              "[10 rows x 9 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6fb8ac1f-b3e5-4278-b66d-d8426f6e2f49",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f903dc59-9f91-48eb-8a1f-6e094d8f7075"
      },
      "source": [
        "# 크기, 형태\n",
        "df['MEMBER_AGE_AT_ISSUE'].shape"
      ],
      "id": "6fb8ac1f-b3e5-4278-b66d-d8426f6e2f49",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(8807,)"
            ]
          },
          "metadata": {},
          "execution_count": 247
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f0f4d1d6-92ed-4dbf-ae20-727de112d901",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c40b700c-a881-4e99-f987-8be0a3e1edb9"
      },
      "source": [
        "# 인덱스 배열\n",
        "df['MEMBER_AGE_AT_ISSUE'].index"
      ],
      "id": "f0f4d1d6-92ed-4dbf-ae20-727de112d901",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RangeIndex(start=0, stop=8807, step=1)"
            ]
          },
          "metadata": {},
          "execution_count": 248
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "maqfsUo_fM6Y"
      },
      "source": [
        ""
      ],
      "id": "maqfsUo_fM6Y",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2d15daee-590a-48fb-a111-cc8fa080cbbb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a240130a-4d65-467e-a7e1-4a3cdc63935a"
      },
      "source": [
        "# 값 (데이터)\n",
        "df['MEMBER_AGE_AT_ISSUE'].values"
      ],
      "id": "2d15daee-590a-48fb-a111-cc8fa080cbbb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([27, 75, 49, ..., 51, 27, 41])"
            ]
          },
          "metadata": {},
          "execution_count": 249
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5dd2927f-f45b-46ef-b9fc-68cf2a9d01c5"
      },
      "source": [
        "## 시리즈 연산"
      ],
      "id": "5dd2927f-f45b-46ef-b9fc-68cf2a9d01c5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vh9MwU66gHJo"
      },
      "source": [
        ""
      ],
      "id": "Vh9MwU66gHJo",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "de3e9f6b-7afe-42d5-bd0c-c620f546dfa8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "52b471bf-60fa-477f-e471-2919600ca407"
      },
      "source": [
        "# 산술 연산 1 \n",
        "\n",
        "df['ANNUAL_FEES'] / 1000"
      ],
      "id": "de3e9f6b-7afe-42d5-bd0c-c620f546dfa8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       100.00000\n",
              "1       149.02958\n",
              "2       102.99994\n",
              "3       147.57648\n",
              "4       100.00000\n",
              "          ...    \n",
              "8802    100.00000\n",
              "8803    100.00000\n",
              "8804    600.00116\n",
              "8805    100.00000\n",
              "8806    100.00080\n",
              "Name: ANNUAL_FEES, Length: 8807, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 250
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "254cdfcf-4030-43e8-bbcb-7572ad7ca9cf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d3c40a20-0beb-4c98-a343-674732a102ff"
      },
      "source": [
        "# 산술 연산 2\n",
        "\n",
        "df['ANNUAL_FEES'] / (df['ADDITIONAL_MEMBERS'] + 1)"
      ],
      "id": "254cdfcf-4030-43e8-bbcb-7572ad7ca9cf",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        50000.000000\n",
              "1       149029.580000\n",
              "2       102999.940000\n",
              "3        36894.120000\n",
              "4        25000.000000\n",
              "            ...      \n",
              "8802    100000.000000\n",
              "8803     50000.000000\n",
              "8804    150000.290000\n",
              "8805     33333.333333\n",
              "8806     50000.400000\n",
              "Length: 8807, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 251
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "y9nAIicaXC0Q",
        "outputId": "9a5198f4-fa5b-47df-f13a-3a44574fb6b2"
      },
      "source": [
        "df"
      ],
      "id": "y9nAIicaXC0Q",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8807 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 255
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CoRgoz0NXNii",
        "outputId": "85f88982-3b2a-4dac-de77-e90a4a063fe0"
      },
      "source": [
        "# 고유값의 개수 (분포)\n",
        "\n",
        "df['MEMBER_GENDER'].shape[0]"
      ],
      "id": "CoRgoz0NXNii",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8807"
            ]
          },
          "metadata": {},
          "execution_count": 263
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e53244c3-c665-49b3-886d-d4c894392f54",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f4d07a0b-8efc-4596-cf84-451f697a1ff0"
      },
      "source": [
        "# 고유값의 개수 (분포)\n",
        "\n",
        "df['MEMBER_GENDER'].value_counts()"
      ],
      "id": "e53244c3-c665-49b3-886d-d4c894392f54",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "M    6751\n",
              "F    2056\n",
              "Name: MEMBER_GENDER, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 254
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b27b56c3-e139-415a-a195-ab7996181aed",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "61d75d73-4b4c-44f7-b7ca-de07dafd815f"
      },
      "source": [
        "# 고유값의 구성비 \n",
        "\n",
        "df['MEMBER_GENDER'].value_counts() / df['MEMBER_GENDER'].shape[0]"
      ],
      "id": "b27b56c3-e139-415a-a195-ab7996181aed",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "M    0.766549\n",
              "F    0.233451\n",
              "Name: MEMBER_GENDER, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 264
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "kdIkPVEzXzMm",
        "outputId": "9c51a822-a28a-4cab-f1f3-46489106d1a1"
      },
      "source": [
        "sns.countplot(x='MEMBER_GENDER', data=df)"
      ],
      "id": "kdIkPVEzXzMm",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc7554bcdd0>"
            ]
          },
          "metadata": {},
          "execution_count": 266
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wuBT9c1ZXcYr",
        "outputId": "1ff0fec5-644f-489b-fc05-287faeb63521"
      },
      "source": [
        "df.shape[0]"
      ],
      "id": "wuBT9c1ZXcYr",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8807"
            ]
          },
          "metadata": {},
          "execution_count": 260
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iLHAgfZAXcRL",
        "outputId": "fc07c2cd-2a8e-427a-f8c3-d459d5f03cfe"
      },
      "source": [
        "df.columns"
      ],
      "id": "iLHAgfZAXcRL",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'MEMBERSHIP_TERM_YEARS', 'ANNUAL_FEES', 'MEMBER_MARITAL_STATUS',\n",
              "       'MEMBER_GENDER', 'MEMBER_ANNUAL_INCOME', 'MEMBER_OCCUPATION_CD',\n",
              "       'MEMBERSHIP_PACKAGE', 'MEMBER_AGE_AT_ISSUE', 'ADDITIONAL_MEMBERS',\n",
              "       'PAYMENT_MODE', 'AGENT_CODE', 'MEMBERSHIP_STATUS', 'START_DATE',\n",
              "       'END_DATE'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 267
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "-SRiKyk2YhjA",
        "outputId": "46fa9e5b-da38-4285-a617-27e089430b6d"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_PACKAGE', data=df)"
      ],
      "id": "-SRiKyk2YhjA",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc75223c650>"
            ]
          },
          "metadata": {},
          "execution_count": 269
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8e92baa7-c1cb-4973-97df-ba951ae18c0f"
      },
      "source": [
        "### 열 선택"
      ],
      "id": "8e92baa7-c1cb-4973-97df-ba951ae18c0f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f1b79947-c74a-4911-aeaa-7bc613a4a953",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8676e60b-bfa9-4da6-9b66-224c160bab19"
      },
      "source": [
        "df['MEMBER_GENDER']"
      ],
      "id": "f1b79947-c74a-4911-aeaa-7bc613a4a953",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       M\n",
              "1       M\n",
              "2       M\n",
              "3       F\n",
              "4       M\n",
              "       ..\n",
              "8802    M\n",
              "8803    M\n",
              "8804    M\n",
              "8805    M\n",
              "8806    M\n",
              "Name: MEMBER_GENDER, Length: 8807, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 270
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "33cdde86-fdd1-4578-af5f-feea8d00d8a6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "441167c3-7ecf-4c3a-8667-f379a71cb97d"
      },
      "source": [
        "df.loc[:, 'MEMBER_GENDER']"
      ],
      "id": "33cdde86-fdd1-4578-af5f-feea8d00d8a6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       M\n",
              "1       M\n",
              "2       M\n",
              "3       F\n",
              "4       M\n",
              "       ..\n",
              "8802    M\n",
              "8803    M\n",
              "8804    M\n",
              "8805    M\n",
              "8806    M\n",
              "Name: MEMBER_GENDER, Length: 8807, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 273
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UIH8N3zOZfIw",
        "outputId": "1145b85f-8116-4eaf-8840-3e1af0aa22c2"
      },
      "source": [
        "df.loc[8000:, 'MEMBER_GENDER']"
      ],
      "id": "UIH8N3zOZfIw",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8000    M\n",
              "8001    M\n",
              "8002    M\n",
              "8003    M\n",
              "8004    F\n",
              "       ..\n",
              "8802    M\n",
              "8803    M\n",
              "8804    M\n",
              "8805    M\n",
              "8806    M\n",
              "Name: MEMBER_GENDER, Length: 807, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 274
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 131
        },
        "id": "5NTTurOVZvs8",
        "outputId": "4dfecb07-7294-470d-da14-5ec7ad0a1367"
      },
      "source": [
        "df.head(2)"
      ],
      "id": "5NTTurOVZvs8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0   0                     22  ...    20091029  20131231\n",
              "1   1                     88  ...    20131014  20131231\n",
              "\n",
              "[2 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 277
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "db6aa3fa-5f3e-4bea-bd0e-ca4c42123f59",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "fa764f7a-968b-4b2e-e02f-22c966a9f7d8"
      },
      "source": [
        "\n",
        "df.loc[:, 'MEMBER_GENDER':'MEMBER_OCCUPATION_CD']"
      ],
      "id": "db6aa3fa-5f3e-4bea-bd0e-ca4c42123f59",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     MEMBER_GENDER  MEMBER_ANNUAL_INCOME  MEMBER_OCCUPATION_CD\n",
              "0                M          4.500000e+05                     1\n",
              "1                M          1.375036e+06                     6\n",
              "2                M          6.000000e+05                     1\n",
              "3                F          4.500000e+05                     1\n",
              "4                M          6.000000e+05                     1\n",
              "...            ...                   ...                   ...\n",
              "8802             M          1.375036e+06                     1\n",
              "8803             M          3.999960e+05                     1\n",
              "8804             M          2.250000e+06                     2\n",
              "8805             M          6.000000e+05                     1\n",
              "8806             M          2.000004e+06                     1\n",
              "\n",
              "[8807 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 275
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "512e1e94-86de-48fd-b834-cbc74e642b6b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "c959bd0b-e933-480b-8989-592e32fff6a2"
      },
      "source": [
        "df.loc[:, ['MEMBER_GENDER', 'MEMBER_OCCUPATION_CD']]"
      ],
      "id": "512e1e94-86de-48fd-b834-cbc74e642b6b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>M</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>M</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     MEMBER_GENDER  MEMBER_OCCUPATION_CD\n",
              "0                M                     1\n",
              "1                M                     6\n",
              "2                M                     1\n",
              "3                F                     1\n",
              "4                M                     1\n",
              "...            ...                   ...\n",
              "8802             M                     1\n",
              "8803             M                     1\n",
              "8804             M                     2\n",
              "8805             M                     1\n",
              "8806             M                     1\n",
              "\n",
              "[8807 rows x 2 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 278
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d32afaa3-bc7f-4fa5-b388-27950afe3f5f"
      },
      "source": [
        "## Quiz  \n",
        "df 데이터프레임에서 MEMBERSHIP_TERM_YEARS, MEMBER_AGE_AT_ISSUE, ANNUAL_FEES 열을 선택하여, df_train이라는 새로운 데이터프레임으로 저장합니다.  "
      ],
      "id": "d32afaa3-bc7f-4fa5-b388-27950afe3f5f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f25c0c65-6a26-4a55-8bc5-672330e70592",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 131
        },
        "outputId": "fdf672bf-366d-493d-ee27-3da9ed51ce65"
      },
      "source": [
        "df.head(2)"
      ],
      "id": "f25c0c65-6a26-4a55-8bc5-672330e70592",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0   0                     22  ...    20091029  20131231\n",
              "1   1                     88  ...    20131014  20131231\n",
              "\n",
              "[2 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 281
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "sRIpKUjna0cC",
        "outputId": "cdb92dab-295c-4bf2-f68b-fd848068a4d6"
      },
      "source": [
        "df.loc[:, ['MEMBERSHIP_TERM_YEARS', 'MEMBER_AGE_AT_ISSUE', 'ANNUAL_FEES']]"
      ],
      "id": "sRIpKUjna0cC",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>75</td>\n",
              "      <td>149029.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>93</td>\n",
              "      <td>49</td>\n",
              "      <td>102999.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>17</td>\n",
              "      <td>47</td>\n",
              "      <td>147576.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>36</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>17</td>\n",
              "      <td>53</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>49</td>\n",
              "      <td>46</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>54</td>\n",
              "      <td>51</td>\n",
              "      <td>600001.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>100000.80</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      MEMBERSHIP_TERM_YEARS  MEMBER_AGE_AT_ISSUE  ANNUAL_FEES\n",
              "0                        22                   27    100000.00\n",
              "1                        88                   75    149029.58\n",
              "2                        93                   49    102999.94\n",
              "3                        17                   47    147576.48\n",
              "4                        39                   36    100000.00\n",
              "...                     ...                  ...          ...\n",
              "8802                     17                   53    100000.00\n",
              "8803                     49                   46    100000.00\n",
              "8804                     54                   51    600001.16\n",
              "8805                     27                   27    100000.00\n",
              "8806                     12                   41    100000.80\n",
              "\n",
              "[8807 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 282
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "37vpFLAybGt-",
        "outputId": "13fd4cc7-34e2-4011-f372-77a7d934a762"
      },
      "source": [
        "df_train= df.loc[:, ['MEMBERSHIP_TERM_YEARS', 'MEMBER_AGE_AT_ISSUE', 'ANNUAL_FEES']]\n",
        "df_train\n",
        "df_train.head(5)"
      ],
      "id": "37vpFLAybGt-",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>75</td>\n",
              "      <td>149029.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>93</td>\n",
              "      <td>49</td>\n",
              "      <td>102999.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>17</td>\n",
              "      <td>47</td>\n",
              "      <td>147576.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>36</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   MEMBERSHIP_TERM_YEARS  MEMBER_AGE_AT_ISSUE  ANNUAL_FEES\n",
              "0                     22                   27    100000.00\n",
              "1                     88                   75    149029.58\n",
              "2                     93                   49    102999.94\n",
              "3                     17                   47    147576.48\n",
              "4                     39                   36    100000.00"
            ]
          },
          "metadata": {},
          "execution_count": 285
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "NUW5XDGAbV1U",
        "outputId": "83896bb0-603e-4938-88c2-db7009dd6f6c"
      },
      "source": [
        "df_train"
      ],
      "id": "NUW5XDGAbV1U",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>75</td>\n",
              "      <td>149029.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>93</td>\n",
              "      <td>49</td>\n",
              "      <td>102999.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>17</td>\n",
              "      <td>47</td>\n",
              "      <td>147576.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>36</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>17</td>\n",
              "      <td>53</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>49</td>\n",
              "      <td>46</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>54</td>\n",
              "      <td>51</td>\n",
              "      <td>600001.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>100000.80</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      MEMBERSHIP_TERM_YEARS  MEMBER_AGE_AT_ISSUE  ANNUAL_FEES\n",
              "0                        22                   27    100000.00\n",
              "1                        88                   75    149029.58\n",
              "2                        93                   49    102999.94\n",
              "3                        17                   47    147576.48\n",
              "4                        39                   36    100000.00\n",
              "...                     ...                  ...          ...\n",
              "8802                     17                   53    100000.00\n",
              "8803                     49                   46    100000.00\n",
              "8804                     54                   51    600001.16\n",
              "8805                     27                   27    100000.00\n",
              "8806                     12                   41    100000.80\n",
              "\n",
              "[8807 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 284
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "725a8a3a-8a1c-4930-9b6c-1fae75d104c0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 162
        },
        "outputId": "9300487f-b450-4788-ebd2-25a713d47f5d"
      },
      "source": [
        "df.tail(3)"
      ],
      "id": "725a8a3a-8a1c-4930-9b6c-1fae75d104c0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2250000.0</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>600000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2000004.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[3 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 280
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "eChW9Ps7avDv",
        "outputId": "b35cc897-a20c-4d26-a01d-f942eb972a79"
      },
      "source": [
        "df.iloc[  :   ,  0:4    ]"
      ],
      "id": "eChW9Ps7avDv",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ANNUAL_FEES  MEMBER_MARITAL_STATUS\n",
              "0        0                     22    100000.00                      0\n",
              "1        1                     88    149029.58                      0\n",
              "2        2                     93    102999.94                      0\n",
              "3        3                     17    147576.48                      0\n",
              "4        4                     39    100000.00                      0\n",
              "...    ...                    ...          ...                    ...\n",
              "8802  8802                     17    100000.00                      0\n",
              "8803  8803                     49    100000.00                      0\n",
              "8804  8804                     54    600001.16                      0\n",
              "8805  8805                     27    100000.00                      0\n",
              "8806  8806                     12    100000.80                      0\n",
              "\n",
              "[8807 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 290
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 111
        },
        "id": "Tc8SmYKhfdXy",
        "outputId": "60e54c05-89df-450a-dbef-e8823c20c7ed"
      },
      "source": [
        "df.iloc[ 1:3   ,  [1,2]    ]"
      ],
      "id": "Tc8SmYKhfdXy",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   MEMBERSHIP_TERM_YEARS  ANNUAL_FEES\n",
              "1                     88    149029.58\n",
              "2                     93    102999.94"
            ]
          },
          "metadata": {},
          "execution_count": 291
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4d14d02a-6d04-46eb-b83f-9be6f5d8a8bd"
      },
      "source": [
        "### 열이름 속성"
      ],
      "id": "4d14d02a-6d04-46eb-b83f-9be6f5d8a8bd"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8fd26a82-b7fe-4ddc-9171-cf69e83c1a74",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "088830cc-492b-4d0d-8609-69abff67126f"
      },
      "source": [
        "df.columns"
      ],
      "id": "8fd26a82-b7fe-4ddc-9171-cf69e83c1a74",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'MEMBERSHIP_TERM_YEARS', 'ANNUAL_FEES', 'MEMBER_MARITAL_STATUS',\n",
              "       'MEMBER_GENDER', 'MEMBER_ANNUAL_INCOME', 'MEMBER_OCCUPATION_CD',\n",
              "       'MEMBERSHIP_PACKAGE', 'MEMBER_AGE_AT_ISSUE', 'ADDITIONAL_MEMBERS',\n",
              "       'PAYMENT_MODE', 'AGENT_CODE', 'MEMBERSHIP_STATUS', 'START_DATE',\n",
              "       'END_DATE'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 292
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e44d0a32-efaf-492c-90fa-3439e9fcf3e6"
      },
      "source": [
        "## Quiz  \n",
        "df_train 데이터프레임을 구성하는 열 이름의 배열을 추출하고, 각 열의 평균값을 구하여 dictionary 형태로 정리합니다.  "
      ],
      "id": "e44d0a32-efaf-492c-90fa-3439e9fcf3e6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eec514cc-4ec9-489c-8e10-5080967e2d39"
      },
      "source": [
        ""
      ],
      "id": "eec514cc-4ec9-489c-8e10-5080967e2d39",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6d4e1ada-5ffd-4b31-be7a-a955b2cf492d"
      },
      "source": [
        ""
      ],
      "id": "6d4e1ada-5ffd-4b31-be7a-a955b2cf492d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f373c1ed-d2d9-497a-aa41-8417f07b11f0"
      },
      "source": [
        ""
      ],
      "id": "f373c1ed-d2d9-497a-aa41-8417f07b11f0",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "68d2c5f9-7091-46c2-83f5-678d373a747a"
      },
      "source": [
        "### 행 선택"
      ],
      "id": "68d2c5f9-7091-46c2-83f5-678d373a747a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rVnIdl38viOn"
      },
      "source": [
        "features = ['MEMBERSHIP_TERM_YEARS', 'MEMBER_AGE_AT_ISSUE', 'ANNUAL_FEES']\n",
        "df_train = df.loc[:, features]"
      ],
      "id": "rVnIdl38viOn",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0d7c4874-4e83-4286-b808-cf58f7c2f35b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "592cc15d-b395-4d0e-ef4b-5d15dc63ac90"
      },
      "source": [
        "df_train.loc[1, :]"
      ],
      "id": "0d7c4874-4e83-4286-b808-cf58f7c2f35b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "MEMBERSHIP_TERM_YEARS        88.00\n",
              "MEMBER_AGE_AT_ISSUE          75.00\n",
              "ANNUAL_FEES              149029.58\n",
              "Name: 1, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 297
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "607d895c-db22-4002-9325-293d02222327",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 111
        },
        "outputId": "f9addb61-4eeb-4eea-bdd9-56757dc0031b"
      },
      "source": [
        "df_train.loc[1:2, :]"
      ],
      "id": "607d895c-db22-4002-9325-293d02222327",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>88</td>\n",
              "      <td>75</td>\n",
              "      <td>149029.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>93</td>\n",
              "      <td>49</td>\n",
              "      <td>102999.94</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   MEMBERSHIP_TERM_YEARS  MEMBER_AGE_AT_ISSUE  ANNUAL_FEES\n",
              "1                     88                   75    149029.58\n",
              "2                     93                   49    102999.94"
            ]
          },
          "metadata": {},
          "execution_count": 298
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c412dfba-ff9c-4a39-8083-a98e40e726b7"
      },
      "source": [
        "### 행, 열 슬라이싱 - 데이터프레임 추출"
      ],
      "id": "c412dfba-ff9c-4a39-8083-a98e40e726b7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "22fd09a7-4eb8-410b-a3b8-ab931f08125c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 111
        },
        "outputId": "7ca9deaf-72cb-45d4-9b5c-a9bab4733de2"
      },
      "source": [
        "df_train.loc[1:2, 'MEMBER_AGE_AT_ISSUE':'ANNUAL_FEES']"
      ],
      "id": "22fd09a7-4eb8-410b-a3b8-ab931f08125c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>75</td>\n",
              "      <td>149029.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>49</td>\n",
              "      <td>102999.94</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   MEMBER_AGE_AT_ISSUE  ANNUAL_FEES\n",
              "1                   75    149029.58\n",
              "2                   49    102999.94"
            ]
          },
          "metadata": {},
          "execution_count": 299
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "56009de7-e2a4-475f-8eb5-89b1941f0976"
      },
      "source": [
        "# 통계 기초/시각화"
      ],
      "id": "56009de7-e2a4-475f-8eb5-89b1941f0976"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "88dHtskHhIJA",
        "outputId": "a0c8ba45-44ba-4b73-c697-b30cd3b6c2f0"
      },
      "source": [
        "df.mean()"
      ],
      "id": "88dHtskHhIJA",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                       4.403000e+03\n",
              "MEMBERSHIP_TERM_YEARS    2.951845e+01\n",
              "ANNUAL_FEES              1.806998e+05\n",
              "MEMBER_MARITAL_STATUS    1.526059e-01\n",
              "MEMBER_ANNUAL_INCOME     1.375036e+06\n",
              "MEMBER_OCCUPATION_CD     1.708414e+00\n",
              "MEMBER_AGE_AT_ISSUE      4.676632e+01\n",
              "ADDITIONAL_MEMBERS       1.412967e+00\n",
              "MEMBERSHIP_STATUS        3.032815e-01\n",
              "START_DATE               2.010835e+07\n",
              "END_DATE                 2.012598e+07\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 307
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "22bb2c6d-9880-448c-84e3-d3f7b5d04972",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c62e68dc-5d58-4c7d-b6e9-2ac04a30e65f"
      },
      "source": [
        "# 평균\n",
        "df['MEMBER_AGE_AT_ISSUE'].mean()"
      ],
      "id": "22bb2c6d-9880-448c-84e3-d3f7b5d04972",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "46.766322243669805"
            ]
          },
          "metadata": {},
          "execution_count": 300
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "24a615a7-35b3-4f1a-8dc9-a4646d751251",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3d1b8c1e-45e7-4066-9f26-899bd3ef29a2"
      },
      "source": [
        "# 최대값\n",
        "df['MEMBER_AGE_AT_ISSUE'].max()"
      ],
      "id": "24a615a7-35b3-4f1a-8dc9-a4646d751251",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "92"
            ]
          },
          "metadata": {},
          "execution_count": 301
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "36edb146-7f6b-4e09-87d9-66e705b1430b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15d43d7d-528a-43a8-a55c-c80ea9a1b198"
      },
      "source": [
        "# 최소값\n",
        "df['MEMBER_AGE_AT_ISSUE'].min()"
      ],
      "id": "36edb146-7f6b-4e09-87d9-66e705b1430b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 303
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "50414193-9886-4198-a1a2-8d6cdefcc4e0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "018f5be9-925d-4ae2-ed89-4dd03972c9e2"
      },
      "source": [
        "# 중간값\n",
        "df['MEMBER_AGE_AT_ISSUE'].median()"
      ],
      "id": "50414193-9886-4198-a1a2-8d6cdefcc4e0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "46.0"
            ]
          },
          "metadata": {},
          "execution_count": 302
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ddd4296d-618d-4e80-8a83-b458aa97dff8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6f6a76fb-42c1-46ca-e2c2-ffa7e04c7610"
      },
      "source": [
        "# 표준편차\n",
        "df['MEMBER_AGE_AT_ISSUE'].std()"
      ],
      "id": "ddd4296d-618d-4e80-8a83-b458aa97dff8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "13.909048401428512"
            ]
          },
          "metadata": {},
          "execution_count": 304
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a319dc31-106e-4de4-a0da-acf824a2c169",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "outputId": "aa41ac9d-3a3a-4e05-ce31-83f91472e344"
      },
      "source": [
        "# 통계 요약\n",
        "df.describe()"
      ],
      "id": "a319dc31-106e-4de4-a0da-acf824a2c169",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8.807000e+03</td>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8.807000e+03</td>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8807.000000</td>\n",
              "      <td>8.807000e+03</td>\n",
              "      <td>8.807000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>4403.000000</td>\n",
              "      <td>29.518451</td>\n",
              "      <td>1.806998e+05</td>\n",
              "      <td>0.152606</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1.708414</td>\n",
              "      <td>46.766322</td>\n",
              "      <td>1.412967</td>\n",
              "      <td>0.303281</td>\n",
              "      <td>2.010835e+07</td>\n",
              "      <td>2.012598e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2542.506244</td>\n",
              "      <td>22.584187</td>\n",
              "      <td>2.854986e+05</td>\n",
              "      <td>0.428501</td>\n",
              "      <td>1.368975e+07</td>\n",
              "      <td>1.447672</td>\n",
              "      <td>13.909048</td>\n",
              "      <td>1.146395</td>\n",
              "      <td>0.459702</td>\n",
              "      <td>1.727042e+04</td>\n",
              "      <td>1.106843e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>9.996000e+03</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.006091e+07</td>\n",
              "      <td>2.007083e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2201.500000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>1.000000e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.009123e+07</td>\n",
              "      <td>2.013043e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4403.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>1.191941e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6.999960e+05</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.011011e+07</td>\n",
              "      <td>2.013123e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6604.500000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>1.909890e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>57.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.012123e+07</td>\n",
              "      <td>2.013123e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>8806.000000</td>\n",
              "      <td>102.000000</td>\n",
              "      <td>1.010000e+07</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.000000e+09</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>92.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.013113e+07</td>\n",
              "      <td>2.013123e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                id  MEMBERSHIP_TERM_YEARS  ...    START_DATE      END_DATE\n",
              "count  8807.000000            8807.000000  ...  8.807000e+03  8.807000e+03\n",
              "mean   4403.000000              29.518451  ...  2.010835e+07  2.012598e+07\n",
              "std    2542.506244              22.584187  ...  1.727042e+04  1.106843e+04\n",
              "min       0.000000               9.000000  ...  2.006091e+07  2.007083e+07\n",
              "25%    2201.500000              12.000000  ...  2.009123e+07  2.013043e+07\n",
              "50%    4403.000000              19.000000  ...  2.011011e+07  2.013123e+07\n",
              "75%    6604.500000              37.000000  ...  2.012123e+07  2.013123e+07\n",
              "max    8806.000000             102.000000  ...  2.013113e+07  2.013123e+07\n",
              "\n",
              "[8 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 305
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "060c5ccd-4c23-430d-aad3-2d94a877e051"
      },
      "source": [
        "## Pandas 시각화"
      ],
      "id": "060c5ccd-4c23-430d-aad3-2d94a877e051"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ima3QEh0hstE",
        "outputId": "8185d819-66d8-4086-c381-5bb5cf0e0b0a"
      },
      "source": [
        "df['MEMBERSHIP_STATUS'].unique()"
      ],
      "id": "Ima3QEh0hstE",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 309
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4842deba-530f-4832-9a77-66a4f2a7b061",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d0fb04e3-683f-423b-b6df-fb1304a47178"
      },
      "source": [
        "df['MEMBERSHIP_STATUS'].value_counts()"
      ],
      "id": "4842deba-530f-4832-9a77-66a4f2a7b061",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    6136\n",
              "1    2671\n",
              "Name: MEMBERSHIP_STATUS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 308
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f31bea83-1bd6-4ebf-a061-5010cee20e66",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "fa727d0e-947e-4bb7-eb58-d134ceb52265"
      },
      "source": [
        "df['MEMBERSHIP_STATUS'].value_counts().plot(kind='barh')"
      ],
      "id": "f31bea83-1bd6-4ebf-a061-5010cee20e66",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc752231390>"
            ]
          },
          "metadata": {},
          "execution_count": 310
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 172
        },
        "id": "P7HjVDmSh6jI",
        "outputId": "3622db73-8def-4479-c627-b3b9625b45ca"
      },
      "source": [
        "sns.countplotdf['MEMBERSHIP_STATUS']"
      ],
      "id": "P7HjVDmSh6jI",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-316-0301476141ff>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcountplotdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'MEMBERSHIP_STATUS'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m: module 'seaborn' has no attribute 'countplotdf'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3f2839e1-37fa-4cf3-999a-bd76cec41776",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "150591af-fd0c-4e1a-f346-d118452767e3"
      },
      "source": [
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='hist')"
      ],
      "id": "3f2839e1-37fa-4cf3-999a-bd76cec41776",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc7530f2250>"
            ]
          },
          "metadata": {},
          "execution_count": 311
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c56a90e9-2308-48a8-a241-114b6bc58920",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "outputId": "b2574982-5392-4540-9b8a-35312d8e5149"
      },
      "source": [
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='box')"
      ],
      "id": "c56a90e9-2308-48a8-a241-114b6bc58920",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc765ea6950>"
            ]
          },
          "metadata": {},
          "execution_count": 317
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7245441d-8ed2-40de-af6a-0cc1c02a4818",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "da614eb3-1763-4b5d-cd04-5cd0fb80e7a7"
      },
      "source": [
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='kde')"
      ],
      "id": "7245441d-8ed2-40de-af6a-0cc1c02a4818",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc755692510>"
            ]
          },
          "metadata": {},
          "execution_count": 318
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "edfb75c0-8eb5-4925-815c-53a84abb6857",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "outputId": "3be06b72-d842-493c-92e6-a243e7a29a0b"
      },
      "source": [
        "df.hist(figsize=(5, 5))"
      ],
      "id": "edfb75c0-8eb5-4925-815c-53a84abb6857",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fc74ddb7510>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c510cd0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c535210>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c4eb710>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c4a0c10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c464150>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c4176d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c3ceb10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c3ceb50>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c391190>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c37ea90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc74c332f90>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 320
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 12 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "57423a3a-01f2-4a1d-872a-b50ff1e6baf0"
      },
      "source": [
        "# 여러 개의 그래프를 동시에 표시 - subplot 사용법"
      ],
      "id": "57423a3a-01f2-4a1d-872a-b50ff1e6baf0"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d33a764a-1bcf-4916-a6a3-95757858e4ff",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "outputId": "a49a5317-ffff-4152-9623-51f3dd7ff22f"
      },
      "source": [
        "# MATLAB 스타일\n",
        "\n",
        "plt.figure(figsize=(10, 4))\n",
        "\n",
        "plt.subplot(1, 2, 1)      # 세로 개수, 가로 개수, 차트 순서\n",
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='box')\n",
        "\n",
        "plt.subplot(1, 2, 2)\n",
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='hist')\n",
        "\n",
        "plt.show()"
      ],
      "id": "d33a764a-1bcf-4916-a6a3-95757858e4ff",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6f6c5b2d-fe72-47f6-a3de-4bd778fe97f9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "d4605863-35dd-4cb3-db6b-bc6aee4b1b6e"
      },
      "source": [
        "# 객체지향 스타일\n",
        "\n",
        "fig, ax = plt.subplots(3, 2, figsize=(8, 4)) \n",
        "\n",
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='box', ax=ax[0, 0])\n",
        "df['MEMBERSHIP_TERM_YEARS'].plot(kind='hist', ax=ax[0, 1])\n",
        "\n",
        "plt.show()"
      ],
      "id": "6f6c5b2d-fe72-47f6-a3de-4bd778fe97f9",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x288 with 6 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "603760c9-6a90-4c40-9ebd-23703c6c6351"
      },
      "source": [
        "# Seaborn 시각화"
      ],
      "id": "603760c9-6a90-4c40-9ebd-23703c6c6351"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "024f00dd-c13a-42f2-adcd-0b1d3f119589",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 131
        },
        "outputId": "c66558a8-3380-40a8-e715-54bdd785ada1"
      },
      "source": [
        "df.head(2)"
      ],
      "id": "024f00dd-c13a-42f2-adcd-0b1d3f119589",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0   0                     22  ...    20091029  20131231\n",
              "1   1                     88  ...    20131014  20131231\n",
              "\n",
              "[2 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 324
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "36a3943d-685c-4287-9382-c75c2c42668a"
      },
      "source": [
        "## 범주형 변수의 수량을 시각화"
      ],
      "id": "36a3943d-685c-4287-9382-c75c2c42668a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "98257b33-952b-4e4d-982d-9e0f649d763a"
      },
      "source": [
        "categorical_cols = ['MEMBER_MARITAL_STATUS', 'MEMBER_GENDER', \n",
        "                    'MEMBERSHIP_PACKAGE', 'MEMBER_OCCUPATION_CD', \n",
        "                    'PAYMENT_MODE', 'AGENT_CODE', 'MEMBERSHIP_STATUS',\n",
        "                   ]"
      ],
      "id": "98257b33-952b-4e4d-982d-9e0f649d763a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e40051d2-4c29-49ed-834f-449d2464890b"
      },
      "source": [
        "### Count Plot  "
      ],
      "id": "e40051d2-4c29-49ed-834f-449d2464890b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ba77901f-fdf7-44a2-aae3-c4bfb7828678",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "80e66945-ef0c-4378-9cb0-2d7fa9d52213"
      },
      "source": [
        "df['MEMBER_OCCUPATION_CD'].unique()"
      ],
      "id": "ba77901f-fdf7-44a2-aae3-c4bfb7828678",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 6, 2, 5, 4, 3])"
            ]
          },
          "metadata": {},
          "execution_count": 333
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c0d9eae0-d5ec-4a4e-be76-0c439ce9008e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1fc2c953-eaf4-4d62-b0c6-03a2acd510c6"
      },
      "source": [
        "df['MEMBERSHIP_STATUS'].nunique()"
      ],
      "id": "c0d9eae0-d5ec-4a4e-be76-0c439ce9008e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 329
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3772978c-ff1d-4d07-94de-7af9e60ad6ab",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a16384f8-e214-4875-d19e-722391c0a0e3"
      },
      "source": [
        "df['MEMBERSHIP_STATUS'].value_counts()"
      ],
      "id": "3772978c-ff1d-4d07-94de-7af9e60ad6ab",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    6136\n",
              "1    2671\n",
              "Name: MEMBERSHIP_STATUS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 330
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1de933d0-4057-46dc-9ed4-18cb192b1806",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "ad90f2b6-089f-4274-9771-f4598a53a800"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_STATUS', data=df);"
      ],
      "id": "1de933d0-4057-46dc-9ed4-18cb192b1806",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "id": "T5w-vDgxlCvo",
        "outputId": "d140767b-662e-458a-89d4-fa4edc22c232"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_STATUS', data=df);"
      ],
      "id": "T5w-vDgxlCvo",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "541f31f1-727e-4cd3-bcc6-1386ccfea9e5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "47fda4cb-745d-46cb-85fd-5158d899e4c2"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_STATUS', hue='MEMBER_MARITAL_STAS', data=df);"
      ],
      "id": "541f31f1-727e-4cd3-bcc6-1386ccfea9e5",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "id": "X048WvhOliDw",
        "outputId": "26491265-ab50-48ee-864c-f5a5669838bc"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_STATUS', hue='PAYMENT_MODE', data=df);"
      ],
      "id": "X048WvhOliDw",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f1caa748-aec3-4e86-842c-499830d7e383",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "outputId": "98c8524b-9fc2-4d5e-fb66-4610f0a3eece"
      },
      "source": [
        "sns.countplot(y='MEMBER_MARITAL_STATUS', hue='PAYMENT_MODE', data=df);"
      ],
      "id": "f1caa748-aec3-4e86-842c-499830d7e383",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "db64862b-69e9-4bcd-89d3-3096ac676b01"
      },
      "source": [
        "## Quiz  \n",
        "다른 범주형 변수를 찾아서, countplot으로 데이터의 수량을 시각화합니다. "
      ],
      "id": "db64862b-69e9-4bcd-89d3-3096ac676b01"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "689925c0-9bba-49e8-bed1-bbbad581f5af",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "90ecd672-b159-410d-9e9f-9ef903152a3c"
      },
      "source": [
        "categorical_cols"
      ],
      "id": "689925c0-9bba-49e8-bed1-bbbad581f5af",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['MEMBER_MARITAL_STATUS',\n",
              " 'MEMBER_GENDER',\n",
              " 'MEMBERSHIP_PACKAGE',\n",
              " 'MEMBER_OCCUPATION_CD',\n",
              " 'PAYMENT_MODE',\n",
              " 'AGENT_CODE',\n",
              " 'MEMBERSHIP_STATUS']"
            ]
          },
          "metadata": {},
          "execution_count": 338
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "id": "oxKLLmdNmBzN",
        "outputId": "b9faabd8-ad32-402b-eaf0-a6ab88d59717"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_STATUS' , data=df);"
      ],
      "id": "oxKLLmdNmBzN",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "id": "hpCdPXhUmBjY",
        "outputId": "c7810ea8-e94b-4fce-89ce-de6a07274728"
      },
      "source": [
        "sns.countplot(x='MEMBERSHIP_STATUS', hue='PAYMENT_MODE', data=df);"
      ],
      "id": "hpCdPXhUmBjY",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 172
        },
        "id": "y165HNdkmBNb",
        "outputId": "d2adee04-2a61-4e16-f044-4251d1e79456"
      },
      "source": [
        "value.counts()"
      ],
      "id": "y165HNdkmBNb",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-349-0b0ec4c94846>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcounts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'value' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pT-qaWeLm2Gd"
      },
      "source": [
        ""
      ],
      "id": "pT-qaWeLm2Gd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cb71344c-4f51-4c61-8af4-12fdca25357b"
      },
      "source": [
        "## 연속형 변수의 분포를 시각화"
      ],
      "id": "cb71344c-4f51-4c61-8af4-12fdca25357b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cdec9d7d-eaa9-4050-a662-294121949064"
      },
      "source": [
        "numeric_cols = ['MEMBERSHIP_TERM_YEARS','ANNUAL_FEES','MEMBER_ANNUAL_INCOME',\n",
        "                'MEMBER_AGE_AT_ISSUE','ADDITIONAL_MEMBERS',\n",
        "                'START_DATE (YYYYMMDD)','END_DATE  (YYYYMMDD)']"
      ],
      "id": "cdec9d7d-eaa9-4050-a662-294121949064",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1a607e16-fee6-446d-8921-52e2d24b8bd5"
      },
      "source": [
        "### Distribution Plot"
      ],
      "id": "1a607e16-fee6-446d-8921-52e2d24b8bd5"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0b2f1120-a959-4d84-86d5-1ec7490e70db",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "5e4bfe79-7f8d-4a51-b9af-3f61b0c061b2"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', data=df);"
      ],
      "id": "0b2f1120-a959-4d84-86d5-1ec7490e70db",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9364560a-8219-496e-970c-622125ab1060",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "8de2a480-e315-41d4-e618-0551deed68bd"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', kind='hist' ,  data=df, bins=10);"
      ],
      "id": "9364560a-8219-496e-970c-622125ab1060",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "81fcb7c4-c70a-42d2-b5e2-308698e703d0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "704446fb-dfda-46a7-deec-05f1573d4221"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', kind='kde', data=df);"
      ],
      "id": "81fcb7c4-c70a-42d2-b5e2-308698e703d0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2ae5f24c-066b-4740-9fb8-acfa71e6165f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "70171209-3aed-418f-90ef-77eaf6575852"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', kind='kde', data=df, bw_adjust=0.3);"
      ],
      "id": "2ae5f24c-066b-4740-9fb8-acfa71e6165f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bb28e52f-8bf8-4475-a45d-e340b589b716",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "15ef58be-00be-42f5-a1ca-0b2479b80458"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', hue='MEMBERSHIP_STATUS', data=df, bins=100);"
      ],
      "id": "bb28e52f-8bf8-4475-a45d-e340b589b716",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 476.375x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cc5dd95f-17d7-46b5-96df-76c026f72e7b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "d4610292-4e86-463b-e03e-5cb2f3901893"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', hue='MEMBERSHIP_STATUS', kind='kde', data=df,bw_adjust=0.3);"
      ],
      "id": "cc5dd95f-17d7-46b5-96df-76c026f72e7b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 476.375x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "id": "xTKdjoABomBl",
        "outputId": "7df6a40b-05d5-4ab0-d697-a386524f9304"
      },
      "source": [
        "sns.displot(x='MEMBER_AGE_AT_ISSUE', hue='MEMBERSHIP_STATUS', kind='kde' ,fill='true', data=df, bw_adjust=0.3);"
      ],
      "id": "xTKdjoABomBl",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 476.375x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c0a7339f-114b-424a-932a-c0806cb38c46",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 729
        },
        "outputId": "fc88e82a-341a-4088-c69d-15a393a3d9d1"
      },
      "source": [
        "sns.displot(row='MEMBER_GENDER', col='MEMBERSHIP_PACKAGE', x='START_DATE', hue='MEMBERSHIP_STATUS', kind='hist', data=df);"
      ],
      "id": "c0a7339f-114b-424a-932a-c0806cb38c46",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 836.375x720 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 729
        },
        "id": "gqneY_3Po_Wh",
        "outputId": "7503b385-67ac-4f7e-b0ad-f09b8483839b"
      },
      "source": [
        "sns.displot(row='MEMBER_GENDER',\n",
        "            col='MEMBERSHIP_PACKAGE', \n",
        "            x='START_DATE',\n",
        "            hue='MEMBERSHIP_STATUS', \n",
        "            kind='kde', \n",
        "            fill='true', \n",
        "            data=df, \n",
        "            bw_adjust=0.1);"
      ],
      "id": "gqneY_3Po_Wh",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 836.375x720 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e72a1a95-efc0-4c2e-a8a4-9cc40c2c3c86"
      },
      "source": [
        "## Box Plot"
      ],
      "id": "e72a1a95-efc0-4c2e-a8a4-9cc40c2c3c86"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5e1ef9d3-2d85-4266-b7da-a0fb9e2f43d7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "09dce1e8-34c3-4576-f1fd-38a6afba25f7"
      },
      "source": [
        "df['MEMBERSHIP_STATUS'].value_counts()"
      ],
      "id": "5e1ef9d3-2d85-4266-b7da-a0fb9e2f43d7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    6136\n",
              "1    2671\n",
              "Name: MEMBERSHIP_STATUS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 375
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e44f3303-5b46-45aa-8f9d-a0dbf7f3438f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "ddff25f8-de0a-4d6e-d0d7-1be4fa469df8"
      },
      "source": [
        "sns.boxplot(x='MEMBERSHIP_TERM_YEARS', data=df, palette='Accent');"
      ],
      "id": "e44f3303-5b46-45aa-8f9d-a0dbf7f3438f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAEHCAYAAACQkJyuAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAARIElEQVR4nO3de3Bc5XnH8d+j28qlHhvbiAokWBrTMAwQYDwtaRoKoSl0SkMvoaBp6pCBSS8wxB4wqTvQhikNjSHFuJ4w4RbaNCPIOGlCMw00w2VCph1aUyiXAAWCkQQGCbANyNYF6+kf79nleC3Jsq3dR9r9fmY02j3nPec85+zZ3559tfvK3F0AgNprii4AABoVAQwAQQhgAAhCAANAEAIYAIK07E/jZcuWebFYrFIpAFCfHnvssTfd/bDK6fsVwMViUZs3b569qgCgAZjZK5NNpwsCAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAg+/U/4aqtt7dX/f39VVn34OCgJKmjo6Mq659ruru71dPTE10GgGnMqQDu7+/XCz97QYUlhVlf9+h7o5KkkbaRWV/3XDP69mh0CQBmYE4FsCQVlhTUfXb3rK+3//50ZV2Ndc81pX0FMLfRBwwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEFqEsC9vb3q7e2txaaAhsBzqj601GIj/f39tdgM0DB4TtUHuiAAIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEKQlugAAB2ft2rUaHBxUZ2enhoaG9P7776u1tVXNzc0aGRnRggULtHHjRl1++eUaHh7WwoULJUnvvvuuFi1apKamJm3btk1Lly7VunXrdOWVV5bvb9u2TRMTE2publZ3d7e2bNmi5cuXa3h4WFu3blVXV5euvfbaPZZ57733NDo6qvb2di1btkwDAwMqFosaGhoqb3/9+vW6+uqry+sYHBzU2NiYCoWCzGyPuletWlWudWJionx7586dGh8fV1tbmzo6Osrbueaaa3TJJZfI3dXU1KTm5uZyu0KhUF7+nXfeKbe57bbb9tiHHTt2lI/j+Ph4+Vjfcccds/rYEcDAPDc4OChJ2rp1a3na+Ph4OTh27dolSRoeHpaUgrdkx44d5dtvvfWWJGnbtm173Jek3bt3a8uWLZKkF198sTx9YGBgymVGRkbK80vL5rdfqrfURpJGR0fLt0t1l9rna83fHhsb22s77i5JmpiY0MTERLnd2NjYXsuX5k+2D/nwrQa6IIB5bO3atTNqd/HFF89qu1otUw/1TKcmV8BvvPGGRkdHtW7dumnb9fX1aczGalFSXRt7d0x97/Tt83hj/urr61OhUND27dujS8FB2OcVsJl93sw2m9nmoaGhWtQEAA1hn1fA7n6rpFslacWKFX4gGzn88MMlSVddddW07datW6e+7X0HsgnktC1s01GLj9rn8cb8VXp3wxXw/EYfMDCPdXR0RJeAg0AAA/PY9ddfP6N2M/341IF8zKqay9RDPdMhgIF5rnQV3NnZqZaW1KvY2tqq9vZ2SdKCBQskSYcccogkaeHCheXPAi9atEiHHnqoJGnp0qWStMf9pqYUEc3NzSoWi5Kk5cuXq7OzU5LU1dW11zKFQkGS1N7eXp5fLBb32H6p3tI62traJEmFQmGvuvO15m+3trZKktra2vbYjiSZmSSpqalpj3b55fNtKvchfxyric8BA/PcTK+CN2zYMKN2N954437XcCDLXHfddTNqt379+v1e9+23377fyxzIPhwsroABIAgBDABBCGAACEIAA0AQAhgAghDAABCEAAaAIAQwAAQhgAEgCAEMAEEIYAAIQgADQBACGACCEMAAEIQABoAgBDAABCGAASAIAQwAQQhgAAhCAANAEAIYAIIQwAAQhAAGgCAEMAAEIYABIAgB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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3d7d87b8-2ef1-4903-955b-c472463bfb76",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "76ce18aa-32b6-4468-8535-2a24fb7f5577"
      },
      "source": [
        "sns.boxplot(x='MEMBERSHIP_STATUS', y='MEMBERSHIP_TERM_YEARS', data=df, palette=\"PRGn\");"
      ],
      "id": "3d7d87b8-2ef1-4903-955b-c472463bfb76",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0de748fd-2aa6-4fc9-9a69-8128882dcbb5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "8882bb48-4d1c-443d-895a-0cb782d9252c"
      },
      "source": [
        "sns.boxplot(x='MEMBERSHIP_STATUS', y='MEMBERSHIP_TERM_YEARS', hue=\"MEMBERSHIP_STATUS\", data=df, palette=\"PRGn\")\n",
        "\n",
        "plt.legend(loc=\"upper right\")\n",
        "plt.show()"
      ],
      "id": "0de748fd-2aa6-4fc9-9a69-8128882dcbb5",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "64842d67-6409-4f3d-89e2-3872f7237f2e"
      },
      "source": [
        "## Violin Plot"
      ],
      "id": "64842d67-6409-4f3d-89e2-3872f7237f2e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d1d9d9f2-04f2-4a94-b2ea-af283e23741b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "78960d18-63e0-4631-9696-6b71c615b320"
      },
      "source": [
        "sns.violinplot(x='PAYMENT_MODE', y='ANNUAL_FEES', hue=\"MEMBERSHIP_STATUS\", data=df, palette=\"PRGn\")\n",
        "plt.legend(loc=\"upper right\")\n",
        "plt.show()"
      ],
      "id": "d1d9d9f2-04f2-4a94-b2ea-af283e23741b",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b70ff973-f440-4ca8-aeb4-7bd0521a0592"
      },
      "source": [
        "## Strip Plot"
      ],
      "id": "b70ff973-f440-4ca8-aeb4-7bd0521a0592"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fe8f8b15-0046-4d29-a6f4-d4b7d4d106af",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "015f1680-755e-4352-b657-0527f215837d"
      },
      "source": [
        "sns.stripplot(x='MEMBER_GENDER', y='ANNUAL_FEES', hue=\"MEMBERSHIP_STATUS\", data=df, palette=\"PRGn\")\n",
        "plt.legend(loc=\"upper right\")\n",
        "plt.show()"
      ],
      "id": "fe8f8b15-0046-4d29-a6f4-d4b7d4d106af",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4440f837-b872-4314-ac16-432825c3def8"
      },
      "source": [
        "## Bar Plot"
      ],
      "id": "4440f837-b872-4314-ac16-432825c3def8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7e454996-0797-4ed7-83e4-26238d61bff3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "ef206292-c1a1-4956-9e84-ccd38edd007e"
      },
      "source": [
        "sns.barplot(x='MEMBER_OCCUPATION_CD', y='MEMBERSHIP_TERM_YEARS', data=df);"
      ],
      "id": "7e454996-0797-4ed7-83e4-26238d61bff3",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "df8c9cfc-e791-408e-b911-e3b50b0fb75d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "566cfa8c-6744-4fad-e319-0f58a9b4ad64"
      },
      "source": [
        "# 데이터 정렬\n",
        "\n",
        "sorted_index = df.loc[:, ['MEMBER_OCCUPATION_CD', 'MEMBERSHIP_TERM_YEARS']].groupby('MEMBER_OCCUPATION_CD').mean().sort_values(by='MEMBERSHIP_TERM_YEARS', ascending=False).index\n",
        "sorted_index"
      ],
      "id": "df8c9cfc-e791-408e-b911-e3b50b0fb75d",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Int64Index([6, 2, 1, 4, 5, 3], dtype='int64', name='MEMBER_OCCUPATION_CD')"
            ]
          },
          "metadata": {},
          "execution_count": 382
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "465fe507-fbc6-47a1-b0eb-927973174820",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "bc95f949-0799-4ca9-eeba-31b0061938bf"
      },
      "source": [
        "sns.barplot(x='MEMBER_OCCUPATION_CD', y='MEMBERSHIP_TERM_YEARS', data=df, order=sorted_index);"
      ],
      "id": "465fe507-fbc6-47a1-b0eb-927973174820",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4bc9a5c4-034f-4af5-9580-5cbb831fdb69",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "e6795544-0e35-471f-e26b-815f88e83536"
      },
      "source": [
        "sns.barplot(x='MEMBER_OCCUPATION_CD', y='MEMBERSHIP_TERM_YEARS', hue='MEMBERSHIP_STATUS', data=df);"
      ],
      "id": "4bc9a5c4-034f-4af5-9580-5cbb831fdb69",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4136dcfc-bfaa-444a-b880-a0bbf4522f96"
      },
      "source": [
        "## Scatter Plot"
      ],
      "id": "4136dcfc-bfaa-444a-b880-a0bbf4522f96"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "69179434-3582-47d2-9961-e8b71252463c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "713ca466-2275-43fd-fe68-1eec70b3a025"
      },
      "source": [
        "sns.scatterplot(x='MEMBERSHIP_TERM_YEARS', y='ANNUAL_FEES', data=df)\n",
        "plt.show()"
      ],
      "id": "69179434-3582-47d2-9961-e8b71252463c",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "21a5e3b4-acf1-40b4-94dc-5358cb78b02a"
      },
      "source": [
        "## LM Plot"
      ],
      "id": "21a5e3b4-acf1-40b4-94dc-5358cb78b02a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6d941e7b-d837-4b53-89cb-847aed93df3e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "outputId": "c9eec206-2fa4-4abc-e8b7-1b050053e89b"
      },
      "source": [
        "sns.lmplot(x='MEMBER_ANNUAL_INCOME', y='ANNUAL_FEES', data=df)\n",
        "plt.show()"
      ],
      "id": "6d941e7b-d837-4b53-89cb-847aed93df3e",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e062ba4e-e203-41d2-a458-0708112deb78"
      },
      "source": [
        "## KDE Plot"
      ],
      "id": "e062ba4e-e203-41d2-a458-0708112deb78"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "655a943c-d85c-4328-a4a5-c16fdfd89a03",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        },
        "outputId": "0658c5ac-8462-430c-b6c9-a809a900a129"
      },
      "source": [
        "sns.kdeplot(x='MEMBERSHIP_TERM_YEARS', y='ANNUAL_FEES', data=df);"
      ],
      "id": "655a943c-d85c-4328-a4a5-c16fdfd89a03",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9a2d8e87-987b-4b4b-825c-046588e01321"
      },
      "source": [
        "## Joint Plot"
      ],
      "id": "9a2d8e87-987b-4b4b-825c-046588e01321"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0d656094-fbe5-44bd-9348-388ad14612ff",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "outputId": "ab359217-578f-40e5-8f54-82de93b786a5"
      },
      "source": [
        "sns.jointplot(x='MEMBERSHIP_TERM_YEARS', y='ANNUAL_FEES', data=df)"
      ],
      "id": "0d656094-fbe5-44bd-9348-388ad14612ff",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.JointGrid at 0x7fc741f82310>"
            ]
          },
          "metadata": {},
          "execution_count": 387
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x432 with 3 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4e77b51b-389b-4dfd-aea7-7063baf50619"
      },
      "source": [
        "# 데이터 전처리2 \n",
        " \n",
        "- 필터링, 정제, 변환"
      ],
      "id": "4e77b51b-389b-4dfd-aea7-7063baf50619"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "48fe65c9-5347-496b-bfd3-21c87bc1d0d9"
      },
      "source": [
        "### 행 필터 (불린 인덱싱)"
      ],
      "id": "48fe65c9-5347-496b-bfd3-21c87bc1d0d9"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e4ThJSOBxMaK",
        "outputId": "1a7c0b9f-884f-4dad-ed11-30f1012b8597"
      },
      "source": [
        "df['MEMBER_GENDER']  == 'm'"
      ],
      "id": "e4ThJSOBxMaK",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "1       False\n",
              "2       False\n",
              "3       False\n",
              "4       False\n",
              "        ...  \n",
              "8802    False\n",
              "8803    False\n",
              "8804    False\n",
              "8805    False\n",
              "8806    False\n",
              "Name: MEMBER_GENDER, Length: 8807, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8a356905-2b9d-4511-803b-793e2c6cf2e7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2f1725b4-dd95-449e-904e-8fd57a689c67"
      },
      "source": [
        "df['MEMBER_GENDER'] == \"M\""
      ],
      "id": "8a356905-2b9d-4511-803b-793e2c6cf2e7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        True\n",
              "1        True\n",
              "2        True\n",
              "3       False\n",
              "4        True\n",
              "        ...  \n",
              "8802     True\n",
              "8803     True\n",
              "8804     True\n",
              "8805     True\n",
              "8806     True\n",
              "Name: MEMBER_GENDER, Length: 8807, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d68e80f3-c3ed-4cc1-a2c0-cf8aef50dfae",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "f23bebbe-a2b9-4112-a300-506fbabef7d0"
      },
      "source": [
        "df.loc[ df['MEMBER_GENDER'] != \"M\"  ,  : ]"
      ],
      "id": "d68e80f3-c3ed-4cc1-a2c0-cf8aef50dfae",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>450000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>11</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.06</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>499992.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>43</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1268822</td>\n",
              "      <td>0</td>\n",
              "      <td>20130530</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>15</td>\n",
              "      <td>36</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>300000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>58</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>900622</td>\n",
              "      <td>0</td>\n",
              "      <td>20100831</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>19</td>\n",
              "      <td>21</td>\n",
              "      <td>101000.00</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>368004.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>74</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>936822</td>\n",
              "      <td>0</td>\n",
              "      <td>20100615</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>24</td>\n",
              "      <td>29</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>300000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>56</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>225288</td>\n",
              "      <td>1</td>\n",
              "      <td>20080623</td>\n",
              "      <td>20100822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8775</th>\n",
              "      <td>8775</td>\n",
              "      <td>12</td>\n",
              "      <td>280000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>1080000.0</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1282388</td>\n",
              "      <td>1</td>\n",
              "      <td>20120229</td>\n",
              "      <td>20130429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8786</th>\n",
              "      <td>8786</td>\n",
              "      <td>22</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>249996.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>37</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>809422</td>\n",
              "      <td>0</td>\n",
              "      <td>20091123</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8793</th>\n",
              "      <td>8793</td>\n",
              "      <td>9</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>249996.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>25</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>259355</td>\n",
              "      <td>0</td>\n",
              "      <td>20090313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8797</th>\n",
              "      <td>8797</td>\n",
              "      <td>22</td>\n",
              "      <td>119999.88</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>380004.0</td>\n",
              "      <td>5</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>639666</td>\n",
              "      <td>1</td>\n",
              "      <td>20090331</td>\n",
              "      <td>20090727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8800</th>\n",
              "      <td>8800</td>\n",
              "      <td>31</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>300000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>183611</td>\n",
              "      <td>1</td>\n",
              "      <td>20100304</td>\n",
              "      <td>20100703</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2056 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "3        3                     17  ...    20130331  20131231\n",
              "11      11                     17  ...    20130530  20131231\n",
              "15      15                     36  ...    20100831  20131231\n",
              "19      19                     21  ...    20100615  20131231\n",
              "24      24                     29  ...    20080623  20100822\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8775  8775                     12  ...    20120229  20130429\n",
              "8786  8786                     22  ...    20091123  20131231\n",
              "8793  8793                      9  ...    20090313  20131231\n",
              "8797  8797                     22  ...    20090331  20090727\n",
              "8800  8800                     31  ...    20100304  20100703\n",
              "\n",
              "[2056 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 399
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "tDo_24VWhdnw",
        "outputId": "18f2c853-6650-43e4-d6ea-bf0ee0b4eb96"
      },
      "source": [
        "df.loc[ df['MEMBER_GENDER'] != \"M\"  ,  ['MEMBER_GENDER'] ]"
      ],
      "id": "tDo_24VWhdnw",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8775</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8786</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8793</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8797</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8800</th>\n",
              "      <td>F</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2056 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     MEMBER_GENDER\n",
              "3                F\n",
              "11               F\n",
              "15               F\n",
              "19               F\n",
              "24               F\n",
              "...            ...\n",
              "8775             F\n",
              "8786             F\n",
              "8793             F\n",
              "8797             F\n",
              "8800             F\n",
              "\n",
              "[2056 rows x 1 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8d30564d-e800-4923-a5e8-f6c13b096eb1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "0dfb73b8-61ae-43a9-b88a-b1199461b21f"
      },
      "source": [
        "df.loc[df[\"MEMBER_AGE_AT_ISSUE\"] > 50, :]"
      ],
      "id": "8d30564d-e800-4923-a5e8-f6c13b096eb1",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10</td>\n",
              "      <td>97</td>\n",
              "      <td>100513.44</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>QUARTERLY</td>\n",
              "      <td>1132833</td>\n",
              "      <td>0</td>\n",
              "      <td>20110328</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>12</td>\n",
              "      <td>21</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>64</td>\n",
              "      <td>2</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>639944</td>\n",
              "      <td>1</td>\n",
              "      <td>20090720</td>\n",
              "      <td>20110216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>13</td>\n",
              "      <td>12</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>91799</td>\n",
              "      <td>0</td>\n",
              "      <td>20101029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8796</th>\n",
              "      <td>8796</td>\n",
              "      <td>32</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.499960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>63</td>\n",
              "      <td>3</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>1101755</td>\n",
              "      <td>1</td>\n",
              "      <td>20100809</td>\n",
              "      <td>20110408</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8799</th>\n",
              "      <td>8799</td>\n",
              "      <td>32</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.249992e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>59</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1330944</td>\n",
              "      <td>0</td>\n",
              "      <td>20121218</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8800</th>\n",
              "      <td>8800</td>\n",
              "      <td>31</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>3.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>183611</td>\n",
              "      <td>1</td>\n",
              "      <td>20100304</td>\n",
              "      <td>20100703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3388 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "1        1                     88  ...    20131014  20131231\n",
              "5        5                     27  ...    20100106  20110307\n",
              "10      10                     97  ...    20110328  20131231\n",
              "12      12                     21  ...    20090720  20110216\n",
              "13      13                     12  ...    20101029  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8796  8796                     32  ...    20100809  20110408\n",
              "8799  8799                     32  ...    20121218  20131231\n",
              "8800  8800                     31  ...    20100304  20100703\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "\n",
              "[3388 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 404
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3737f9f2-624e-4406-a826-d6148135b4b3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5347aa24-b82f-43d1-83b3-df8f13b66a90"
      },
      "source": [
        "# AND 연산\n",
        "(df['MEMBER_GENDER'] == \"M\") & (df[\"MEMBER_AGE_AT_ISSUE\"] > 50) "
      ],
      "id": "3737f9f2-624e-4406-a826-d6148135b4b3",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "1        True\n",
              "2       False\n",
              "3       False\n",
              "4       False\n",
              "        ...  \n",
              "8802     True\n",
              "8803    False\n",
              "8804     True\n",
              "8805    False\n",
              "8806    False\n",
              "Length: 8807, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 405
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "M_ODRillz13L",
        "outputId": "83dac766-14c6-46d0-9ea5-3b5168aa2879"
      },
      "source": [
        "df.loc[(df['MEMBER_GENDER'] == \"M\") & (df[\"MEMBER_AGE_AT_ISSUE\"] > 50)]"
      ],
      "id": "M_ODRillz13L",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10</td>\n",
              "      <td>97</td>\n",
              "      <td>100513.44</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>QUARTERLY</td>\n",
              "      <td>1132833</td>\n",
              "      <td>0</td>\n",
              "      <td>20110328</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>12</td>\n",
              "      <td>21</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>64</td>\n",
              "      <td>2</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>639944</td>\n",
              "      <td>1</td>\n",
              "      <td>20090720</td>\n",
              "      <td>20110216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>13</td>\n",
              "      <td>12</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>91799</td>\n",
              "      <td>0</td>\n",
              "      <td>20101029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8795</th>\n",
              "      <td>8795</td>\n",
              "      <td>67</td>\n",
              "      <td>260001.13</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>92</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1132866</td>\n",
              "      <td>0</td>\n",
              "      <td>20130527</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8796</th>\n",
              "      <td>8796</td>\n",
              "      <td>32</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.499960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>63</td>\n",
              "      <td>3</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>1101755</td>\n",
              "      <td>1</td>\n",
              "      <td>20100809</td>\n",
              "      <td>20110408</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8799</th>\n",
              "      <td>8799</td>\n",
              "      <td>32</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.249992e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>59</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1330944</td>\n",
              "      <td>0</td>\n",
              "      <td>20121218</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2600 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "1        1                     88  ...    20131014  20131231\n",
              "5        5                     27  ...    20100106  20110307\n",
              "10      10                     97  ...    20110328  20131231\n",
              "12      12                     21  ...    20090720  20110216\n",
              "13      13                     12  ...    20101029  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8795  8795                     67  ...    20130527  20131231\n",
              "8796  8796                     32  ...    20100809  20110408\n",
              "8799  8799                     32  ...    20121218  20131231\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "\n",
              "[2600 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 407
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f4ea9005-a640-4884-a3a3-f9abd372ea15",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "110f72dc-8419-454c-c7b0-aad567362ab2"
      },
      "source": [
        "(df['MEMBER_GENDER'] == \"M\") | (df[\"MEMBER_AGE_AT_ISSUE\"] > 50)"
      ],
      "id": "f4ea9005-a640-4884-a3a3-f9abd372ea15",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        True\n",
              "1        True\n",
              "2        True\n",
              "3       False\n",
              "4        True\n",
              "        ...  \n",
              "8802     True\n",
              "8803     True\n",
              "8804     True\n",
              "8805     True\n",
              "8806     True\n",
              "Length: 8807, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 411
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "72345c7b-0aa5-43a8-a99c-3e73a7d90aa1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "7d502879-796b-4169-fac9-86ee4410bee7"
      },
      "source": [
        "df.loc[(df['MEMBER_GENDER'] == \"M\") | (df[\"MEMBER_AGE_AT_ISSUE\"] > 50) , :]"
      ],
      "id": "72345c7b-0aa5-43a8-a99c-3e73a7d90aa1",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7539 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "5        5                     27  ...    20100106  20110307\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[7539 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 410
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1e5056b4-448c-4f1d-8fe1-47a1697f6011"
      },
      "source": [
        "## Quiz  \n",
        "데이터프레임에서, 20대 기혼인(숫자1) 고객 데이터를 추출합니다.  \n",
        "reset_index 명령을 사용하여 행 인덱스를 초기화하고, 새로운 데이터프레임의 크기(행, 열)를 출력합니다.  "
      ],
      "id": "1e5056b4-448c-4f1d-8fe1-47a1697f6011"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "db489872-a5b4-4245-a955-d1f23873ec91",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "7e64312f-35ca-45d3-a75f-f11cb1c2c47e"
      },
      "source": [
        "df.head(0)"
      ],
      "id": "db489872-a5b4-4245-a955-d1f23873ec91",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [id, MEMBERSHIP_TERM_YEARS, ANNUAL_FEES, MEMBER_MARITAL_STATUS, MEMBER_GENDER, MEMBER_ANNUAL_INCOME, MEMBER_OCCUPATION_CD, MEMBERSHIP_PACKAGE, MEMBER_AGE_AT_ISSUE, ADDITIONAL_MEMBERS, PAYMENT_MODE, AGENT_CODE, MEMBERSHIP_STATUS, START_DATE, END_DATE]\n",
              "Index: []"
            ]
          },
          "metadata": {},
          "execution_count": 414
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "2DEho_wg0dSq",
        "outputId": "1439c7cd-44f9-4e2a-9bd7-2596041e51ed"
      },
      "source": [
        "df"
      ],
      "id": "2DEho_wg0dSq",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8807 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 415
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "265ae80d-0c2f-4b28-aa72-c80781b22ab6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "2d16c021-03d8-4a79-8649-fbc606b4ba22"
      },
      "source": [
        "df.loc[(df['MEMBER_OCCUPATION_CD'] == 1)  , :]"
      ],
      "id": "265ae80d-0c2f-4b28-aa72-c80781b22ab6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8800</th>\n",
              "      <td>8800</td>\n",
              "      <td>31</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>3.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>183611</td>\n",
              "      <td>1</td>\n",
              "      <td>20100304</td>\n",
              "      <td>20100703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6203 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "5        5                     27  ...    20100106  20110307\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8800  8800                     31  ...    20100304  20100703\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[6203 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 423
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S8OYHwdm2L62",
        "outputId": "913ae701-7214-423d-a571-65e71bd036e3"
      },
      "source": [
        "(df['MEMBER_MARITAL_STATUS'] == 1) & ((df[\"MEMBER_AGE_AT_ISSUE\"] >= 20) &  df[\"MEMBER_AGE_AT_ISSUE\"] < 30)"
      ],
      "id": "S8OYHwdm2L62",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "1       False\n",
              "2       False\n",
              "3       False\n",
              "4       False\n",
              "        ...  \n",
              "8802    False\n",
              "8803    False\n",
              "8804    False\n",
              "8805    False\n",
              "8806    False\n",
              "Length: 8807, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 425
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "qt9Gorgc0Sci",
        "outputId": "c3a71899-316b-48b1-8236-ede5705afb87"
      },
      "source": [
        "df.loc[(df['MEMBER_MARITAL_STATUS'] == 1) & ((df[\"MEMBER_AGE_AT_ISSUE\"] >= 20) &  (df[\"MEMBER_AGE_AT_ISSUE\"] < 30)) , :]"
      ],
      "id": "qt9Gorgc0Sci",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>14</td>\n",
              "      <td>12</td>\n",
              "      <td>144001.08</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>380004.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>711644</td>\n",
              "      <td>0</td>\n",
              "      <td>20091127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.41</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>399996.0</td>\n",
              "      <td>5</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1341700</td>\n",
              "      <td>0</td>\n",
              "      <td>20130213</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>23</td>\n",
              "      <td>63</td>\n",
              "      <td>100004.62</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>800004.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>827422</td>\n",
              "      <td>0</td>\n",
              "      <td>20100331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>28</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>500004.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>672199</td>\n",
              "      <td>0</td>\n",
              "      <td>20090831</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>30</td>\n",
              "      <td>53</td>\n",
              "      <td>120000.96</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>274992.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>549577</td>\n",
              "      <td>1</td>\n",
              "      <td>20081229</td>\n",
              "      <td>20090428</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8750</th>\n",
              "      <td>8750</td>\n",
              "      <td>12</td>\n",
              "      <td>200000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>200004.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>SEMI-ANNUAL</td>\n",
              "      <td>30522</td>\n",
              "      <td>0</td>\n",
              "      <td>20070718</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8751</th>\n",
              "      <td>8751</td>\n",
              "      <td>69</td>\n",
              "      <td>300000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>600000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1006566</td>\n",
              "      <td>0</td>\n",
              "      <td>20100830</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8770</th>\n",
              "      <td>8770</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.41</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>499992.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1244888</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8788</th>\n",
              "      <td>8788</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>849996.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>215733</td>\n",
              "      <td>0</td>\n",
              "      <td>20080331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8798</th>\n",
              "      <td>8798</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>300000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>815888</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>599 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "14      14                     12  ...    20091127  20131231\n",
              "17      17                     17  ...    20130213  20131231\n",
              "23      23                     63  ...    20100331  20131231\n",
              "28      28                     17  ...    20090831  20131231\n",
              "30      30                     53  ...    20081229  20090428\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8750  8750                     12  ...    20070718  20131231\n",
              "8751  8751                     69  ...    20100830  20131231\n",
              "8770  8770                     17  ...    20130331  20131231\n",
              "8788  8788                     17  ...    20080331  20131231\n",
              "8798  8798                     22  ...    20100115  20131231\n",
              "\n",
              "[599 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 428
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "64cc4197-0fad-4572-b273-8d8a698f72d7"
      },
      "source": [
        "### 결측값 제거"
      ],
      "id": "64cc4197-0fad-4572-b273-8d8a698f72d7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "8p75dYGp7UQa",
        "outputId": "e148d314-6fe4-48d1-d23c-0f636588207e"
      },
      "source": [
        "df.isnull()"
      ],
      "id": "8p75dYGp7UQa",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0     False                  False  ...       False     False\n",
              "1     False                  False  ...       False     False\n",
              "2     False                  False  ...       False     False\n",
              "3     False                  False  ...       False     False\n",
              "4     False                  False  ...       False     False\n",
              "...     ...                    ...  ...         ...       ...\n",
              "8802  False                  False  ...       False     False\n",
              "8803  False                  False  ...       False     False\n",
              "8804  False                  False  ...       False     False\n",
              "8805  False                  False  ...       False     False\n",
              "8806  False                  False  ...       False     False\n",
              "\n",
              "[8807 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 431
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-2ayEGEb7n-I",
        "outputId": "fd35a7da-b4d4-45f5-effc-84775efb4caf"
      },
      "source": [
        "df.isnull(). sum()"
      ],
      "id": "-2ayEGEb7n-I",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                       0\n",
              "MEMBERSHIP_TERM_YEARS    0\n",
              "ANNUAL_FEES              0\n",
              "MEMBER_MARITAL_STATUS    0\n",
              "MEMBER_GENDER            0\n",
              "MEMBER_ANNUAL_INCOME     0\n",
              "MEMBER_OCCUPATION_CD     0\n",
              "MEMBERSHIP_PACKAGE       0\n",
              "MEMBER_AGE_AT_ISSUE      0\n",
              "ADDITIONAL_MEMBERS       0\n",
              "PAYMENT_MODE             0\n",
              "AGENT_CODE               0\n",
              "MEMBERSHIP_STATUS        0\n",
              "START_DATE               0\n",
              "END_DATE                 0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 435
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n9wgDpCy7nZa"
      },
      "source": [
        "df.loc[5:20, 'MEMBER_GENDER'] = np.nan"
      ],
      "id": "n9wgDpCy7nZa",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5841025a-eb1d-482d-a5e1-e590b0a53e78",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dcf69ee3-9781-4977-8f12-eaa4799739cc"
      },
      "source": [
        "df.isnull(). sum()"
      ],
      "id": "5841025a-eb1d-482d-a5e1-e590b0a53e78",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                        0\n",
              "MEMBERSHIP_TERM_YEARS     0\n",
              "ANNUAL_FEES               0\n",
              "MEMBER_MARITAL_STATUS     0\n",
              "MEMBER_GENDER            16\n",
              "MEMBER_ANNUAL_INCOME      0\n",
              "MEMBER_OCCUPATION_CD      0\n",
              "MEMBERSHIP_PACKAGE        0\n",
              "MEMBER_AGE_AT_ISSUE       0\n",
              "ADDITIONAL_MEMBERS        0\n",
              "PAYMENT_MODE              0\n",
              "AGENT_CODE                0\n",
              "MEMBERSHIP_STATUS         0\n",
              "START_DATE                0\n",
              "END_DATE                  0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 442
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 379
        },
        "id": "4MpFh4Gs89MZ",
        "outputId": "7429f669-80e0-4396-adf8-f30f27f19aa9"
      },
      "source": [
        "df[0 : 10]"
      ],
      "id": "4MpFh4Gs89MZ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6</td>\n",
              "      <td>17</td>\n",
              "      <td>103016.16</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.999960e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>348099</td>\n",
              "      <td>0</td>\n",
              "      <td>20130930</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7</td>\n",
              "      <td>83</td>\n",
              "      <td>235936.93</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.011200e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>323400</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8</td>\n",
              "      <td>88</td>\n",
              "      <td>100534.50</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>824055</td>\n",
              "      <td>0</td>\n",
              "      <td>20101231</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>300002.40</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.499920e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>2</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>1360477</td>\n",
              "      <td>1</td>\n",
              "      <td>20121130</td>\n",
              "      <td>20130329</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0   0                     22  ...    20091029  20131231\n",
              "1   1                     88  ...    20131014  20131231\n",
              "2   2                     93  ...    20130531  20131231\n",
              "3   3                     17  ...    20130331  20131231\n",
              "4   4                     39  ...    20080313  20131231\n",
              "5   5                     27  ...    20100106  20110307\n",
              "6   6                     17  ...    20130930  20131231\n",
              "7   7                     83  ...    20130331  20131231\n",
              "8   8                     88  ...    20101231  20131231\n",
              "9   9                     12  ...    20121130  20130329\n",
              "\n",
              "[10 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 445
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 379
        },
        "id": "SvYjuPxr82_d",
        "outputId": "eb2587a4-87e1-497f-8f7c-3f139f22c2a6"
      },
      "source": [
        "df.head(10)"
      ],
      "id": "SvYjuPxr82_d",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6</td>\n",
              "      <td>17</td>\n",
              "      <td>103016.16</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.999960e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>348099</td>\n",
              "      <td>0</td>\n",
              "      <td>20130930</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7</td>\n",
              "      <td>83</td>\n",
              "      <td>235936.93</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.011200e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>323400</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8</td>\n",
              "      <td>88</td>\n",
              "      <td>100534.50</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>824055</td>\n",
              "      <td>0</td>\n",
              "      <td>20101231</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>300002.40</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.499920e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>2</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>1360477</td>\n",
              "      <td>1</td>\n",
              "      <td>20121130</td>\n",
              "      <td>20130329</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0   0                     22  ...    20091029  20131231\n",
              "1   1                     88  ...    20131014  20131231\n",
              "2   2                     93  ...    20130531  20131231\n",
              "3   3                     17  ...    20130331  20131231\n",
              "4   4                     39  ...    20080313  20131231\n",
              "5   5                     27  ...    20100106  20110307\n",
              "6   6                     17  ...    20130930  20131231\n",
              "7   7                     83  ...    20130331  20131231\n",
              "8   8                     88  ...    20101231  20131231\n",
              "9   9                     12  ...    20121130  20130329\n",
              "\n",
              "[10 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 444
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 379
        },
        "id": "ec9Ux3I_8uiu",
        "outputId": "0f334415-107a-48e7-b8ab-bbc2eba3c166"
      },
      "source": [
        "df.isnull(). head(10)"
      ],
      "id": "ec9Ux3I_8uiu",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0  False                  False  ...       False     False\n",
              "1  False                  False  ...       False     False\n",
              "2  False                  False  ...       False     False\n",
              "3  False                  False  ...       False     False\n",
              "4  False                  False  ...       False     False\n",
              "5  False                  False  ...       False     False\n",
              "6  False                  False  ...       False     False\n",
              "7  False                  False  ...       False     False\n",
              "8  False                  False  ...       False     False\n",
              "9  False                  False  ...       False     False\n",
              "\n",
              "[10 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 443
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iyeEv-XW9K1K",
        "outputId": "2a8c08bb-2d08-4298-ff87-378c64f2261f"
      },
      "source": [
        "df.isnull(). sum()"
      ],
      "id": "iyeEv-XW9K1K",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                        0\n",
              "MEMBERSHIP_TERM_YEARS     0\n",
              "ANNUAL_FEES               0\n",
              "MEMBER_MARITAL_STATUS     0\n",
              "MEMBER_GENDER            16\n",
              "MEMBER_ANNUAL_INCOME      0\n",
              "MEMBER_OCCUPATION_CD      0\n",
              "MEMBERSHIP_PACKAGE        0\n",
              "MEMBER_AGE_AT_ISSUE       0\n",
              "ADDITIONAL_MEMBERS        0\n",
              "PAYMENT_MODE              0\n",
              "AGENT_CODE                0\n",
              "MEMBERSHIP_STATUS         0\n",
              "START_DATE                0\n",
              "END_DATE                  0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 446
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0TLBV7CB81w0",
        "outputId": "0eb0894c-0bc1-4e4d-9de0-7caf88e3335c"
      },
      "source": [
        "df.notnull(). sum()"
      ],
      "id": "0TLBV7CB81w0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id                       8807\n",
              "MEMBERSHIP_TERM_YEARS    8807\n",
              "ANNUAL_FEES              8807\n",
              "MEMBER_MARITAL_STATUS    8807\n",
              "MEMBER_GENDER            8791\n",
              "MEMBER_ANNUAL_INCOME     8807\n",
              "MEMBER_OCCUPATION_CD     8807\n",
              "MEMBERSHIP_PACKAGE       8807\n",
              "MEMBER_AGE_AT_ISSUE      8807\n",
              "ADDITIONAL_MEMBERS       8807\n",
              "PAYMENT_MODE             8807\n",
              "AGENT_CODE               8807\n",
              "MEMBERSHIP_STATUS        8807\n",
              "START_DATE               8807\n",
              "END_DATE                 8807\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 447
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c2c7e5d4-11c5-4394-87d4-29586c5cd1a0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "851d7652-d077-4236-996f-e6fb7df66195"
      },
      "source": [
        "df.dropna()"
      ],
      "id": "c2c7e5d4-11c5-4394-87d4-29586c5cd1a0",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8791 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8791 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 448
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6c4a1236-a55e-4568-8a24-26c4516b8fea"
      },
      "source": [
        "df['MEMBER_GENDER'].dropna()"
      ],
      "id": "6c4a1236-a55e-4568-8a24-26c4516b8fea",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ptcdkTNgArCW"
      },
      "source": [
        ""
      ],
      "id": "ptcdkTNgArCW",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f42c6bd4-bd15-4d12-8578-05e8ba71e2c4"
      },
      "source": [
        "df['MEMBER_GENDER'].dropna().shape"
      ],
      "id": "f42c6bd4-bd15-4d12-8578-05e8ba71e2c4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b20f767a-35ca-4949-be98-f13825fa2b0c"
      },
      "source": [
        "df['MEMBER_GENDER'].shape"
      ],
      "id": "b20f767a-35ca-4949-be98-f13825fa2b0c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "117c6b84-b4ed-48b4-aba7-8b7ba4b5bc9a"
      },
      "source": [
        "### 결측값 대체"
      ],
      "id": "117c6b84-b4ed-48b4-aba7-8b7ba4b5bc9a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "da2k33r7AsHO"
      },
      "source": [
        "df_new = df.copy()"
      ],
      "id": "da2k33r7AsHO",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4f83d598-f5c6-4baf-b98e-4185154ba1a5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ebefa250-affa-4ccd-a55d-ec23849b4491"
      },
      "source": [
        "df_new = df.copy()\n",
        "df_new.loc[df_new[\"MEMBER_GENDER\"].isnull(), \"MEMBER_GENDER\"] = df_new[\"MEMBER_GENDER\"].mode()[0]\n",
        "df_new[\"MEMBER_GENDER\"].value_counts()"
      ],
      "id": "4f83d598-f5c6-4baf-b98e-4185154ba1a5",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "M    6754\n",
              "F    2053\n",
              "Name: MEMBER_GENDER, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 450
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "okoP3r08BCe8",
        "outputId": "b3b67774-ad80-4737-8f1f-eb7ed01fc808"
      },
      "source": [
        "df_new['MEMBER_GENDER'].mode()[0]"
      ],
      "id": "okoP3r08BCe8",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'M'"
            ]
          },
          "metadata": {},
          "execution_count": 452
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QbS03GKXBRZT",
        "outputId": "ebd5578f-5479-4711-dec9-153b694f0d33"
      },
      "source": [
        "df_new['MEMBER_GENDER'].value_counts()"
      ],
      "id": "QbS03GKXBRZT",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "M    6754\n",
              "F    2053\n",
              "Name: MEMBER_GENDER, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 453
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "h3aX0mASBfIt",
        "outputId": "1a075f93-25d4-40fc-b66b-916dd67f9ffc"
      },
      "source": [
        "df_new['MEMBER_GENDER'].value_counts().index[0]"
      ],
      "id": "h3aX0mASBfIt",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'M'"
            ]
          },
          "metadata": {},
          "execution_count": 461
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O0K0FJUiCMTI",
        "outputId": "7b6c3714-58c8-442e-a6bb-ce4a2cff14fd"
      },
      "source": [
        "df_new['MEMBER_GENDER'].isnull()"
      ],
      "id": "O0K0FJUiCMTI",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "1       False\n",
              "2       False\n",
              "3       False\n",
              "4       False\n",
              "        ...  \n",
              "8802    False\n",
              "8803    False\n",
              "8804    False\n",
              "8805    False\n",
              "8806    False\n",
              "Name: MEMBER_GENDER, Length: 8807, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 463
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_PzwJHtsCSi4"
      },
      "source": [
        "df_new.loc[  df_new['MEMBER_GENDER'].isnull()   ,  'MEMBER_GENDER'   ]   =  df_new['MEMBER_GENDER'].mode()[0]"
      ],
      "id": "_PzwJHtsCSi4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "St8YsRRJC_UH"
      },
      "source": [
        "df_new.loc[[3, 5, 10], '']"
      ],
      "id": "St8YsRRJC_UH",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d06203dd-a8cb-4abf-9e63-f8416a623c9f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ef47c821-869a-4469-bd12-613aff23f5a6"
      },
      "source": [
        "df_new[\"MEMBER_ANNUAL_INCOME\"].value_counts(dropna=False)"
      ],
      "id": "d06203dd-a8cb-4abf-9e63-f8416a623c9f",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.375036e+06    1469\n",
              "3.999960e+05     518\n",
              "9.999960e+05     512\n",
              "3.000000e+05     489\n",
              "6.000000e+05     458\n",
              "                ... \n",
              "1.535520e+05       1\n",
              "1.323533e+07       1\n",
              "6.469920e+05       1\n",
              "2.150004e+06       1\n",
              "1.015776e+06       1\n",
              "Name: MEMBER_ANNUAL_INCOME, Length: 720, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 462
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "26c474b3-2a05-4507-836c-6c91f0c27c14",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1592c69b-8528-4aa1-ac27-8297dee8f0ed"
      },
      "source": [
        "df_new[\"MEMBER_ANNUAL_INCOME\"].mean()"
      ],
      "id": "26c474b3-2a05-4507-836c-6c91f0c27c14",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1375036.0850368396"
            ]
          },
          "metadata": {},
          "execution_count": 468
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Lhm2FpdHDdGk",
        "outputId": "5bf0a2b7-212c-4d54-fd7c-6768ad32cfab"
      },
      "source": [
        "df_new[\"MEMBER_ANNUAL_INCOME\"].fillna(100)"
      ],
      "id": "Lhm2FpdHDdGk",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       4.500000e+05\n",
              "1       1.375036e+06\n",
              "2       6.000000e+05\n",
              "3       4.500000e+05\n",
              "4       6.000000e+05\n",
              "            ...     \n",
              "8802    1.375036e+06\n",
              "8803    3.999960e+05\n",
              "8804    2.250000e+06\n",
              "8805    6.000000e+05\n",
              "8806    2.000004e+06\n",
              "Name: MEMBER_ANNUAL_INCOME, Length: 8807, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 469
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nSppit1KDor7",
        "outputId": "b9e0c50f-b458-4173-84dd-3caa858abd7b"
      },
      "source": [
        "df_new[\"MEMBER_ANNUAL_INCOME\"].fillna(df_new[\"MEMBER_ANNUAL_INCOME\"].mean())"
      ],
      "id": "nSppit1KDor7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       4.500000e+05\n",
              "1       1.375036e+06\n",
              "2       6.000000e+05\n",
              "3       4.500000e+05\n",
              "4       6.000000e+05\n",
              "            ...     \n",
              "8802    1.375036e+06\n",
              "8803    3.999960e+05\n",
              "8804    2.250000e+06\n",
              "8805    6.000000e+05\n",
              "8806    2.000004e+06\n",
              "Name: MEMBER_ANNUAL_INCOME, Length: 8807, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 470
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a7664277-28c4-4f72-bdeb-a09894123546"
      },
      "source": [
        "df_new[\"MEMBER_ANNUAL_INCOME\"] = df_new[\"MEMBER_ANNUAL_INCOME\"].fillna(df_new[\"MEMBER_ANNUAL_INCOME\"].mean())\n",
        "df_new[\"MEMBER_ANNUAL_INCOME\"].isnull().sum()"
      ],
      "id": "a7664277-28c4-4f72-bdeb-a09894123546",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d9371d51-6c21-41e6-bc5f-9488501d40d9"
      },
      "source": [
        "## Quiz  \n",
        "df_new 데이터프레임에서, 결측치가 있는 컬럼을 찾아서 적절한 방식으로 처리합니다. END_DATE 변수는 멤버십 종료일을 나타내고, 현재 가입 유지 중인 경우 결측치로 표현됩니다. 현재 시점의 기준일은 2013년 12월 31일로 계산합니다. "
      ],
      "id": "d9371d51-6c21-41e6-bc5f-9488501d40d9"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9486e15c-9ccb-4f06-8f40-323f3c2e9a64"
      },
      "source": [
        ""
      ],
      "id": "9486e15c-9ccb-4f06-8f40-323f3c2e9a64",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "373c915e-260f-43e2-befc-7849f3b8029f"
      },
      "source": [
        ""
      ],
      "id": "373c915e-260f-43e2-befc-7849f3b8029f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "909c71ea-4820-47e8-b060-a220411dda13"
      },
      "source": [
        "### 이상치 처리"
      ],
      "id": "909c71ea-4820-47e8-b060-a220411dda13"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2693f728-39a2-4616-bac7-38b9a1ddf256",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 252
        },
        "outputId": "526fbc96-1b7e-49fe-f973-829215709f45"
      },
      "source": [
        "sns.boxplot(y='MEMBERSHIP_TERM_YEARS', data=df, palette='Accent');"
      ],
      "id": "2693f728-39a2-4616-bac7-38b9a1ddf256",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ebf03337-d989-4c57-b4ab-c18e0ffb1b29",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "outputId": "8843a4fc-cd25-45c3-a14c-269b5f74e322"
      },
      "source": [
        "# 80년 이상인 데이터를 삭제\n",
        "df.loc[df['MEMBERSHIP_TERM_YEARS'] < 80, :]"
      ],
      "id": "ebf03337-d989-4c57-b4ab-c18e0ffb1b29",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>27</td>\n",
              "      <td>100001.00</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>802744</td>\n",
              "      <td>1</td>\n",
              "      <td>20100106</td>\n",
              "      <td>20110307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>6</td>\n",
              "      <td>17</td>\n",
              "      <td>103016.16</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.999960e+05</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>348099</td>\n",
              "      <td>0</td>\n",
              "      <td>20130930</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8286 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "5        5                     27  ...    20100106  20110307\n",
              "6        6                     17  ...    20130930  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8286 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 472
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "00967097-94c9-4416-b53e-ba62acfe6158"
      },
      "source": [
        "# 80년 이상에 대해서는 최대값을 80으로 고정\n",
        "# df.loc[df['MEMBERSHIP_TERM_YEARS'] > 80, 'MEMBERSHIP_TERM_YEARS'] = 80"
      ],
      "id": "00967097-94c9-4416-b53e-ba62acfe6158",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bb2ae385-592c-4519-86ff-f5781fb2d656"
      },
      "source": [
        "### 함수 매핑"
      ],
      "id": "bb2ae385-592c-4519-86ff-f5781fb2d656"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6b2a659b-7a3a-4e1b-9e95-25477973adf7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ef87fbde-7ef6-47b1-f007-4d10211521bf"
      },
      "source": [
        "df_new['MEMBER_MARITAL_STATUS'].value_counts(dropna=False)"
      ],
      "id": "6b2a659b-7a3a-4e1b-9e95-25477973adf7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    7665\n",
              "1     977\n",
              "2     128\n",
              "3      37\n",
              "Name: MEMBER_MARITAL_STATUS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 474
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "610788a0-ce88-4559-9b43-d17188728b5a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7bd7c4e9-5544-4467-a20c-a9caeeb9a82b"
      },
      "source": [
        "df_new['MEMBER_MARITAL_STATUS'] = df_new['MEMBER_MARITAL_STATUS'].map({'M':0, 'S':1, 'W':2, 'D':3})\n",
        "df_new['MEMBER_MARITAL_STATUS'].value_counts(dropna=False)"
      ],
      "id": "610788a0-ce88-4559-9b43-d17188728b5a",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NaN    8807\n",
              "Name: MEMBER_MARITAL_STATUS, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 475
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "661b46f0-4f12-4f7a-9ae0-0caa381513b1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2591d4b1-6cbc-4293-a81b-cc95267ac128"
      },
      "source": [
        "package_encoding = {'TYPE-A':0, 'TYPE-B':1}\n",
        "\n",
        "# map\n",
        "df_new['MEMBERSHIP_PACKAGE'].map(package_encoding)"
      ],
      "id": "661b46f0-4f12-4f7a-9ae0-0caa381513b1",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       1\n",
              "1       0\n",
              "2       0\n",
              "3       0\n",
              "4       1\n",
              "       ..\n",
              "8802    1\n",
              "8803    1\n",
              "8804    0\n",
              "8805    1\n",
              "8806    1\n",
              "Name: MEMBERSHIP_PACKAGE, Length: 8807, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 476
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9e7afb22-4660-4e5c-a36e-72609ab1da97",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6a8cc036-0ddb-453a-d6a2-3b3a3f31ee06"
      },
      "source": [
        "# apply - lambda\n",
        "df_new['MEMBERSHIP_PACKAGE'].apply(lambda x: package_encoding[x])"
      ],
      "id": "9e7afb22-4660-4e5c-a36e-72609ab1da97",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       1\n",
              "1       0\n",
              "2       0\n",
              "3       0\n",
              "4       1\n",
              "       ..\n",
              "8802    1\n",
              "8803    1\n",
              "8804    0\n",
              "8805    1\n",
              "8806    1\n",
              "Name: MEMBERSHIP_PACKAGE, Length: 8807, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 477
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9f8c8f99-6460-48f7-86b2-7624a37d0042",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "46a25956-e0dc-4acf-c09b-0fdbc3d306cb"
      },
      "source": [
        "# np.where 연산\n",
        "\n",
        "np.where(df_new['MEMBERSHIP_PACKAGE']=='TYPE-A', 0, 1)"
      ],
      "id": "9f8c8f99-6460-48f7-86b2-7624a37d0042",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 0, 0, ..., 0, 1, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 478
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 172
        },
        "id": "X37YK0ISXsm6",
        "outputId": "de626857-c2f6-4f93-d5b1-3b34eab33e03"
      },
      "source": [
        "df"
      ],
      "id": "X37YK0ISXsm6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-3-00cf07b74dcd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8c5f269d-0fd5-4b4e-847e-627a56e17b06"
      },
      "source": [
        "## Quiz  \n",
        "MEMBER_AGE_AT_ISSUE 열의 나이를 비식별화 합니다. (20대, 30대, 40대, ...)"
      ],
      "id": "8c5f269d-0fd5-4b4e-847e-627a56e17b06"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ec5ffcc6-d4f2-42b5-9644-85f7efa7d32e"
      },
      "source": [
        "# 히스토그램 \n",
        "df_new['MEMBER_AGE_AT_ISSUE'].hist()"
      ],
      "id": "ec5ffcc6-d4f2-42b5-9644-85f7efa7d32e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "49083310-3ff8-418f-a30d-ebd4b780134b"
      },
      "source": [
        ""
      ],
      "id": "49083310-3ff8-418f-a30d-ebd4b780134b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "947e2523-9788-46fa-92bd-b655be1f48cf"
      },
      "source": [
        ""
      ],
      "id": "947e2523-9788-46fa-92bd-b655be1f48cf",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "90e3a787-8954-4413-8753-ebf7adf1c6d7"
      },
      "source": [
        "### 데이터프레임 -> Excel 파일"
      ],
      "id": "90e3a787-8954-4413-8753-ebf7adf1c6d7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "1XxEqAVil1J4",
        "outputId": "0f953e74-bba1-452b-95c1-015c037ef759"
      },
      "source": [
        "df\n"
      ],
      "id": "1XxEqAVil1J4",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>MEMBERSHIP_TERM_YEARS</th>\n",
              "      <th>ANNUAL_FEES</th>\n",
              "      <th>MEMBER_MARITAL_STATUS</th>\n",
              "      <th>MEMBER_GENDER</th>\n",
              "      <th>MEMBER_ANNUAL_INCOME</th>\n",
              "      <th>MEMBER_OCCUPATION_CD</th>\n",
              "      <th>MEMBERSHIP_PACKAGE</th>\n",
              "      <th>MEMBER_AGE_AT_ISSUE</th>\n",
              "      <th>ADDITIONAL_MEMBERS</th>\n",
              "      <th>PAYMENT_MODE</th>\n",
              "      <th>AGENT_CODE</th>\n",
              "      <th>MEMBERSHIP_STATUS</th>\n",
              "      <th>START_DATE</th>\n",
              "      <th>END_DATE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>666099</td>\n",
              "      <td>0</td>\n",
              "      <td>20091029</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>88</td>\n",
              "      <td>149029.58</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>6</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>132000</td>\n",
              "      <td>0</td>\n",
              "      <td>20131014</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>93</td>\n",
              "      <td>102999.94</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1407177</td>\n",
              "      <td>0</td>\n",
              "      <td>20130531</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>17</td>\n",
              "      <td>147576.48</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.500000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>47</td>\n",
              "      <td>3</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>343344</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>39</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>36</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>119199</td>\n",
              "      <td>0</td>\n",
              "      <td>20080313</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8802</th>\n",
              "      <td>8802</td>\n",
              "      <td>17</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.375036e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>744188</td>\n",
              "      <td>0</td>\n",
              "      <td>20100115</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8803</th>\n",
              "      <td>8803</td>\n",
              "      <td>49</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>3.999960e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>841477</td>\n",
              "      <td>0</td>\n",
              "      <td>20100208</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8804</th>\n",
              "      <td>8804</td>\n",
              "      <td>54</td>\n",
              "      <td>600001.16</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.250000e+06</td>\n",
              "      <td>2</td>\n",
              "      <td>TYPE-A</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>1347855</td>\n",
              "      <td>0</td>\n",
              "      <td>20130331</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8805</th>\n",
              "      <td>8805</td>\n",
              "      <td>27</td>\n",
              "      <td>100000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>6.000000e+05</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>ANNUAL</td>\n",
              "      <td>798833</td>\n",
              "      <td>0</td>\n",
              "      <td>20100127</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8806</th>\n",
              "      <td>8806</td>\n",
              "      <td>12</td>\n",
              "      <td>100000.80</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.000004e+06</td>\n",
              "      <td>1</td>\n",
              "      <td>TYPE-B</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>MONTHLY</td>\n",
              "      <td>664844</td>\n",
              "      <td>0</td>\n",
              "      <td>20100827</td>\n",
              "      <td>20131231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8807 rows × 15 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        id  MEMBERSHIP_TERM_YEARS  ...  START_DATE  END_DATE\n",
              "0        0                     22  ...    20091029  20131231\n",
              "1        1                     88  ...    20131014  20131231\n",
              "2        2                     93  ...    20130531  20131231\n",
              "3        3                     17  ...    20130331  20131231\n",
              "4        4                     39  ...    20080313  20131231\n",
              "...    ...                    ...  ...         ...       ...\n",
              "8802  8802                     17  ...    20100115  20131231\n",
              "8803  8803                     49  ...    20100208  20131231\n",
              "8804  8804                     54  ...    20130331  20131231\n",
              "8805  8805                     27  ...    20100127  20131231\n",
              "8806  8806                     12  ...    20100827  20131231\n",
              "\n",
              "[8807 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jZV7FhfMlNtT"
      },
      "source": [
        "# df.to_excel('test.xlsx' ,  index=False)"
      ],
      "id": "jZV7FhfMlNtT",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d74716f2-5bd7-4e0d-9466-86d9fad98f87"
      },
      "source": [
        "df.to_excel(\"membership_revised.xlsx\", index=False)"
      ],
      "id": "d74716f2-5bd7-4e0d-9466-86d9fad98f87",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4e3ce650-1ccd-4524-b555-e194d4d33485"
      },
      "source": [
        "### Excel 파일 -> 데이터프레임"
      ],
      "id": "4e3ce650-1ccd-4524-b555-e194d4d33485"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fbfbf6aa-fa58-485a-b745-799d0b4c677e"
      },
      "source": [
        "df_new = pd.read_excel(\"membership_revised.xlsx\", engine='openpyxl')\n",
        "df_new"
      ],
      "id": "fbfbf6aa-fa58-485a-b745-799d0b4c677e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "27df065b-d1e3-44a8-9912-84cf1928aac4"
      },
      "source": [
        "### 데이터프레임 -> CSV 파일"
      ],
      "id": "27df065b-d1e3-44a8-9912-84cf1928aac4"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aff5b697-5b5b-43b1-80da-d8ecbbbf1296"
      },
      "source": [
        "df_new.to_csv(\"membership_revised.csv\", index=False)"
      ],
      "id": "aff5b697-5b5b-43b1-80da-d8ecbbbf1296",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "71607788-e5cd-4d38-a2d1-2299e54ad913"
      },
      "source": [
        "### CSV 파일 -> 데이터프레임"
      ],
      "id": "71607788-e5cd-4d38-a2d1-2299e54ad913"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4296d718-5c3d-4bec-8a5d-5283ffae01ac"
      },
      "source": [
        "df_new = pd.read_csv(\"membership_revised.csv\")\n",
        "df_new"
      ],
      "id": "4296d718-5c3d-4bec-8a5d-5283ffae01ac",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DfCYGE--wgdY"
      },
      "source": [
        ""
      ],
      "id": "DfCYGE--wgdY",
      "execution_count": null,
      "outputs": []
    }
  ]
}